{
  "api/AspNetCoreGeneratedDocument.Views_ChumonJisseki_Index.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_ChumonJisseki_Index.html",
    "title": "Class Views_ChumonJisseki_Index | Convenience",
    "keywords": "Class Views_ChumonJisseki_Index Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/ChumonJisseki/Index.cshtml\")] internal sealed class Views_ChumonJisseki_Index : RazorPage<ChumonJissekiViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ChumonJissekiViewModel> Views_ChumonJisseki_Index Implements IRazorPage Inherited Members RazorPage<ChumonJissekiViewModel>.Model RazorPage<ChumonJissekiViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper private OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper Field Value OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper private SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper Field Value SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper private ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper Field Value ValidationSummaryTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_10 private static readonly TagHelperAttribute __tagHelperAttribute_10 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperAttribute_9 private static readonly TagHelperAttribute __tagHelperAttribute_9 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ChumonJissekiViewModel> Html { get; private set; } Property Value IHtmlHelper<ChumonJissekiViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Chumon_ChumonMeisai.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Chumon_ChumonMeisai.html",
    "title": "Class Views_Chumon_ChumonMeisai | Convenience",
    "keywords": "Class Views_Chumon_ChumonMeisai Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Chumon/ChumonMeisai.cshtml\")] internal sealed class Views_Chumon_ChumonMeisai : RazorPage<ChumonViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ChumonViewModel> Views_Chumon_ChumonMeisai Implements IRazorPage Inherited Members RazorPage<ChumonViewModel>.Model RazorPage<ChumonViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper private ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper Field Value ValidationMessageTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_10 private static readonly TagHelperAttribute __tagHelperAttribute_10 Field Value TagHelperAttribute __tagHelperAttribute_11 private static readonly TagHelperAttribute __tagHelperAttribute_11 Field Value TagHelperAttribute __tagHelperAttribute_12 private static readonly TagHelperAttribute __tagHelperAttribute_12 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperAttribute_9 private static readonly TagHelperAttribute __tagHelperAttribute_9 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ChumonViewModel> Html { get; private set; } Property Value IHtmlHelper<ChumonViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Chumon_KeyInput.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Chumon_KeyInput.html",
    "title": "Class Views_Chumon_KeyInput | Convenience",
    "keywords": "Class Views_Chumon_KeyInput Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Chumon/KeyInput.cshtml\")] internal sealed class Views_Chumon_KeyInput : RazorPage<ChumonKeysViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ChumonKeysViewModel> Views_Chumon_KeyInput Implements IRazorPage Inherited Members RazorPage<ChumonKeysViewModel>.Model RazorPage<ChumonKeysViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper private OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper Field Value OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper private SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper Field Value SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper private ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper Field Value ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper private ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper Field Value ValidationSummaryTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ChumonKeysViewModel> Html { get; private set; } Property Value IHtmlHelper<ChumonKeysViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Home_Index.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Home_Index.html",
    "title": "Class Views_Home_Index | Convenience",
    "keywords": "Class Views_Home_Index Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Home/Index.cshtml\")] internal sealed class Views_Home_Index : RazorPage<Menu>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<Menu> Views_Home_Index Implements IRazorPage Inherited Members RazorPage<Menu>.Model RazorPage<Menu>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<Menu> Html { get; private set; } Property Value IHtmlHelper<Menu> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Home_Privacy.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Home_Privacy.html",
    "title": "Class Views_Home_Privacy | Convenience",
    "keywords": "Class Views_Home_Privacy Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Home/Privacy.cshtml\")] internal sealed class Views_Home_Privacy : RazorPage<dynamic>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<dynamic> Views_Home_Privacy Implements IRazorPage Inherited Members RazorPage<dynamic>.Model RazorPage<dynamic>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<dynamic> Html { get; private set; } Property Value IHtmlHelper<dynamic> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_KaikeiJisseki_Index.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_KaikeiJisseki_Index.html",
    "title": "Class Views_KaikeiJisseki_Index | Convenience",
    "keywords": "Class Views_KaikeiJisseki_Index Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/KaikeiJisseki/Index.cshtml\")] internal sealed class Views_KaikeiJisseki_Index : RazorPage<KaikeiJissekiViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<KaikeiJissekiViewModel> Views_KaikeiJisseki_Index Implements IRazorPage Inherited Members RazorPage<KaikeiJissekiViewModel>.Model RazorPage<KaikeiJissekiViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper private OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper Field Value OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper private SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper Field Value SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper private ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper Field Value ValidationSummaryTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_10 private static readonly TagHelperAttribute __tagHelperAttribute_10 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperAttribute_9 private static readonly TagHelperAttribute __tagHelperAttribute_9 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<KaikeiJissekiViewModel> Html { get; private set; } Property Value IHtmlHelper<KaikeiJissekiViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Kaikei_Kaikei.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Kaikei_Kaikei.html",
    "title": "Class Views_Kaikei_Kaikei | Convenience",
    "keywords": "Class Views_Kaikei_Kaikei Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Kaikei/Kaikei.cshtml\")] internal sealed class Views_Kaikei_Kaikei : RazorPage<KaikeiViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<KaikeiViewModel> Views_Kaikei_Kaikei Implements IRazorPage Inherited Members RazorPage<KaikeiViewModel>.Model RazorPage<KaikeiViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper private FormActionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper Field Value FormActionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper private OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper Field Value OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper private SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper Field Value SelectTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_10 private static readonly TagHelperAttribute __tagHelperAttribute_10 Field Value TagHelperAttribute __tagHelperAttribute_11 private static readonly TagHelperAttribute __tagHelperAttribute_11 Field Value TagHelperAttribute __tagHelperAttribute_12 private static readonly TagHelperAttribute __tagHelperAttribute_12 Field Value TagHelperAttribute __tagHelperAttribute_13 private static readonly TagHelperAttribute __tagHelperAttribute_13 Field Value TagHelperAttribute __tagHelperAttribute_14 private static readonly TagHelperAttribute __tagHelperAttribute_14 Field Value TagHelperAttribute __tagHelperAttribute_15 private static readonly TagHelperAttribute __tagHelperAttribute_15 Field Value TagHelperAttribute __tagHelperAttribute_16 private static readonly TagHelperAttribute __tagHelperAttribute_16 Field Value TagHelperAttribute __tagHelperAttribute_17 private static readonly TagHelperAttribute __tagHelperAttribute_17 Field Value TagHelperAttribute __tagHelperAttribute_18 private static readonly TagHelperAttribute __tagHelperAttribute_18 Field Value TagHelperAttribute __tagHelperAttribute_19 private static readonly TagHelperAttribute __tagHelperAttribute_19 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_20 private static readonly TagHelperAttribute __tagHelperAttribute_20 Field Value TagHelperAttribute __tagHelperAttribute_21 private static readonly TagHelperAttribute __tagHelperAttribute_21 Field Value TagHelperAttribute __tagHelperAttribute_22 private static readonly TagHelperAttribute __tagHelperAttribute_22 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperAttribute_9 private static readonly TagHelperAttribute __tagHelperAttribute_9 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<KaikeiViewModel> Html { get; private set; } Property Value IHtmlHelper<KaikeiViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_NaigaiClassMaster_Index.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_NaigaiClassMaster_Index.html",
    "title": "Class Views_NaigaiClassMaster_Index | Convenience",
    "keywords": "Class Views_NaigaiClassMaster_Index Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/NaigaiClassMaster/Index.cshtml\")] internal sealed class Views_NaigaiClassMaster_Index : RazorPage<NaigaiClassMasterViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<NaigaiClassMasterViewModel> Views_NaigaiClassMaster_Index Implements IRazorPage Inherited Members RazorPage<NaigaiClassMasterViewModel>.Model RazorPage<NaigaiClassMasterViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper private ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper Field Value ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper private ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper Field Value ValidationSummaryTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<NaigaiClassMasterViewModel> Html { get; private set; } Property Value IHtmlHelper<NaigaiClassMasterViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Shared_Error.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Shared_Error.html",
    "title": "Class Views_Shared_Error | Convenience",
    "keywords": "Class Views_Shared_Error Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Shared/Error.cshtml\")] internal sealed class Views_Shared_Error : RazorPage<ErrorViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ErrorViewModel> Views_Shared_Error Implements IRazorPage Inherited Members RazorPage<ErrorViewModel>.Model RazorPage<ErrorViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper private HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper Field Value HeadTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ErrorViewModel> Html { get; private set; } Property Value IHtmlHelper<ErrorViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Shared__Layout.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Shared__Layout.html",
    "title": "Class Views_Shared__Layout | Convenience",
    "keywords": "Class Views_Shared__Layout Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Shared/_Layout.cshtml\")] internal sealed class Views_Shared__Layout : RazorPage<dynamic>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<dynamic> Views_Shared__Layout Implements IRazorPage Inherited Members RazorPage<dynamic>.Model RazorPage<dynamic>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper private BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper Field Value BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper private HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper Field Value HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper private AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper Field Value AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper private LinkTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper Field Value LinkTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_10 private static readonly TagHelperAttribute __tagHelperAttribute_10 Field Value TagHelperAttribute __tagHelperAttribute_11 private static readonly TagHelperAttribute __tagHelperAttribute_11 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperAttribute_9 private static readonly TagHelperAttribute __tagHelperAttribute_9 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<dynamic> Html { get; private set; } Property Value IHtmlHelper<dynamic> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Shared__ValidationScriptsPartial.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Shared__ValidationScriptsPartial.html",
    "title": "Class Views_Shared__ValidationScriptsPartial | Convenience",
    "keywords": "Class Views_Shared__ValidationScriptsPartial Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Shared/_ValidationScriptsPartial.cshtml\")] internal sealed class Views_Shared__ValidationScriptsPartial : RazorPage<dynamic>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<dynamic> Views_Shared__ValidationScriptsPartial Implements IRazorPage Inherited Members RazorPage<dynamic>.Model RazorPage<dynamic>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<dynamic> Html { get; private set; } Property Value IHtmlHelper<dynamic> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_ShiireJisseki_Index.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_ShiireJisseki_Index.html",
    "title": "Class Views_ShiireJisseki_Index | Convenience",
    "keywords": "Class Views_ShiireJisseki_Index Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/ShiireJisseki/Index.cshtml\")] internal sealed class Views_ShiireJisseki_Index : RazorPage<ShiireJissekiViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ShiireJissekiViewModel> Views_ShiireJisseki_Index Implements IRazorPage Inherited Members RazorPage<ShiireJissekiViewModel>.Model RazorPage<ShiireJissekiViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper private OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper Field Value OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper private SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper Field Value SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper private ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper Field Value ValidationSummaryTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_10 private static readonly TagHelperAttribute __tagHelperAttribute_10 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperAttribute_9 private static readonly TagHelperAttribute __tagHelperAttribute_9 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ShiireJissekiViewModel> Html { get; private set; } Property Value IHtmlHelper<ShiireJissekiViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_ShiireMaster_Index.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_ShiireMaster_Index.html",
    "title": "Class Views_ShiireMaster_Index | Convenience",
    "keywords": "Class Views_ShiireMaster_Index Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/ShiireMaster/Index.cshtml\")] internal sealed class Views_ShiireMaster_Index : RazorPage<ShiireMasterViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ShiireMasterViewModel> Views_ShiireMaster_Index Implements IRazorPage Inherited Members RazorPage<ShiireMasterViewModel>.Model RazorPage<ShiireMasterViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper private SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper Field Value SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper private ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper Field Value ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper private ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper Field Value ValidationSummaryTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ShiireMasterViewModel> Html { get; private set; } Property Value IHtmlHelper<ShiireMasterViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_ShiireSakiMaster_Index.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_ShiireSakiMaster_Index.html",
    "title": "Class Views_ShiireSakiMaster_Index | Convenience",
    "keywords": "Class Views_ShiireSakiMaster_Index Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/ShiireSakiMaster/Index.cshtml\")] internal sealed class Views_ShiireSakiMaster_Index : RazorPage<ShiireSakiMasterViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ShiireSakiMasterViewModel> Views_ShiireSakiMaster_Index Implements IRazorPage Inherited Members RazorPage<ShiireSakiMasterViewModel>.Model RazorPage<ShiireSakiMasterViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper private ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper Field Value ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper private ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper Field Value ValidationSummaryTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ShiireSakiMasterViewModel> Html { get; private set; } Property Value IHtmlHelper<ShiireSakiMasterViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Shiire_Shiire.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Shiire_Shiire.html",
    "title": "Class Views_Shiire_Shiire | Convenience",
    "keywords": "Class Views_Shiire_Shiire Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Shiire/Shiire.cshtml\")] internal sealed class Views_Shiire_Shiire : RazorPage<ShiireViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ShiireViewModel> Views_Shiire_Shiire Implements IRazorPage Inherited Members RazorPage<ShiireViewModel>.Model RazorPage<ShiireViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper private ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper Field Value ValidationMessageTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperAttribute_9 private static readonly TagHelperAttribute __tagHelperAttribute_9 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ShiireViewModel> Html { get; private set; } Property Value IHtmlHelper<ShiireViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Shiire_ShiireKeyInput.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Shiire_ShiireKeyInput.html",
    "title": "Class Views_Shiire_ShiireKeyInput | Convenience",
    "keywords": "Class Views_Shiire_ShiireKeyInput Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Shiire/ShiireKeyInput.cshtml\")] internal sealed class Views_Shiire_ShiireKeyInput : RazorPage<ShiireKeysViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ShiireKeysViewModel> Views_Shiire_ShiireKeyInput Implements IRazorPage Inherited Members RazorPage<ShiireKeysViewModel>.Model RazorPage<ShiireKeysViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper private AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper Field Value AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper private OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper Field Value OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper private SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper Field Value SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper private ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper Field Value ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper private ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper Field Value ValidationSummaryTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ShiireKeysViewModel> Html { get; private set; } Property Value IHtmlHelper<ShiireKeysViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_ShohinMaster_Index.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_ShohinMaster_Index.html",
    "title": "Class Views_ShohinMaster_Index | Convenience",
    "keywords": "Class Views_ShohinMaster_Index Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/ShohinMaster/Index.cshtml\")] internal sealed class Views_ShohinMaster_Index : RazorPage<ShohinMasterViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ShohinMasterViewModel> Views_ShohinMaster_Index Implements IRazorPage Inherited Members RazorPage<ShohinMasterViewModel>.Model RazorPage<ShohinMasterViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper private ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper Field Value ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper private ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper Field Value ValidationSummaryTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ShohinMasterViewModel> Html { get; private set; } Property Value IHtmlHelper<ShohinMasterViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_TentoHaraidashi_TentoHaraidashi.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_TentoHaraidashi_TentoHaraidashi.html",
    "title": "Class Views_TentoHaraidashi_TentoHaraidashi | Convenience",
    "keywords": "Class Views_TentoHaraidashi_TentoHaraidashi Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/TentoHaraidashi/TentoHaraidashi.cshtml\")] internal sealed class Views_TentoHaraidashi_TentoHaraidashi : RazorPage<TentoHaraidashiViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<TentoHaraidashiViewModel> Views_TentoHaraidashi_TentoHaraidashi Implements IRazorPage Inherited Members RazorPage<TentoHaraidashiViewModel>.Model RazorPage<TentoHaraidashiViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper private SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper Field Value SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper private ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper Field Value ValidationMessageTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_10 private static readonly TagHelperAttribute __tagHelperAttribute_10 Field Value TagHelperAttribute __tagHelperAttribute_11 private static readonly TagHelperAttribute __tagHelperAttribute_11 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperAttribute_9 private static readonly TagHelperAttribute __tagHelperAttribute_9 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<TentoHaraidashiViewModel> Html { get; private set; } Property Value IHtmlHelper<TentoHaraidashiViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_TentoZaiko_Index.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_TentoZaiko_Index.html",
    "title": "Class Views_TentoZaiko_Index | Convenience",
    "keywords": "Class Views_TentoZaiko_Index Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/TentoZaiko/Index.cshtml\")] internal sealed class Views_TentoZaiko_Index : RazorPage<TentoZaikoViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<TentoZaikoViewModel> Views_TentoZaiko_Index Implements IRazorPage Inherited Members RazorPage<TentoZaikoViewModel>.Model RazorPage<TentoZaikoViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper private OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper Field Value OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper private SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper Field Value SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper private ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper Field Value ValidationSummaryTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperAttribute_9 private static readonly TagHelperAttribute __tagHelperAttribute_9 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<TentoZaikoViewModel> Html { get; private set; } Property Value IHtmlHelper<TentoZaikoViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Zaiko_Index.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Zaiko_Index.html",
    "title": "Class Views_Zaiko_Index | Convenience",
    "keywords": "Class Views_Zaiko_Index Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Zaiko/Index.cshtml\")] internal sealed class Views_Zaiko_Index : RazorPage<ZaikoViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ZaikoViewModel> Views_Zaiko_Index Implements IRazorPage Inherited Members RazorPage<ZaikoViewModel>.Model RazorPage<ZaikoViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper private OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper Field Value OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper private SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper Field Value SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper private ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper Field Value ValidationSummaryTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ZaikoViewModel> Html { get; private set; } Property Value IHtmlHelper<ZaikoViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views__ViewImports.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views__ViewImports.html",
    "title": "Class Views__ViewImports | Convenience",
    "keywords": "Class Views__ViewImports Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/_ViewImports.cshtml\")] internal sealed class Views__ViewImports : RazorPage<dynamic>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<dynamic> Views__ViewImports Implements IRazorPage Inherited Members RazorPage<dynamic>.Model RazorPage<dynamic>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<dynamic> Html { get; private set; } Property Value IHtmlHelper<dynamic> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views__ViewStart.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views__ViewStart.html",
    "title": "Class Views__ViewStart | Convenience",
    "keywords": "Class Views__ViewStart Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/_ViewStart.cshtml\")] internal sealed class Views__ViewStart : RazorPage<dynamic>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<dynamic> Views__ViewStart Implements IRazorPage Inherited Members RazorPage<dynamic>.Model RazorPage<dynamic>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<dynamic> Html { get; private set; } Property Value IHtmlHelper<dynamic> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.html": {
    "href": "api/AspNetCoreGeneratedDocument.html",
    "title": "Namespace AspNetCoreGeneratedDocument | Convenience",
    "keywords": "Namespace AspNetCoreGeneratedDocument Classes Views_ChumonJisseki_Index Views_Chumon_ChumonMeisai Views_Chumon_KeyInput Views_Home_Index Views_Home_Privacy Views_KaikeiJisseki_Index Views_Kaikei_Kaikei Views_NaigaiClassMaster_Index Views_Shared_Error Views_Shared__Layout Views_Shared__ValidationScriptsPartial Views_ShiireJisseki_Index Views_ShiireMaster_Index Views_ShiireSakiMaster_Index Views_Shiire_Shiire Views_Shiire_ShiireKeyInput Views_ShohinMaster_Index Views_TentoHaraidashi_TentoHaraidashi Views_TentoZaiko_Index Views_Zaiko_Index Views__ViewImports Views__ViewStart"
  },
  "api/Convenience.Controllers.Chumon2Controller.html": {
    "href": "api/Convenience.Controllers.Chumon2Controller.html",
    "title": "Class Chumon2Controller | Convenience",
    "keywords": "Class Chumon2Controller Namespace Convenience.Controllers Assembly Convenience.dll サービスを使わない注文コントローラ（演習対象外） public class Chumon2Controller : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller Chumon2Controller Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Chumon2Controller(ConvenienceContext) public Chumon2Controller(ConvenienceContext context) Parameters context ConvenienceContext Fields _context private readonly ConvenienceContext _context Field Value ConvenienceContext chumon private readonly IChumon chumon Field Value IChumon Methods ChumonMeisai(ChumonViewModel) public IActionResult ChumonMeisai(ChumonViewModel inChumonViewModel) Parameters inChumonViewModel ChumonViewModel Returns IActionResult ChumonMeisai(int, ChumonViewModel) [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> ChumonMeisai(int id, ChumonViewModel ChumonViewModel) Parameters id int ChumonViewModel ChumonViewModel Returns Task<IActionResult> KeyInput() public Task<IActionResult> KeyInput() Returns Task<IActionResult> KeyInput(ChumonKeysViewModel) [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> KeyInput(ChumonKeysViewModel inChumonKeysViewModel) Parameters inChumonKeysViewModel ChumonKeysViewModel Returns Task<IActionResult> SetChumonKeysViewModel() public Task<ChumonKeysViewModel> SetChumonKeysViewModel() Returns Task<ChumonKeysViewModel>"
  },
  "api/Convenience.Controllers.ChumonController.html": {
    "href": "api/Convenience.Controllers.ChumonController.html",
    "title": "Class ChumonController | Convenience",
    "keywords": "Class ChumonController Namespace Convenience.Controllers Assembly Convenience.dll 注文コントローラ public class ChumonController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable, ISharedTools Inheritance object ControllerBase Controller ChumonController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable ISharedTools Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChumonController(ConvenienceContext, IChumonService) コンストラクター public ChumonController(ConvenienceContext context, IChumonService chumonService) Parameters context ConvenienceContext DBコンテキスト chumonService IChumonService 注文サービスクラスＤＩ注入用 Fields IndexName サービスクラス引継ぎ用キーワード private static readonly string IndexName Field Value string _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext chumonService 注文サービスクラス（ＤＩ用） private readonly IChumonService chumonService Field Value IChumonService Methods ChumonMeisai(ChumonViewModel) 商品注文２枚目のPost後の処理 [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> ChumonMeisai(ChumonViewModel inChumonViewModel) Parameters inChumonViewModel ChumonViewModel 注文明細ビューモデル Returns Task<IActionResult> Exceptions Exception ChumonMeisai(string) 商品注文２枚目の初期表示（表示データは、postを受けたKeyInputメソッドで行う） [HttpGet] public IActionResult ChumonMeisai(string id) Parameters id string Returns IActionResult KeyInput(ChumonKeysViewModel) 商品注文１枚目のPost受信後処理 [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> KeyInput(ChumonKeysViewModel inChumonKeysViewModel) Parameters inChumonKeysViewModel ChumonKeysViewModel 注文キービューモデル Returns Task<IActionResult> Exceptions InvalidOperationException KeyInput(string) 商品注文１枚目の初期表示処理 [HttpGet] public Task<IActionResult> KeyInput(string id) Parameters id string Returns Task<IActionResult>"
  },
  "api/Convenience.Controllers.ChumonJissekiController.html": {
    "href": "api/Convenience.Controllers.ChumonJissekiController.html",
    "title": "Class ChumonJissekiController | Convenience",
    "keywords": "Class ChumonJissekiController Namespace Convenience.Controllers Assembly Convenience.dll 注文実績検索コントローラ [ResponseCache(NoStore = true, Location = ResponseCacheLocation.None)] public class ChumonJissekiController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable, ISharedTools Inheritance object ControllerBase Controller ChumonJissekiController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable ISharedTools Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChumonJissekiController(ConvenienceContext, IChumonJissekiService, IConvertObjectToCsv) コンストラクター public ChumonJissekiController(ConvenienceContext context, IChumonJissekiService chumonJissekiService, IConvertObjectToCsv convertObjectToCsv) Parameters context ConvenienceContext DBコンテキスト chumonJissekiService IChumonJissekiService 注文実績検索サービスクラスＤＩ注入用 convertObjectToCsv IConvertObjectToCsv Fields IndexName サービスクラス引継ぎ用キーワード private static readonly string IndexName Field Value string PageSize １ページの行数 private const int PageSize = 100 Field Value int _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext _convertObjectToCsv CSVファイル作成（ＤＩ用） private readonly IConvertObjectToCsv _convertObjectToCsv Field Value IConvertObjectToCsv chumonJissekiService 注文実績検索サービスサービスクラス（ＤＩ用） private readonly IChumonJissekiService chumonJissekiService Field Value IChumonJissekiService chumonJissekiViewModel ビュー・モデル private readonly ChumonJissekiViewModel chumonJissekiViewModel Field Value ChumonJissekiViewModel Methods DownLoad(string) Download [HttpGet] public Task<IActionResult> DownLoad(string id) Parameters id string Returns Task<IActionResult> Downloadファイル Exceptions Exception Index() 注文実績検索１枚目の初期表示処理 [HttpGet] public Task<IActionResult> Index() Returns Task<IActionResult> 注文実績検索ビューモデル（初期表示） ProcessResult(ChumonJissekiViewModel, int, int) 検索データ作成 private Task<IActionResult> ProcessResult(ChumonJissekiViewModel chumonJissekiViewModel, int page, int pageSize) Parameters chumonJissekiViewModel ChumonJissekiViewModel page int ページ番号 pageSize int 行数/ページ Returns Task<IActionResult> 注文実績検索ビュー Result(ChumonJissekiViewModel, int) 注文実績検索キー入力後 [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> Result(ChumonJissekiViewModel postedChumonJissekiViewModel, int page = 1) Parameters postedChumonJissekiViewModel ChumonJissekiViewModel 注文実績検索ビューモデル(post) page int ページ番号 Returns Task<IActionResult> 注文実績ビューモデル Result(int) 検索結果 [HttpGet] public Task<IActionResult> Result(int page) Parameters page int ページ番号 Returns Task<IActionResult> 注文実績検索ビュー"
  },
  "api/Convenience.Controllers.HomeController.html": {
    "href": "api/Convenience.Controllers.HomeController.html",
    "title": "Class HomeController | Convenience",
    "keywords": "Class HomeController Namespace Convenience.Controllers Assembly Convenience.dll Homeコントローラ（メニュー表示用） public class HomeController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller HomeController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HomeController() public HomeController() Methods Error(int) [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)] [IgnoreAntiforgeryToken] public IActionResult Error(int id) Parameters id int Returns IActionResult Index() public IActionResult Index() Returns IActionResult Privacy() public IActionResult Privacy() Returns IActionResult"
  },
  "api/Convenience.Controllers.KaikeiController.html": {
    "href": "api/Convenience.Controllers.KaikeiController.html",
    "title": "Class KaikeiController | Convenience",
    "keywords": "Class KaikeiController Namespace Convenience.Controllers Assembly Convenience.dll 会計コントローラ [ResponseCache(NoStore = true, Location = ResponseCacheLocation.None)] public class KaikeiController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable, ISharedTools Inheritance object ControllerBase Controller KaikeiController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable ISharedTools Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KaikeiController(ConvenienceContext, IKaikeiService) コンストラクター public KaikeiController(ConvenienceContext context, IKaikeiService KaikeiService) Parameters context ConvenienceContext DBコンテキスト KaikeiService IKaikeiService Fields IndexName サービスクラス引継ぎ用キーワード private static readonly string IndexName Field Value string _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext _kaikeiService 会計サービスクラス（ＤＩ用） private readonly IKaikeiService _kaikeiService Field Value IKaikeiService Methods Addkaikei(KaikeiViewModel) 商品注文２枚目のPost受信後処理 [HttpPost] [ValidateAntiForgeryToken] [ResponseCache(NoStore = true, Location = ResponseCacheLocation.None)] public Task<IActionResult> Addkaikei(KaikeiViewModel argKaikeiViewModel) Parameters argKaikeiViewModel KaikeiViewModel Returns Task<IActionResult> Exceptions InvalidOperationException GetShohinName(string) 商品名称問い合わせよう [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> GetShohinName(string ShohinId) Parameters ShohinId string Returns Task<IActionResult> Kaikei(KaikeiViewModel) [HttpPost] [ValidateAntiForgeryToken] [ResponseCache(NoStore = true, Location = ResponseCacheLocation.None)] public Task<IActionResult> Kaikei(KaikeiViewModel argKaikeiViewModel) Parameters argKaikeiViewModel KaikeiViewModel Returns Task<IActionResult> KeyInput() 商品注文１枚目の初期表示処理 public Task<IActionResult> KeyInput() Returns Task<IActionResult> KeyInput(KaikeiViewModel) 商品注文２枚目の初期表示 [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> KeyInput(KaikeiViewModel argKaikeiViewModel) Parameters argKaikeiViewModel KaikeiViewModel Returns Task<IActionResult> Result(string) PRG用 [HttpGet] public IActionResult Result(string id) Parameters id string getされるデータ（どこから来たかキーワード） Returns IActionResult"
  },
  "api/Convenience.Controllers.KaikeiJissekiController.html": {
    "href": "api/Convenience.Controllers.KaikeiJissekiController.html",
    "title": "Class KaikeiJissekiController | Convenience",
    "keywords": "Class KaikeiJissekiController Namespace Convenience.Controllers Assembly Convenience.dll 会計実績検索コントローラ [ResponseCache(NoStore = true, Location = ResponseCacheLocation.None)] public class KaikeiJissekiController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable, ISharedTools Inheritance object ControllerBase Controller KaikeiJissekiController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable ISharedTools Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KaikeiJissekiController(ConvenienceContext, IKaikeiJissekiService, IConvertObjectToCsv) コンストラクター public KaikeiJissekiController(ConvenienceContext context, IKaikeiJissekiService kaikeiJissekiService, IConvertObjectToCsv convertObjectToCsv) Parameters context ConvenienceContext DBコンテキスト kaikeiJissekiService IKaikeiJissekiService 会計実績検索サービスクラスＤＩ注入用 convertObjectToCsv IConvertObjectToCsv Fields IndexName サービスクラス引継ぎ用キーワード private static readonly string IndexName Field Value string PageSize １ページの行数 private const int PageSize = 100 Field Value int _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext _convertObjectToCsv CSVファイル作成（ＤＩ用） private readonly IConvertObjectToCsv _convertObjectToCsv Field Value IConvertObjectToCsv kaikeiJissekiService 会計実績検索サービスクラス（ＤＩ用） private readonly IKaikeiJissekiService kaikeiJissekiService Field Value IKaikeiJissekiService kaikeiJissekiViewModel ビュー・モデル private readonly KaikeiJissekiViewModel kaikeiJissekiViewModel Field Value KaikeiJissekiViewModel Methods DownLoad(string) Download [HttpGet] public Task<IActionResult> DownLoad(string id) Parameters id string Returns Task<IActionResult> Downloadファイル Exceptions Exception Index() 会計実績検索１枚目の初期表示処理 [HttpGet] public Task<IActionResult> Index() Returns Task<IActionResult> 会計実績ビューモデル（初期表示） ProcessResult(KaikeiJissekiViewModel, int, int) 検索データ作成 private Task<IActionResult> ProcessResult(KaikeiJissekiViewModel kaikeiJissekiViewModel, int page, int pageSize) Parameters kaikeiJissekiViewModel KaikeiJissekiViewModel 会計実績検索ビューモデル page int ページ番号 pageSize int 行数／ページ Returns Task<IActionResult> 会計実績検索ビュー Result(KaikeiJissekiViewModel, int) 会計実績検索キー入力後 [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> Result(KaikeiJissekiViewModel postedKaikeiJissekiViewModel, int page = 1) Parameters postedKaikeiJissekiViewModel KaikeiJissekiViewModel page int Returns Task<IActionResult> 会計実績ビューモデル Result(int) 検索結果 [HttpGet] public Task<IActionResult> Result(int page) Parameters page int Returns Task<IActionResult> 会計実績検索ビュー"
  },
  "api/Convenience.Controllers.NaigaiClassMasterController.html": {
    "href": "api/Convenience.Controllers.NaigaiClassMasterController.html",
    "title": "Class NaigaiClassMasterController | Convenience",
    "keywords": "Class NaigaiClassMasterController Namespace Convenience.Controllers Assembly Convenience.dll 内外区分マスタコントローラ public class NaigaiClassMasterController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable, ISharedTools Inheritance object ControllerBase Controller NaigaiClassMasterController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable ISharedTools Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NaigaiClassMasterController(ConvenienceContext, INaigaiClassMasterService) コンストラクタ public NaigaiClassMasterController(ConvenienceContext context, INaigaiClassMasterService naigaiClassMasterService) Parameters context ConvenienceContext データベースコンテキストのインスタンス naigaiClassMasterService INaigaiClassMasterService Fields IndexName サービスクラス引継ぎ用のキーとして利用 private static readonly string IndexName Field Value string _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext naigaiClassMasterService 内外区分マスタサービスクラス（依存性注入用） private readonly INaigaiClassMasterService naigaiClassMasterService Field Value INaigaiClassMasterService Methods Index() 初期表示処理（GETリクエストに対応） [HttpGet] public Task<IActionResult> Index() Returns Task<IActionResult> ビューとビューモデルを返す Index(NaigaiClassMasterViewModel) POSTリクエスト後の処理 [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> Index(NaigaiClassMasterViewModel inNaigaiClassMasterViewModel) Parameters inNaigaiClassMasterViewModel NaigaiClassMasterViewModel POSTされたビューモデル Returns Task<IActionResult> 更新されたビューモデル InsertRow(int) 新しい行を挿入する処理（GETリクエストに対応） [HttpGet] public Task<IActionResult> InsertRow(int index) Parameters index int 挿入する位置のインデックス Returns Task<IActionResult> 更新されたビューモデル Result() PRG対応 [HttpGet] public Task<IActionResult> Result() Returns Task<IActionResult> Exceptions Exception"
  },
  "api/Convenience.Controllers.ShiireController.html": {
    "href": "api/Convenience.Controllers.ShiireController.html",
    "title": "Class ShiireController | Convenience",
    "keywords": "Class ShiireController Namespace Convenience.Controllers Assembly Convenience.dll 仕入サービスクラス public class ShiireController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable, ISharedTools Inheritance object ControllerBase Controller ShiireController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable ISharedTools Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShiireController(ConvenienceContext, IShiireService) コンストラクター public ShiireController(ConvenienceContext context, IShiireService shiireService) Parameters context ConvenienceContext DBコンテキスト shiireService IShiireService 仕入サービスクラスＤＩ注入用 Fields IndexName private static readonly string IndexName Field Value string _context private readonly ConvenienceContext _context Field Value ConvenienceContext shiireService private readonly IShiireService shiireService Field Value IShiireService shiireViewModel private ShiireViewModel shiireViewModel Field Value ShiireViewModel Methods Shiire(ShiireViewModel) 仕入画面２枚目のPost後処理 [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> Shiire(ShiireViewModel inShiireViewModel) Parameters inShiireViewModel ShiireViewModel Returns Task<IActionResult> Shiire(string) 仕入画面２枚目の初期表示（仕入画面２枚目のPost後処理よりredirect） [HttpGet] public IActionResult Shiire(string id) Parameters id string Returns IActionResult ShiireKeyInput(ShiireKeysViewModel) 仕入画面１枚目のPost後処理→仕入画面２枚目に遷移 [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> ShiireKeyInput(ShiireKeysViewModel inKeysModel) Parameters inKeysModel ShiireKeysViewModel 仕入画面１枚目のpostデータ Returns Task<IActionResult> ShiireKeyInput(string) 仕入画面１枚目の初期表示 [HttpGet] public Task<IActionResult> ShiireKeyInput(string id) Parameters id string Returns Task<IActionResult> ShiireKeysViewModel 仕入キービューモデル"
  },
  "api/Convenience.Controllers.ShiireJissekiController.html": {
    "href": "api/Convenience.Controllers.ShiireJissekiController.html",
    "title": "Class ShiireJissekiController | Convenience",
    "keywords": "Class ShiireJissekiController Namespace Convenience.Controllers Assembly Convenience.dll 仕入実績検索コントローラ [ResponseCache(NoStore = true, Location = ResponseCacheLocation.None)] public class ShiireJissekiController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable, ISharedTools Inheritance object ControllerBase Controller ShiireJissekiController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable ISharedTools Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShiireJissekiController(ConvenienceContext, IShiireJissekiService, IConvertObjectToCsv) コンストラクター public ShiireJissekiController(ConvenienceContext context, IShiireJissekiService shiireJissekiService, IConvertObjectToCsv convertObjectToCsv) Parameters context ConvenienceContext DBコンテキスト shiireJissekiService IShiireJissekiService 仕入実績サービスクラスＤＩ注入用 convertObjectToCsv IConvertObjectToCsv Fields IndexName サービスクラス引継ぎ用キーワード private static readonly string IndexName Field Value string PageSize １ページの行数 private const int PageSize = 100 Field Value int _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext _convertObjectToCsv CSVファイル作成（ＤＩ用） private readonly IConvertObjectToCsv _convertObjectToCsv Field Value IConvertObjectToCsv shiireJissekiService 仕入実績サービスクラス（ＤＩ用） private readonly IShiireJissekiService shiireJissekiService Field Value IShiireJissekiService shiireJissekiViewModel ビュー・モデル private ShiireJissekiViewModel shiireJissekiViewModel Field Value ShiireJissekiViewModel Methods DownLoad(string) Download [HttpGet] public Task<IActionResult> DownLoad(string id) Parameters id string Returns Task<IActionResult> Downloadファイル Exceptions Exception Index() 仕入実績検索１枚目の初期表示処理 [HttpGet] public Task<IActionResult> Index() Returns Task<IActionResult> 仕入実績ビューモデル（初期表示） ProcessResult(ShiireJissekiViewModel, int, int) 検索データ作成 private Task<IActionResult> ProcessResult(ShiireJissekiViewModel shiireJissekiViewModel, int page, int pageSize) Parameters shiireJissekiViewModel ShiireJissekiViewModel 仕入実績ビューモデル page int ページ番号 pageSize int 行数／ページ Returns Task<IActionResult> Result(ShiireJissekiViewModel, int) 仕入実績検索キー入力後 [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> Result(ShiireJissekiViewModel postedShiireJissekiViewModel, int page = 1) Parameters postedShiireJissekiViewModel ShiireJissekiViewModel 仕入実績ビューモデル page int Returns Task<IActionResult> 仕入実績ビューモデル Result(int) 検索結果 [HttpGet] public Task<IActionResult> Result(int page) Parameters page int ページ番号 Returns Task<IActionResult> 仕入実績ビューモデル"
  },
  "api/Convenience.Controllers.ShiireMasterController.html": {
    "href": "api/Convenience.Controllers.ShiireMasterController.html",
    "title": "Class ShiireMasterController | Convenience",
    "keywords": "Class ShiireMasterController Namespace Convenience.Controllers Assembly Convenience.dll 仕入マスターコントローラ public class ShiireMasterController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable, ISharedTools Inheritance object ControllerBase Controller ShiireMasterController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable ISharedTools Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShiireMasterController(ConvenienceContext, IShiireMasterService) コンストラクタ public ShiireMasterController(ConvenienceContext context, IShiireMasterService shiireMasterService) Parameters context ConvenienceContext データベースコンテキストのインスタンス shiireMasterService IShiireMasterService Fields IndexName サービスクラスのデータ保持用キー private static readonly string IndexName Field Value string _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext shiireMasterService 仕入マスターサービスクラス（依存性注入用） private readonly IShiireMasterService shiireMasterService Field Value IShiireMasterService Methods Index() 初期表示処理（GETリクエスト） [HttpGet] public Task<IActionResult> Index() Returns Task<IActionResult> ビューとビューモデル Index(ShiireMasterViewModel) POSTリクエスト後の処理 [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> Index(ShiireMasterViewModel inShiireMasterViewModel) Parameters inShiireMasterViewModel ShiireMasterViewModel 受信したビューモデル Returns Task<IActionResult> 更新されたビューとビューモデル InsertRow(int) 新しい行を挿入する処理（GETリクエスト） [HttpGet] public Task<IActionResult> InsertRow(int index) Parameters index int 挿入する位置のインデックス Returns Task<IActionResult> 更新されたビューとビューモデル Result() PRG対応 [HttpGet] public Task<IActionResult> Result() Returns Task<IActionResult> Exceptions Exception"
  },
  "api/Convenience.Controllers.ShiireSakiMasterController.html": {
    "href": "api/Convenience.Controllers.ShiireSakiMasterController.html",
    "title": "Class ShiireSakiMasterController | Convenience",
    "keywords": "Class ShiireSakiMasterController Namespace Convenience.Controllers Assembly Convenience.dll 仕入先マスターコントローラ public class ShiireSakiMasterController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable, ISharedTools Inheritance object ControllerBase Controller ShiireSakiMasterController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable ISharedTools Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShiireSakiMasterController(ConvenienceContext, IShiireSakiMasterService) コンストラクタ public ShiireSakiMasterController(ConvenienceContext context, IShiireSakiMasterService shiireSakiMasterService) Parameters context ConvenienceContext データベースコンテキストのインスタンス shiireSakiMasterService IShiireSakiMasterService Fields IndexName サービスクラスのデータを保持するためのTempDataキー private static readonly string IndexName Field Value string _context データベースコンテキスト（DIによる注入） private readonly ConvenienceContext _context Field Value ConvenienceContext shiireSakiMasterService 仕入先マスターサービスクラス（依存性注入用） private readonly IShiireSakiMasterService shiireSakiMasterService Field Value IShiireSakiMasterService Methods Index() 初期表示処理（GETリクエスト） [HttpGet] public Task<IActionResult> Index() Returns Task<IActionResult> ビューとビューモデル Index(ShiireSakiMasterViewModel) POSTリクエスト後の処理（フォームデータ受信後） [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> Index(ShiireSakiMasterViewModel inShiireSakiMasterViewModel) Parameters inShiireSakiMasterViewModel ShiireSakiMasterViewModel 受信した仕入先マスター用のビューモデル Returns Task<IActionResult> 更新されたビューとビューモデル InsertRow(int) 新しい行を挿入する処理（GETリクエスト） [HttpGet] public Task<IActionResult> InsertRow(int index) Parameters index int 挿入する位置のインデックス Returns Task<IActionResult> 更新されたビューとビューモデル Result() PRG対応 [HttpGet] public Task<IActionResult> Result() Returns Task<IActionResult> Exceptions Exception"
  },
  "api/Convenience.Controllers.ShohinMasterController.html": {
    "href": "api/Convenience.Controllers.ShohinMasterController.html",
    "title": "Class ShohinMasterController | Convenience",
    "keywords": "Class ShohinMasterController Namespace Convenience.Controllers Assembly Convenience.dll 商品マスターコントローラ public class ShohinMasterController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable, ISharedTools Inheritance object ControllerBase Controller ShohinMasterController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable ISharedTools Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShohinMasterController(ConvenienceContext, IShohinMasterService) コンストラクタ public ShohinMasterController(ConvenienceContext context, IShohinMasterService shohinMasterService) Parameters context ConvenienceContext データベースコンテキストのインスタンス shohinMasterService IShohinMasterService Fields IndexName ビューモデルを保存するためのTempDataキー private static readonly string IndexName Field Value string _context データベースコンテキスト（依存性注入） private readonly ConvenienceContext _context Field Value ConvenienceContext shohinMasterService 商品マスターサービスクラス（依存性注入用） private readonly IShohinMasterService shohinMasterService Field Value IShohinMasterService Methods Index() 商品マスターの初期表示（GETリクエスト） [HttpGet] public Task<IActionResult> Index() Returns Task<IActionResult> ビューとビューモデル Index(ShohinMasterViewModel) 商品マスターのPostリクエスト処理 [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> Index(ShohinMasterViewModel inShohinMasterViewModel) Parameters inShohinMasterViewModel ShohinMasterViewModel 受信した商品マスター用ビューモデル Returns Task<IActionResult> 更新されたビューとビューモデル InsertRow(int) 新しい行を挿入する処理 [HttpGet] public Task<IActionResult> InsertRow(int index) Parameters index int 挿入する行のインデックス Returns Task<IActionResult> 更新されたビューとビューモデル Result() PRG対応 [HttpGet] public Task<IActionResult> Result() Returns Task<IActionResult> Exceptions Exception"
  },
  "api/Convenience.Controllers.TentoHaraidashiController.html": {
    "href": "api/Convenience.Controllers.TentoHaraidashiController.html",
    "title": "Class TentoHaraidashiController | Convenience",
    "keywords": "Class TentoHaraidashiController Namespace Convenience.Controllers Assembly Convenience.dll 店頭払出コントローラ [ResponseCache(NoStore = true, Location = ResponseCacheLocation.None)] public class TentoHaraidashiController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable, ISharedTools Inheritance object ControllerBase Controller TentoHaraidashiController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable ISharedTools Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TentoHaraidashiController(ConvenienceContext, ITentoHaraidashiService) コンストラクター public TentoHaraidashiController(ConvenienceContext context, ITentoHaraidashiService tentoHaraidashiService) Parameters context ConvenienceContext DBコンテキスト tentoHaraidashiService ITentoHaraidashiService Fields IndexName サービスクラス引継ぎ用キーワード private static readonly string IndexName Field Value string _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext _tentoHaraidashiService 注文サービスクラス（ＤＩ用） private readonly ITentoHaraidashiService _tentoHaraidashiService Field Value ITentoHaraidashiService tentoHaraidashiViewModel ビュー・モデル private TentoHaraidashiViewModel tentoHaraidashiViewModel Field Value TentoHaraidashiViewModel Methods KeyInput(TentoHaraidashiViewModel) [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> KeyInput(TentoHaraidashiViewModel argTentoHaraidashiViewModel) Parameters argTentoHaraidashiViewModel TentoHaraidashiViewModel Returns Task<IActionResult> KeyInput(string) 商品注文１枚目の初期表示処理 [HttpGet] public Task<IActionResult> KeyInput(string id) Parameters id string Returns Task<IActionResult> TentoHaraidashi(TentoHaraidashiViewModel) 商品注文２枚目のPost受信後処理 [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> TentoHaraidashi(TentoHaraidashiViewModel argTentoHaraidashiViewModel) Parameters argTentoHaraidashiViewModel TentoHaraidashiViewModel Returns Task<IActionResult> Exceptions InvalidOperationException TentoHaraidashi(string) 店頭払出画面２枚目の初期表示（店頭払出画面２枚目のPost後処理よりredirect） [HttpGet] public IActionResult TentoHaraidashi(string id) Parameters id string Returns IActionResult"
  },
  "api/Convenience.Controllers.TentoZaikoController.html": {
    "href": "api/Convenience.Controllers.TentoZaikoController.html",
    "title": "Class TentoZaikoController | Convenience",
    "keywords": "Class TentoZaikoController Namespace Convenience.Controllers Assembly Convenience.dll 店頭在庫検索コントローラ [ResponseCache(NoStore = true, Location = ResponseCacheLocation.None)] public class TentoZaikoController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable, ISharedTools Inheritance object ControllerBase Controller TentoZaikoController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable ISharedTools Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TentoZaikoController(ConvenienceContext, ITentoZaikoService, IConvertObjectToCsv) コンストラクター public TentoZaikoController(ConvenienceContext context, ITentoZaikoService tentoZaikoService, IConvertObjectToCsv convertObjectToCsv) Parameters context ConvenienceContext DBコンテキスト tentoZaikoService ITentoZaikoService 店頭在庫検索サービスクラスＤＩ注入用 convertObjectToCsv IConvertObjectToCsv Fields IndexName サービスクラス引継ぎ用キーワード private static readonly string IndexName Field Value string PageSize １ページの行数 private const int PageSize = 100 Field Value int _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext _convertObjectToCsv CSVファイル作成（ＤＩ用） private readonly IConvertObjectToCsv _convertObjectToCsv Field Value IConvertObjectToCsv tentoZaikoService 店頭在庫検索サービスクラス（ＤＩ用） private readonly ITentoZaikoService tentoZaikoService Field Value ITentoZaikoService tentoZaikoViewModel ビュー・モデル private readonly TentoZaikoViewModel tentoZaikoViewModel Field Value TentoZaikoViewModel Methods DownLoad(string) Download [HttpGet] public Task<IActionResult> DownLoad(string id) Parameters id string Returns Task<IActionResult> Downloadファイル Exceptions Exception Index() 店頭在庫検索１枚目の初期表示処理 [HttpGet] public Task<IActionResult> Index() Returns Task<IActionResult> 店頭在庫ビューモデル（初期表示） ProcessResult(TentoZaikoViewModel, int, int) 検索データ作成 private Task<IActionResult> ProcessResult(TentoZaikoViewModel tentoZaikoViewModel, int page, int pageSize) Parameters tentoZaikoViewModel TentoZaikoViewModel 店頭在庫ビューモデル page int ページ番号 pageSize int 行数/ページ Returns Task<IActionResult> Result(TentoZaikoViewModel, int) 店頭在庫検索キー入力後 [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> Result(TentoZaikoViewModel postedTentoZaikoViewModel, int page = 1) Parameters postedTentoZaikoViewModel TentoZaikoViewModel 店頭在庫ビューモデル(post) page int Returns Task<IActionResult> 店頭在庫ビューモデル Result(int) 検索結果 [HttpGet] public Task<IActionResult> Result(int page) Parameters page int ページ番号 Returns Task<IActionResult> 店頭在庫検索ビュー"
  },
  "api/Convenience.Controllers.ZaikoController.html": {
    "href": "api/Convenience.Controllers.ZaikoController.html",
    "title": "Class ZaikoController | Convenience",
    "keywords": "Class ZaikoController Namespace Convenience.Controllers Assembly Convenience.dll 倉庫在庫検索コントローラ public class ZaikoController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable, ISharedTools Inheritance object ControllerBase Controller ZaikoController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable ISharedTools Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ZaikoController(IZaikoService, IConvertObjectToCsv) コンストラクター public ZaikoController(IZaikoService zaikoService, IConvertObjectToCsv convertObjectToCsv) Parameters zaikoService IZaikoService 在庫サービスクラスＤＩ注入用 convertObjectToCsv IConvertObjectToCsv Fields IndexName Postデータ引継ぎ用キーワード private static readonly string IndexName Field Value string _convertObjectToCsv CSVファイル作成（ＤＩ用） private readonly IConvertObjectToCsv _convertObjectToCsv Field Value IConvertObjectToCsv zaikoService private readonly IZaikoService zaikoService Field Value IZaikoService Methods DownLoad(string) [HttpGet] public Task<IActionResult> DownLoad(string id) Parameters id string Returns Task<IActionResult> Index() public IActionResult Index() Returns IActionResult Index(ZaikoViewModel) [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> Index(ZaikoViewModel inZaikoModel) Parameters inZaikoModel ZaikoViewModel Returns Task<IActionResult>"
  },
  "api/Convenience.Controllers.html": {
    "href": "api/Convenience.Controllers.html",
    "title": "Namespace Convenience.Controllers | Convenience",
    "keywords": "Namespace Convenience.Controllers Classes Chumon2Controller サービスを使わない注文コントローラ（演習対象外） ChumonController 注文コントローラ ChumonJissekiController 注文実績検索コントローラ HomeController Homeコントローラ（メニュー表示用） KaikeiController 会計コントローラ KaikeiJissekiController 会計実績検索コントローラ NaigaiClassMasterController 内外区分マスタコントローラ ShiireController 仕入サービスクラス ShiireJissekiController 仕入実績検索コントローラ ShiireMasterController 仕入マスターコントローラ ShiireSakiMasterController 仕入先マスターコントローラ ShohinMasterController 商品マスターコントローラ TentoHaraidashiController 店頭払出コントローラ TentoZaikoController 店頭在庫検索コントローラ ZaikoController 倉庫在庫検索コントローラ"
  },
  "api/Convenience.Data.ConvenienceContext.html": {
    "href": "api/Convenience.Data.ConvenienceContext.html",
    "title": "Class ConvenienceContext | Convenience",
    "keywords": "Class ConvenienceContext Namespace Convenience.Data Assembly Convenience.dll DBコンテキスト public class ConvenienceContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext ConvenienceContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.IDbSetCache.GetOrAddSet(IDbSetSource, Type) DbContext.IDbSetCache.GetOrAddSet(IDbSetSource, string, Type) DbContext.IDbSetCache.GetSets() DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.IDbContextPoolable.ClearLease() DbContext.IDbContextPoolable.SetLease(DbContextLease) DbContext.IDbContextPoolable.SetLeaseAsync(DbContextLease, CancellationToken) DbContext.IDbContextPoolable.SnapshotConfiguration() DbContext.IResettableService.ResetState() DbContext.IResettableService.ResetStateAsync(CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.IDbContextDependencies.SetSource DbContext.IDbContextDependencies.EntityFinderFactory DbContext.IDbContextDependencies.QueryProvider DbContext.IDbContextDependencies.StateManager DbContext.IDbContextDependencies.ChangeDetector DbContext.IDbContextDependencies.EntityGraphAttacher DbContext.IDbContextDependencies.ExceptionDetector DbContext.IDbContextDependencies.UpdateLogger DbContext.IDbContextDependencies.InfrastructureLogger DbContext.IInfrastructure<IServiceProvider>.Instance DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConvenienceContext(DbContextOptions<ConvenienceContext>) コンストラクタ public ConvenienceContext(DbContextOptions<ConvenienceContext> options) Parameters options DbContextOptions<ConvenienceContext> Properties ChumonJisseki 注文実績 public DbSet<ChumonJisseki> ChumonJisseki { get; set; } Property Value DbSet<ChumonJisseki> ChumonJissekiMeisai 注文実績明細 public DbSet<ChumonJissekiMeisai> ChumonJissekiMeisai { get; set; } Property Value DbSet<ChumonJissekiMeisai> KaikeiHeader 会計実績 public DbSet<KaikeiHeader> KaikeiHeader { get; set; } Property Value DbSet<KaikeiHeader> KaikeiJisseki 会計実績 public DbSet<KaikeiJisseki> KaikeiJisseki { get; set; } Property Value DbSet<KaikeiJisseki> NaigaiClassMaster 内外区分マスタ public DbSet<NaigaiClassMaster> NaigaiClassMaster { get; set; } Property Value DbSet<NaigaiClassMaster> ShiireJisseki 仕入実績 public DbSet<ShiireJisseki> ShiireJisseki { get; set; } Property Value DbSet<ShiireJisseki> ShiireMaster 仕入マスタ public DbSet<ShiireMaster> ShiireMaster { get; set; } Property Value DbSet<ShiireMaster> ShiireSakiMaster 仕入先マスタ public DbSet<ShiireSakiMaster> ShiireSakiMaster { get; set; } Property Value DbSet<ShiireSakiMaster> ShohinMaster 商品マスタ public DbSet<ShohinMaster> ShohinMaster { get; set; } Property Value DbSet<ShohinMaster> SokoZaiko 倉庫在庫 public DbSet<SokoZaiko> SokoZaiko { get; set; } Property Value DbSet<SokoZaiko> TentoHaraidashiHearder 店頭払出ヘッダー public DbSet<TentoHaraidashiHeader> TentoHaraidashiHearder { get; set; } Property Value DbSet<TentoHaraidashiHeader> TentoHaraidashiJisseki 店頭払出実績 public DbSet<TentoHaraidashiJisseki> TentoHaraidashiJisseki { get; set; } Property Value DbSet<TentoHaraidashiJisseki> TentoZaiko 店頭在庫 public DbSet<TentoZaiko> TentoZaiko { get; set; } Property Value DbSet<TentoZaiko>"
  },
  "api/Convenience.Data.html": {
    "href": "api/Convenience.Data.html",
    "title": "Namespace Convenience.Data | Convenience",
    "keywords": "Namespace Convenience.Data Classes ConvenienceContext DBコンテキスト"
  },
  "api/Convenience.Migrations.ConvenienceContextModelSnapshot.html": {
    "href": "api/Convenience.Migrations.ConvenienceContextModelSnapshot.html",
    "title": "Class ConvenienceContextModelSnapshot | Convenience",
    "keywords": "Class ConvenienceContextModelSnapshot Namespace Convenience.Migrations Assembly Convenience.dll [DbContext(typeof(ConvenienceContext))] internal class ConvenienceContextModelSnapshot : ModelSnapshot Inheritance object ModelSnapshot ConvenienceContextModelSnapshot Inherited Members ModelSnapshot.Model object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildModel(ModelBuilder) Called lazily by Model to build the model snapshot the first time it is requested. protected override void BuildModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model."
  },
  "api/Convenience.Migrations.Init.html": {
    "href": "api/Convenience.Migrations.Init.html",
    "title": "Class Init | Convenience",
    "keywords": "Class Init Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20240527055358_Init\")] public class Init : Migration Inheritance object Migration Init Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Migrations.Kaikei.html": {
    "href": "api/Convenience.Migrations.Kaikei.html",
    "title": "Class Kaikei | Convenience",
    "keywords": "Class Kaikei Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20241007041437_Kaikei\")] public class Kaikei : Migration Inheritance object Migration Kaikei Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Migrations.changetonull.html": {
    "href": "api/Convenience.Migrations.changetonull.html",
    "title": "Class changetonull | Convenience",
    "keywords": "Class changetonull Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20241003073608_changetonull\")] public class changetonull : Migration Inheritance object Migration changetonull Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Migrations.haraidashi.html": {
    "href": "api/Convenience.Migrations.haraidashi.html",
    "title": "Class haraidashi | Convenience",
    "keywords": "Class haraidashi Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20240930012937_haraidashi\")] public class haraidashi : Migration Inheritance object Migration haraidashi Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Migrations.html": {
    "href": "api/Convenience.Migrations.html",
    "title": "Namespace Convenience.Migrations | Convenience",
    "keywords": "Namespace Convenience.Migrations Classes ConvenienceContextModelSnapshot Init A base class inherited by each EF Core migration. Kaikei A base class inherited by each EF Core migration. changetonull A base class inherited by each EF Core migration. haraidashi A base class inherited by each EF Core migration. kaikeijissekiprimarykry A base class inherited by each EF Core migration. kaikeiseq A base class inherited by each EF Core migration. kaikeiseqToNotNull A base class inherited by each EF Core migration. naigaiclass A base class inherited by each EF Core migration. shiireTimeStamp A base class inherited by each EF Core migration. shohintanka A base class inherited by each EF Core migration. shohintanka2 A base class inherited by each EF Core migration. tentozaiko A base class inherited by each EF Core migration. zeiritsu A base class inherited by each EF Core migration."
  },
  "api/Convenience.Migrations.kaikeijissekiprimarykry.html": {
    "href": "api/Convenience.Migrations.kaikeijissekiprimarykry.html",
    "title": "Class kaikeijissekiprimarykry | Convenience",
    "keywords": "Class kaikeijissekiprimarykry Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20241025004134_kaikeijissekiprimarykry\")] public class kaikeijissekiprimarykry : Migration Inheritance object Migration kaikeijissekiprimarykry Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Migrations.kaikeiseq.html": {
    "href": "api/Convenience.Migrations.kaikeiseq.html",
    "title": "Class kaikeiseq | Convenience",
    "keywords": "Class kaikeiseq Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20241016012920_kaikeiseq\")] public class kaikeiseq : Migration Inheritance object Migration kaikeiseq Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Migrations.kaikeiseqToNotNull.html": {
    "href": "api/Convenience.Migrations.kaikeiseqToNotNull.html",
    "title": "Class kaikeiseqToNotNull | Convenience",
    "keywords": "Class kaikeiseqToNotNull Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20241016013805_kaikeiseqToNotNull\")] public class kaikeiseqToNotNull : Migration Inheritance object Migration kaikeiseqToNotNull Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Migrations.naigaiclass.html": {
    "href": "api/Convenience.Migrations.naigaiclass.html",
    "title": "Class naigaiclass | Convenience",
    "keywords": "Class naigaiclass Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20241015010729_naigaiclass\")] public class naigaiclass : Migration Inheritance object Migration naigaiclass Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Migrations.shiireTimeStamp.html": {
    "href": "api/Convenience.Migrations.shiireTimeStamp.html",
    "title": "Class shiireTimeStamp | Convenience",
    "keywords": "Class shiireTimeStamp Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20240530005521_shiireTimeStamp\")] public class shiireTimeStamp : Migration Inheritance object Migration shiireTimeStamp Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Migrations.shohintanka.html": {
    "href": "api/Convenience.Migrations.shohintanka.html",
    "title": "Class shohintanka | Convenience",
    "keywords": "Class shohintanka Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20241008042959_shohintanka\")] public class shohintanka : Migration Inheritance object Migration shohintanka Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Migrations.shohintanka2.html": {
    "href": "api/Convenience.Migrations.shohintanka2.html",
    "title": "Class shohintanka2 | Convenience",
    "keywords": "Class shohintanka2 Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20241008043627_shohintanka2\")] public class shohintanka2 : Migration Inheritance object Migration shohintanka2 Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Migrations.tentozaiko.html": {
    "href": "api/Convenience.Migrations.tentozaiko.html",
    "title": "Class tentozaiko | Convenience",
    "keywords": "Class tentozaiko Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20240930025410_tentozaiko\")] public class tentozaiko : Migration Inheritance object Migration tentozaiko Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Migrations.zeiritsu.html": {
    "href": "api/Convenience.Migrations.zeiritsu.html",
    "title": "Class zeiritsu | Convenience",
    "keywords": "Class zeiritsu Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20241015060015_zeiritsu\")] public class zeiritsu : Migration Inheritance object Migration zeiritsu Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Models.DataModels.ChumonJisseki.html": {
    "href": "api/Convenience.Models.DataModels.ChumonJisseki.html",
    "title": "Class ChumonJisseki | Convenience",
    "keywords": "Class ChumonJisseki Namespace Convenience.Models.DataModels Assembly Convenience.dll 注文実績DTO [Table(\"chumon_jisseki\")] [PrimaryKey(\"ChumonId\", new string[] { })] public class ChumonJisseki Inheritance object ChumonJisseki Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonDate [Column(\"chumon_date\")] [Required] public DateOnly ChumonDate { get; set; } Property Value DateOnly ChumonId [Column(\"chumon_code\")] [MaxLength(20)] [Required] public string? ChumonId { get; set; } Property Value string ChumonJissekiMeisais public virtual IList<ChumonJissekiMeisai>? ChumonJissekiMeisais { get; set; } Property Value IList<ChumonJissekiMeisai> ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] public string ShiireSakiId { get; set; } Property Value string ShiireSakiMaster [ForeignKey(\"ShiireSakiId\")] public virtual ShiireSakiMaster? ShiireSakiMaster { get; set; } Property Value ShiireSakiMaster Version [Timestamp] public uint Version { get; set; } Property Value uint"
  },
  "api/Convenience.Models.DataModels.ChumonJissekiMeisai.html": {
    "href": "api/Convenience.Models.DataModels.ChumonJissekiMeisai.html",
    "title": "Class ChumonJissekiMeisai | Convenience",
    "keywords": "Class ChumonJissekiMeisai Namespace Convenience.Models.DataModels Assembly Convenience.dll 注文実績明細DTO [Table(\"chumon_jisseki_meisai\")] [PrimaryKey(\"ChumonId\", new string[] { \"ShiireSakiId\", \"ShiirePrdId\", \"ShohinId\" })] public class ChumonJissekiMeisai Inheritance object ChumonJissekiMeisai Derived ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonId [Column(\"chumon_code\")] [MaxLength(20)] [Required] public string ChumonId { get; set; } Property Value string ChumonJisseki [ForeignKey(\"ChumonId\")] public virtual ChumonJisseki? ChumonJisseki { get; set; } Property Value ChumonJisseki ChumonSu [Column(\"chumon_su\")] [Precision(10, 2)] [RegularExpression(\"^-?\\\\d+(\\\\.\\\\d+)?$\", ErrorMessage = \"{0}は数値で入力してください\")] [Range(0, 999, ErrorMessage = \"{0}は、{1}～{2}の範囲で入力してください\")] [Required(ErrorMessage = \"{0}は、必須入力項目です\")] public decimal ChumonSu { get; set; } Property Value decimal ChumonZan [Column(\"chumon_zan\")] [Precision(10, 2)] public decimal ChumonZan { get; set; } Property Value decimal LastChumonSu [NotMapped] [Precision(10, 2)] public decimal? LastChumonSu { get; set; } Property Value decimal? ShiireJisseki public virtual ICollection<ShiireJisseki>? ShiireJisseki { get; set; } Property Value ICollection<ShiireJisseki> ShiireMaster [ForeignKey(\"ShiireSakiId,ShiirePrdId,ShohinId\")] public virtual ShiireMaster? ShiireMaster { get; set; } Property Value ShiireMaster ShiirePrdId [Column(\"shiire_prd_code\")] [MaxLength(10)] [Required] public string ShiirePrdId { get; set; } Property Value string ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] public string ShiireSakiId { get; set; } Property Value string ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] public string ShohinId { get; set; } Property Value string Version [Timestamp] public uint Version { get; set; } Property Value uint"
  },
  "api/Convenience.Models.DataModels.KaikeiHeader.html": {
    "href": "api/Convenience.Models.DataModels.KaikeiHeader.html",
    "title": "Class KaikeiHeader | Convenience",
    "keywords": "Class KaikeiHeader Namespace Convenience.Models.DataModels Assembly Convenience.dll 会計ヘッダーDTO [Table(\"kaikei_header\")] [PrimaryKey(\"UriageDatetimeId\", new string[] { })] public class KaikeiHeader Inheritance object KaikeiHeader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties KaikeiJissekis public IList<KaikeiJisseki> KaikeiJissekis { get; set; } Property Value IList<KaikeiJisseki> UriageDatetime [Column(\"uriage_datetime\")] [DataType(DataType.DateTime)] [Required] public DateTime UriageDatetime { get; set; } Property Value DateTime UriageDatetimeId [Column(\"uriage_datetimeid\")] [MaxLength(20)] [Required] public string UriageDatetimeId { get; set; } Property Value string"
  },
  "api/Convenience.Models.DataModels.KaikeiJisseki.html": {
    "href": "api/Convenience.Models.DataModels.KaikeiJisseki.html",
    "title": "Class KaikeiJisseki | Convenience",
    "keywords": "Class KaikeiJisseki Namespace Convenience.Models.DataModels Assembly Convenience.dll 会計実績DTO [Table(\"kaikei_jisseki\")] [PrimaryKey(\"UriageDatetimeId\", new string[] { \"ShohinId\" })] public class KaikeiJisseki : IKaikeiJissekiForAdd Inheritance object KaikeiJisseki Implements IKaikeiJissekiForAdd Derived KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties KaikeiHeader [ForeignKey(\"UriageDatetimeId\")] public KaikeiHeader KaikeiHeader { get; set; } Property Value KaikeiHeader KaikeiSeq [Column(\"kaikei_seq\")] [Required] public int KaikeiSeq { get; set; } Property Value int NaigaiClass [Column(\"naigai_class\")] [Required] [MaxLength(1)] public string NaigaiClass { get; set; } Property Value string NaigaiClassMaster [ForeignKey(\"NaigaiClass\")] public NaigaiClassMaster? NaigaiClassMaster { get; set; } Property Value NaigaiClassMaster ShohiZeiritsu [Column(\"shohi_zeiritsu\")] [Required] [Precision(15, 2)] public decimal ShohiZeiritsu { get; set; } Property Value decimal ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] public string? ShohinId { get; set; } Property Value string ShohinMaster [ForeignKey(\"ShohinId\")] public ShohinMaster? ShohinMaster { get; set; } Property Value ShohinMaster ShohinTanka [Column(\"shohin_tanka\")] [Required] [Precision(15, 2)] public decimal ShohinTanka { get; set; } Property Value decimal TentoZaiko public TentoZaiko? TentoZaiko { get; set; } Property Value TentoZaiko UriageDatetime [Column(\"uriage_datetime\")] [DataType(DataType.DateTime)] [Required] public DateTime UriageDatetime { get; set; } Property Value DateTime UriageDatetimeId [Column(\"uriage_datetimeid\")] [MaxLength(20)] [Required] public string UriageDatetimeId { get; set; } Property Value string UriageKingaku [Column(\"uriage_kingaku\")] [Required] [Precision(15, 2)] public decimal UriageKingaku { get; set; } Property Value decimal UriageSu [Column(\"uriage_su\")] [Required] [Precision(10, 2)] public decimal UriageSu { get; set; } Property Value decimal ZeikomiKingaku [Column(\"zeikomi_kingaku\")] [Required] [Precision(15, 2)] public decimal ZeikomiKingaku { get; set; } Property Value decimal"
  },
  "api/Convenience.Models.DataModels.NaigaiClassMaster.html": {
    "href": "api/Convenience.Models.DataModels.NaigaiClassMaster.html",
    "title": "Class NaigaiClassMaster | Convenience",
    "keywords": "Class NaigaiClassMaster Namespace Convenience.Models.DataModels Assembly Convenience.dll 内外区分マスタＤＴＯ [Table(\"naigai_class_master\")] public class NaigaiClassMaster Inheritance object NaigaiClassMaster Derived NaigaiClassMasterService.PostMasterData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties KaikeiJissekis public virtual IEnumerable<KaikeiJisseki> KaikeiJissekis { get; set; } Property Value IEnumerable<KaikeiJisseki> NaigaiClass [Column(\"naigai_class\")] [Required] [MaxLength(1)] [Key] public string NaigaiClass { get; set; } Property Value string NaigaiClassName [Column(\"naigai_class_name\")] [Required] [MaxLength(30)] public string NaigaiClassName { get; set; } Property Value string"
  },
  "api/Convenience.Models.DataModels.ShiireJisseki.html": {
    "href": "api/Convenience.Models.DataModels.ShiireJisseki.html",
    "title": "Class ShiireJisseki | Convenience",
    "keywords": "Class ShiireJisseki Namespace Convenience.Models.DataModels Assembly Convenience.dll 仕入実績実績DTO [Table(\"shiire_jisseki\")] [PrimaryKey(\"ChumonId\", new string[] { \"ShiireDate\", \"SeqByShiireDate\", \"ShiireSakiId\", \"ShiirePrdId\" })] public class ShiireJisseki Inheritance object ShiireJisseki Derived ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonId [Column(\"chumon_code\")] [MaxLength(20)] [Required] public string ChumonId { get; set; } Property Value string ChumonJissekiMeisaii [ForeignKey(\"ChumonId,ShiireSakiId,ShiirePrdId,ShohinId\")] public ChumonJissekiMeisai ChumonJissekiMeisaii { get; set; } Property Value ChumonJissekiMeisai NonyuSu [Column(\"nonyu_su\")] [Precision(10, 2)] public decimal NonyuSu { get; set; } Property Value decimal NonyuSubalance [NotMapped] [Precision(10, 2)] public decimal? NonyuSubalance { get; set; } Property Value decimal? SeqByShiireDate [Column(\"seq_by_shiiredate\")] [Required] public uint SeqByShiireDate { get; set; } Property Value uint ShiireDate [Column(\"shiire_date\")] [Required] public DateOnly ShiireDate { get; set; } Property Value DateOnly ShiireDateTime [Column(\"shiire_datetime\")] [Required] public DateTime ShiireDateTime { get; set; } Property Value DateTime ShiirePrdId [Column(\"shiire_prd_code\")] [MaxLength(10)] [Required] public string ShiirePrdId { get; set; } Property Value string ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] public string ShiireSakiId { get; set; } Property Value string ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] public string ShohinId { get; set; } Property Value string SokoZaiko [NotMapped] [ForeignKey(\"ShiireSakiId,ShiirePrdId,ShohinId\")] public virtual SokoZaiko? SokoZaiko { get; set; } Property Value SokoZaiko Version [Timestamp] public uint Version { get; set; } Property Value uint"
  },
  "api/Convenience.Models.DataModels.ShiireMaster.html": {
    "href": "api/Convenience.Models.DataModels.ShiireMaster.html",
    "title": "Class ShiireMaster | Convenience",
    "keywords": "Class ShiireMaster Namespace Convenience.Models.DataModels Assembly Convenience.dll 仕入マスタDTO [Table(\"shiire_master\")] [PrimaryKey(\"ShiireSakiId\", new string[] { \"ShiirePrdId\", \"ShohinId\" })] public class ShiireMaster Inheritance object ShiireMaster Derived ShiireMasterService.PostMasterData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonJissekiMeisaiis public virtual ICollection<ChumonJissekiMeisai>? ChumonJissekiMeisaiis { get; set; } Property Value ICollection<ChumonJissekiMeisai> ShiirePcsPerUnit [Column(\"shiire_pcs_unit\")] [Required] [Precision(7, 2)] public decimal ShiirePcsPerUnit { get; set; } Property Value decimal ShiirePrdId [Column(\"shiire_prd_code\")] [MaxLength(10)] [Required] public string ShiirePrdId { get; set; } Property Value string ShiirePrdName [Column(\"shiire_prd_name\")] [MaxLength(30)] [Required] public string ShiirePrdName { get; set; } Property Value string ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] public string ShiireSakiId { get; set; } Property Value string ShiireSakiMaster [ForeignKey(\"ShiireSakiId\")] public virtual ShiireSakiMaster? ShiireSakiMaster { get; set; } Property Value ShiireSakiMaster ShiireUnit [Column(\"shiire_unit\")] [MaxLength(10)] [Required] public string ShiireUnit { get; set; } Property Value string ShireTanka [Column(\"shiire_tanka\")] [Required] [Precision(7, 2)] public decimal ShireTanka { get; set; } Property Value decimal ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] public string ShohinId { get; set; } Property Value string ShohinMaster [ForeignKey(\"ShohinId\")] public virtual ShohinMaster? ShohinMaster { get; set; } Property Value ShohinMaster SokoZaiko public virtual SokoZaiko? SokoZaiko { get; set; } Property Value SokoZaiko TentoHaraidashiJissekis public virtual IList<TentoHaraidashiJisseki>? TentoHaraidashiJissekis { get; set; } Property Value IList<TentoHaraidashiJisseki>"
  },
  "api/Convenience.Models.DataModels.ShiireSakiMaster.html": {
    "href": "api/Convenience.Models.DataModels.ShiireSakiMaster.html",
    "title": "Class ShiireSakiMaster | Convenience",
    "keywords": "Class ShiireSakiMaster Namespace Convenience.Models.DataModels Assembly Convenience.dll 仕入先マスタDTO [Table(\"shiire_saki_master\")] public class ShiireSakiMaster : ISelectList Inheritance object ShiireSakiMaster Implements ISelectList Derived ShiireSakiMasterService.PostMasterData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Banchi [Column(\"banchi\")] [MaxLength(10)] [Required] public string Banchi { get; set; } Property Value string ChumonJissekis public virtual ICollection<ChumonJisseki>? ChumonJissekis { get; set; } Property Value ICollection<ChumonJisseki> OrderKey public string[] OrderKey { get; } Property Value string[] ShiireSakiBusho [Column(\"shiire_saki_busho\")] [MaxLength(30)] [Required] public string ShiireSakiBusho { get; set; } Property Value string ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] [Key] public string ShiireSakiId { get; set; } Property Value string ShiireSakiKaisya [Column(\"shiire_saki_kaisya\")] [MaxLength(30)] [Required] public string ShiireSakiKaisya { get; set; } Property Value string Shikuchoson [Column(\"shikuchoson\")] [MaxLength(10)] [Required] public string Shikuchoson { get; set; } Property Value string ShireMasters public virtual ICollection<ShiireMaster>? ShireMasters { get; set; } Property Value ICollection<ShiireMaster> Tatemonomei [Column(\"tatemonomei\")] [MaxLength(10)] [Required] public string Tatemonomei { get; set; } Property Value string Text public string Text { get; } Property Value string Todoufuken [Column(\"todoufuken\")] [MaxLength(10)] [Required] public string Todoufuken { get; set; } Property Value string Value public string Value { get; } Property Value string YubinBango [Column(\"yubin_bango\")] [MaxLength(30)] [Required] [DataType(DataType.PostalCode)] public string YubinBango { get; set; } Property Value string"
  },
  "api/Convenience.Models.DataModels.ShohinMaster.html": {
    "href": "api/Convenience.Models.DataModels.ShohinMaster.html",
    "title": "Class ShohinMaster | Convenience",
    "keywords": "Class ShohinMaster Namespace Convenience.Models.DataModels Assembly Convenience.dll 商品マスタDTO [Table(\"shohin_master\")] public class ShohinMaster : ISelectList Inheritance object ShohinMaster Implements ISelectList Derived ShohinMasterService.PostMasterData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties OrderKey public string[] OrderKey { get; } Property Value string[] ShiireMasters public virtual IList<ShiireMaster>? ShiireMasters { get; set; } Property Value IList<ShiireMaster> ShohiZeiritsu [Column(\"shohi_zeiritsu\")] [Required] [Precision(15, 2)] public decimal ShohiZeiritsu { get; set; } Property Value decimal ShohiZeiritsuEatIn [Column(\"shohi_zeiritsu_eatin\")] [Required] [Precision(15, 2)] public decimal ShohiZeiritsuEatIn { get; set; } Property Value decimal ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] [Key] public string ShohinId { get; set; } Property Value string ShohinName [Column(\"shohin_name\")] [MaxLength(50)] [Required] public string ShohinName { get; set; } Property Value string ShohinTanka [Column(\"shohin_tanka\")] [Required] [Precision(15, 2)] public decimal ShohinTanka { get; set; } Property Value decimal TentoZaiko public virtual TentoZaiko? TentoZaiko { get; set; } Property Value TentoZaiko Text public string Text { get; } Property Value string Value public string Value { get; } Property Value string"
  },
  "api/Convenience.Models.DataModels.SokoZaiko.html": {
    "href": "api/Convenience.Models.DataModels.SokoZaiko.html",
    "title": "Class SokoZaiko | Convenience",
    "keywords": "Class SokoZaiko Namespace Convenience.Models.DataModels Assembly Convenience.dll 倉庫在庫DTO [Table(\"soko_zaiko\")] [PrimaryKey(\"ShiireSakiId\", new string[] { \"ShiirePrdId\", \"ShohinId\" })] public class SokoZaiko Inheritance object SokoZaiko Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LastDeliveryDate [Column(\"last_delivery_date\")] public DateOnly? LastDeliveryDate { get; set; } Property Value DateOnly? LastShiireDate [Column(\"last_shiire_date\")] [Required] public DateOnly LastShiireDate { get; set; } Property Value DateOnly ShiireJissekis [NotMapped] public virtual IList<ShiireJisseki>? ShiireJissekis { get; set; } Property Value IList<ShiireJisseki> ShiireMaster [ForeignKey(\"ShiireSakiId,ShiirePrdId,ShohinId\")] public virtual ShiireMaster? ShiireMaster { get; set; } Property Value ShiireMaster ShiirePrdId [Column(\"shiire_prd_code\")] [MaxLength(10)] [Required] public string ShiirePrdId { get; set; } Property Value string ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] public string ShiireSakiId { get; set; } Property Value string ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] public string ShohinId { get; set; } Property Value string SokoZaikoCaseSu [Column(\"soko_zaiko_case_su\")] [Precision(10, 2)] public decimal SokoZaikoCaseSu { get; set; } Property Value decimal SokoZaikoSu [Column(\"soko_zaiko_su\")] [Precision(10, 2)] public decimal SokoZaikoSu { get; set; } Property Value decimal Version [Timestamp] public uint Version { get; set; } Property Value uint"
  },
  "api/Convenience.Models.DataModels.TentoHaraidashiHeader.html": {
    "href": "api/Convenience.Models.DataModels.TentoHaraidashiHeader.html",
    "title": "Class TentoHaraidashiHeader | Convenience",
    "keywords": "Class TentoHaraidashiHeader Namespace Convenience.Models.DataModels Assembly Convenience.dll 店頭払出ヘッダー実績DTO [Table(\"tento_haraidashi_header\")] [PrimaryKey(\"TentoHaraidashiId\", new string[] { })] public class TentoHaraidashiHeader Inheritance object TentoHaraidashiHeader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HaraidashiDateTime [Column(\"haraidashi_datetime\")] [Required] [DataType(DataType.DateTime)] public DateTime HaraidashiDateTime { get; set; } Property Value DateTime TentoHaraidashiId [Column(\"tento_haraidashi_code\")] [MaxLength(20)] [Required] public string TentoHaraidashiId { get; set; } Property Value string TentoHaraidashiJissekis public virtual IList<TentoHaraidashiJisseki> TentoHaraidashiJissekis { get; set; } Property Value IList<TentoHaraidashiJisseki>"
  },
  "api/Convenience.Models.DataModels.TentoHaraidashiJisseki.html": {
    "href": "api/Convenience.Models.DataModels.TentoHaraidashiJisseki.html",
    "title": "Class TentoHaraidashiJisseki | Convenience",
    "keywords": "Class TentoHaraidashiJisseki Namespace Convenience.Models.DataModels Assembly Convenience.dll 店頭払出実績DTO [Table(\"tento_haraidashi_jisseki\")] [PrimaryKey(\"TentoHaraidashiId\", new string[] { \"ShiireSakiId\", \"ShiirePrdId\", \"ShohinId\" })] public class TentoHaraidashiJisseki Inheritance object TentoHaraidashiJisseki Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HaraidashiCaseSu [Column(\"haraidashi_case_su\")] [Range(0, 100, ErrorMessage = \"0から100の間の値を入力してください\")] public int HaraidashiCaseSu { get; set; } Property Value int HaraidashiDate [Column(\"haraidashi_date\")] [Required] [DataType(DataType.DateTime)] public DateTime HaraidashiDate { get; set; } Property Value DateTime HaraidashiSu [Column(\"haraidashi_su\")] [Precision(7, 2)] public decimal HaraidashiSu { get; set; } Property Value decimal ShiireMaster [ForeignKey(\"ShiireSakiId,ShiirePrdId,ShohinId\")] public virtual ShiireMaster? ShiireMaster { get; set; } Property Value ShiireMaster ShiirePrdId [Column(\"shiire_prd_code\")] [MaxLength(10)] [Required] public string ShiirePrdId { get; set; } Property Value string ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] public string ShiireSakiId { get; set; } Property Value string ShireDateTime [Column(\"shiire_datetime\")] [Required] [DataType(DataType.DateTime)] public DateOnly ShireDateTime { get; set; } Property Value DateOnly ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] [Key] public string ShohinId { get; set; } Property Value string TentoHaraidashiHeader [ForeignKey(\"TentoHaraidashiId\")] public virtual TentoHaraidashiHeader? TentoHaraidashiHeader { get; set; } Property Value TentoHaraidashiHeader TentoHaraidashiId [Column(\"tento_haraidashi_code\")] [MaxLength(20)] [Required] public string TentoHaraidashiId { get; set; } Property Value string"
  },
  "api/Convenience.Models.DataModels.TentoZaiko.html": {
    "href": "api/Convenience.Models.DataModels.TentoZaiko.html",
    "title": "Class TentoZaiko | Convenience",
    "keywords": "Class TentoZaiko Namespace Convenience.Models.DataModels Assembly Convenience.dll 店頭在庫 [Table(\"tento_zaiko\")] [PrimaryKey(\"ShohinId\", new string[] { })] public class TentoZaiko Inheritance object TentoZaiko Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LastHaraidashiDate [Column(\"last_haraidashi_datetime\")] [Required] [DataType(DataType.DateTime)] public DateTime? LastHaraidashiDate { get; set; } Property Value DateTime? LastShireDateTime [Column(\"last_shiire_datetime\")] [Required] [DataType(DataType.DateTime)] public DateOnly LastShireDateTime { get; set; } Property Value DateOnly LastUriageDatetime [Column(\"last_uriage_datetime\")] [DataType(DataType.DateTime)] public DateTime? LastUriageDatetime { get; set; } Property Value DateTime? ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] [Key] public string ShohinId { get; set; } Property Value string ShohinMaster [ForeignKey(\"ShohinId\")] public virtual ShohinMaster? ShohinMaster { get; set; } Property Value ShohinMaster ZaikoSu [Column(\"zaiko_su\")] [Precision(7, 2)] public decimal ZaikoSu { get; set; } Property Value decimal"
  },
  "api/Convenience.Models.DataModels.html": {
    "href": "api/Convenience.Models.DataModels.html",
    "title": "Namespace Convenience.Models.DataModels | Convenience",
    "keywords": "Namespace Convenience.Models.DataModels Classes ChumonJisseki 注文実績DTO ChumonJissekiMeisai 注文実績明細DTO KaikeiHeader 会計ヘッダーDTO KaikeiJisseki 会計実績DTO NaigaiClassMaster 内外区分マスタＤＴＯ ShiireJisseki 仕入実績実績DTO ShiireMaster 仕入マスタDTO ShiireSakiMaster 仕入先マスタDTO ShohinMaster 商品マスタDTO SokoZaiko 倉庫在庫DTO TentoHaraidashiHeader 店頭払出ヘッダー実績DTO TentoHaraidashiJisseki 店頭払出実績DTO TentoZaiko 店頭在庫"
  },
  "api/Convenience.Models.ErrorViewModel.html": {
    "href": "api/Convenience.Models.ErrorViewModel.html",
    "title": "Class ErrorViewModel | Convenience",
    "keywords": "Class ErrorViewModel Namespace Convenience.Models Assembly Convenience.dll ƒGƒ‰\u0081[ƒy\u0081[ƒW—pƒrƒ…\u0081[ƒ‚ƒfƒ‹ public class ErrorViewModel Inheritance object ErrorViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ExceptionHandlerPathFeature ƒGƒ‰\u0081[”­\u0090¶Žž‚Ì\u008FÚ\u008D×\u008Fî•ñ —áŠO‚ª”­\u0090¶‚µ‚½ƒpƒX‚â—áŠOŽ©‘Ì‚È‚Ç‚Ì\u008Fî•ñ public IExceptionHandlerPathFeature? ExceptionHandlerPathFeature Field Value IExceptionHandlerPathFeature StatusCodeReExecuteFeature ƒGƒ‰\u0081[ƒnƒ“ƒhƒŠƒ“ƒO‚ÉŠÖ˜A‚·‚é‹@”\\‚ð’ñ‹Ÿ‚·‚éƒCƒ“ƒ^\u0081[ƒtƒF\u0081[ƒX “Á‚É\u0081A404 Not Found ‚â 500 Internal Server Error ‚È‚Ç‚ÌƒXƒe\u0081[ƒ^ƒXƒR\u0081[ƒh‚ª”­\u0090¶‚µ‚½\u008Fê\u008D‡‚É\u0081A \u008DÄŽÀ\u008Ds‚³‚ê‚éƒŠƒNƒGƒXƒg‚Ì\u008Fî•ñ‚ðŽæ“¾‚·‚é‚½‚ß‚ÉŽg—p public IStatusCodeReExecuteFeature? StatusCodeReExecuteFeature Field Value IStatusCodeReExecuteFeature Properties EventAt ƒGƒ‰\u0081[ƒCƒxƒ“ƒg”­\u0090¶“úŽž public DateTime? EventAt { get; set; } Property Value DateTime? RequestId ƒŠƒNƒGƒXƒgID public string? RequestId { get; set; } Property Value string ShowRequestId \u008Fã‹LƒŠƒNƒGƒXƒgID‚ð\u008Fo‚·‚©\u008Fo‚³‚È‚¢‚© public bool ShowRequestId { get; } Property Value bool StatusCode ƒXƒe\u0081[ƒ^ƒXƒR\u0081[ƒh public int? StatusCode { get; set; } Property Value int?"
  },
  "api/Convenience.Models.Interfaces.Comparisons.html": {
    "href": "api/Convenience.Models.Interfaces.Comparisons.html",
    "title": "Enum Comparisons | Convenience",
    "keywords": "Enum Comparisons Namespace Convenience.Models.Interfaces Assembly Convenience.dll 比較演算子のスキーマー化 public enum Comparisons Fields Equal = 0 GreaterThan = 3 GreaterThanOrEqual = 2 LessThan = 5 LessThanOrEqual = 4 NotEqual = 1"
  },
  "api/Convenience.Models.Interfaces.IChumon.html": {
    "href": "api/Convenience.Models.Interfaces.IChumon.html",
    "title": "Interface IChumon | Convenience",
    "keywords": "Interface IChumon Namespace Convenience.Models.Interfaces Assembly Convenience.dll 注文クラスインターフェース public interface IChumon Properties ChumonJisseki 注文実績プロパティ ChumonJisseki? ChumonJisseki { get; set; } Property Value ChumonJisseki Methods ChumonSakusei(string, DateOnly) 注文作成 Task<ChumonJisseki> ChumonSakusei(string inShireSakiId, DateOnly inChumonDate) Parameters inShireSakiId string 仕入先コード inChumonDate DateOnly 注文日 Returns Task<ChumonJisseki> 新規作成された注文実績 Remarks 仕入先より注文実績データ（親）を生成する 注文実績明細データ（子）を仕入マスタを元に作成する 注文実績データ（親）と注文実績明細データ（子）を連結する 注文実績（プラス注文実績明細）を戻り値とする Exceptions Exception ChumonToiawase(string, DateOnly) 注文更新用問い合わせ Task<ChumonJisseki?> ChumonToiawase(string inShireSakiId, DateOnly inChumonDate) Parameters inShireSakiId string 仕入先コード inChumonDate DateOnly 注文日 Returns Task<ChumonJisseki> 既存の注文実績 Remarks ①注文実績＋注文実績＋仕入マスタ＋商品マスタ検索 ②戻り値を注文実績＋注文実績明細とする ChumonUpdate(ChumonJisseki) 注文実績＋注文明細更新 Task<ChumonJisseki> ChumonUpdate(ChumonJisseki postedChumonJisseki) Parameters postedChumonJisseki ChumonJisseki postされた注文実績 Returns Task<ChumonJisseki> postされた注文実績を上書きされた注文実績 ShiireSakiList<T>(Expression<Func<ShiireSakiMaster, T>>) IQueryable<ShiireSakiMaster> ShiireSakiList<T>(Expression<Func<ShiireSakiMaster, T>> orderExpression) Parameters orderExpression Expression<Func<ShiireSakiMaster, T>> Returns IQueryable<ShiireSakiMaster> Type Parameters T"
  },
  "api/Convenience.Models.Interfaces.IChumonJissekiService.html": {
    "href": "api/Convenience.Models.Interfaces.IChumonJissekiService.html",
    "title": "Interface IChumonJissekiService | Convenience",
    "keywords": "Interface IChumonJissekiService Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface IChumonJissekiService Methods ChumonJissekiRetrival(ChumonJissekiViewModel) Task<ChumonJissekiViewModel> ChumonJissekiRetrival(ChumonJissekiViewModel argChumonJissekiViewModel) Parameters argChumonJissekiViewModel ChumonJissekiViewModel Returns Task<ChumonJissekiViewModel>"
  },
  "api/Convenience.Models.Interfaces.IChumonService.html": {
    "href": "api/Convenience.Models.Interfaces.IChumonService.html",
    "title": "Interface IChumonService | Convenience",
    "keywords": "Interface IChumonService Namespace Convenience.Models.Interfaces Assembly Convenience.dll 注文サービスクラス用インターフェース public interface IChumonService Properties chumon 注文クラス用オブジェクト変数 IChumon chumon { get; } Property Value IChumon Methods ChumonCommit(ChumonViewModel) 注文データをDBに書き込む Task<ChumonViewModel> ChumonCommit(ChumonViewModel inChumonViewModel) Parameters inChumonViewModel ChumonViewModel Returns Task<ChumonViewModel> ChumonViewModel 注文明細ビューモデル Exceptions Exception 排他制御の例外が起きたらスローする ChumonSetting(ChumonKeysViewModel) 注文セッティング Task<ChumonViewModel> ChumonSetting(ChumonKeysViewModel inChumonKeysViewModel) Parameters inChumonKeysViewModel ChumonKeysViewModel Returns Task<ChumonViewModel> ChumonKeysViewModel 注文明細ビューモデル SetChumonKeysViewModel() 注文キービューモデル初期設定 Task<ChumonKeysViewModel> SetChumonKeysViewModel() Returns Task<ChumonKeysViewModel> ChumonKeysViewModel 注文キービューモデル"
  },
  "api/Convenience.Models.Interfaces.IConvertObjectToCsv.html": {
    "href": "api/Convenience.Models.Interfaces.IConvertObjectToCsv.html",
    "title": "Interface IConvertObjectToCsv | Convenience",
    "keywords": "Interface IConvertObjectToCsv Namespace Convenience.Models.Interfaces Assembly Convenience.dll CSVファイルを作る用インターフェース public interface IConvertObjectToCsv Methods ConvertToCSV<T1, T2>(IEnumerable<T1>, string) CSVへ変換 string ConvertToCSV<T1, T2>(IEnumerable<T1> arg1, string arg2) where T1 : class where T2 : class Parameters arg1 IEnumerable<T1> 変換元モデル arg2 string CSVマッピングモデル Returns string 作られたファイル名（フルパス） Type Parameters T1 CSV化したいモデル T2 CSVMappingモデル CsvConfig() Csvコンフィグ (CsvConfiguration config, Encoding encording) CsvConfig() Returns (CsvConfiguration config, Encoding encording) Csvコンフィグ・エンコード GetFileName(string) ファイル名を取得する string GetFileName(string arg1) Parameters arg1 string コントローラー名 Returns string ファイル名 Exceptions KeyNotFoundException"
  },
  "api/Convenience.Models.Interfaces.IDbContext.html": {
    "href": "api/Convenience.Models.Interfaces.IDbContext.html",
    "title": "Interface IDbContext | Convenience",
    "keywords": "Interface IDbContext Namespace Convenience.Models.Interfaces Assembly Convenience.dll DB接続用インターフェース（c#コンソールデバッグ用） public interface IDbContext Fields ConfigrationFileName private const string ConfigrationFileName = \"appsettings.json\" Field Value string KeyWordInAppConfig private const string KeyWordInAppConfig = \"ConnectionStrings:ConvenienceContext\" Field Value string Methods DbOpen() PostgreSQL DBオープン protected static ConvenienceContext DbOpen() Returns ConvenienceContext"
  },
  "api/Convenience.Models.Interfaces.IDeleteFlag.html": {
    "href": "api/Convenience.Models.Interfaces.IDeleteFlag.html",
    "title": "Interface IDeleteFlag | Convenience",
    "keywords": "Interface IDeleteFlag Namespace Convenience.Models.Interfaces Assembly Convenience.dll 削除フラグ不可設定用インターフェース public interface IDeleteFlag Properties DeleteFlag bool DeleteFlag { get; set; } Property Value bool"
  },
  "api/Convenience.Models.Interfaces.IKaikei.html": {
    "href": "api/Convenience.Models.Interfaces.IKaikei.html",
    "title": "Interface IKaikei | Convenience",
    "keywords": "Interface IKaikei Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface IKaikei Properties KaikeiHeader 会計ヘッダープロパティ KaikeiHeader? KaikeiHeader { get; set; } Property Value KaikeiHeader Methods KaikeiAddcommodity(IKaikeiJissekiForAdd) 会計実績の品目追加 Task<IList<KaikeiJisseki>> KaikeiAddcommodity(IKaikeiJissekiForAdd argKaikeiJisseki) Parameters argKaikeiJisseki IKaikeiJissekiForAdd Returns Task<IList<KaikeiJisseki>> KaikeiJisseki 品目を追加された会計実績 KaikeiSakusei(DateTime) 会計作成（新規会計用） 新規会計ヘッダーと実績を作成する KaikeiHeader KaikeiSakusei(DateTime argCurrentDateTime) Parameters argCurrentDateTime DateTime 適用日時 Returns KaikeiHeader KaikeiHeader 会計ヘッダー＋実績 Remarks ①会計ヘッダーの作成 ②会計実績の作成 KaikeiToiawase(string) 会計問い合わせ(ソート指示なし） Task<KaikeiHeader?> KaikeiToiawase(string argTentoHaraidashiId) Parameters argTentoHaraidashiId string 店頭払出コード Returns Task<KaikeiHeader> 会計実績ヘッダー＋実績 KaikeiToiawase<T>(string, Expression<Func<KaikeiJisseki, T>>?) 会計問い合わせ Task<KaikeiHeader?> KaikeiToiawase<T>(string argTentoHaraidashiId, Expression<Func<KaikeiJisseki, T>>? orderexpression) Parameters argTentoHaraidashiId string 店頭払出コード orderexpression Expression<Func<KaikeiJisseki, T>> ソート指示用ラムダ式 Returns Task<KaikeiHeader> 会計実績ヘッダー＋実績 Type Parameters T ソート指示された項目のタイプ KaikeiUpdate(KaikeiHeader) 会計ヘッダー＋実績のＤＢ更新 Task<KaikeiHeader> KaikeiUpdate(KaikeiHeader argpostedKaikeiHeader) Parameters argpostedKaikeiHeader KaikeiHeader 反映する会計ヘッダ＋実績 Returns Task<KaikeiHeader> KaikeiHeader DB更新された会計ヘッダ＋実績 ShohizeiKeisan(IKaikeiJissekiForAdd, KaikeiJisseki) 消費税計算 KaikeiJisseki ShohizeiKeisan(IKaikeiJissekiForAdd inKaikeiJisseki, KaikeiJisseki outKaikeiJisseki) Parameters inKaikeiJisseki IKaikeiJissekiForAdd 会計実績 outKaikeiJisseki KaikeiJisseki 消費税関連で計算されたものの反映先（会計実績） Returns KaikeiJisseki 消費税関連で計算されたものの反映先（会計実績） Remarks （条件）売上金額が第一引数側にセットされていること Exceptions InvalidDataException ZaikoConnection(string, DateTime, decimal, TentoZaiko?) 店頭在庫から売上分を差し引く TentoZaiko? ZaikoConnection(string argShohinId, DateTime argUriageDateTime, decimal argDiffUriageSu, TentoZaiko? argTentoZaiko) Parameters argShohinId string 商品コード argUriageDateTime DateTime 売上日時 argDiffUriageSu decimal 差し引く個数 argTentoZaiko TentoZaiko 店頭在庫 Returns TentoZaiko 店頭在庫"
  },
  "api/Convenience.Models.Interfaces.IKaikeiJissekiForAdd.html": {
    "href": "api/Convenience.Models.Interfaces.IKaikeiJissekiForAdd.html",
    "title": "Interface IKaikeiJissekiForAdd | Convenience",
    "keywords": "Interface IKaikeiJissekiForAdd Namespace Convenience.Models.Interfaces Assembly Convenience.dll 画面上の会計実績追加用のデータ構造インターフェース化 このインターフェースは、画面からの追加や、消費税に関する内外区分による消費税計算で使われる 実装先：KaikeiJissekiForAdd、KaikeiJisseki(DTO) public interface IKaikeiJissekiForAdd Properties NaigaiClass string NaigaiClass { get; set; } Property Value string ShohinId string? ShohinId { get; set; } Property Value string ShohinMaster ShohinMaster? ShohinMaster { get; set; } Property Value ShohinMaster UriageDatetime DateTime UriageDatetime { get; set; } Property Value DateTime UriageKingaku decimal UriageKingaku { get; set; } Property Value decimal UriageSu decimal UriageSu { get; set; } Property Value decimal"
  },
  "api/Convenience.Models.Interfaces.IKaikeiJissekiService.html": {
    "href": "api/Convenience.Models.Interfaces.IKaikeiJissekiService.html",
    "title": "Interface IKaikeiJissekiService | Convenience",
    "keywords": "Interface IKaikeiJissekiService Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface IKaikeiJissekiService Methods KaikeiJissekiRetrival(KaikeiJissekiViewModel) Task<KaikeiJissekiViewModel> KaikeiJissekiRetrival(KaikeiJissekiViewModel argKaikeiJissekiViewModel) Parameters argKaikeiJissekiViewModel KaikeiJissekiViewModel Returns Task<KaikeiJissekiViewModel>"
  },
  "api/Convenience.Models.Interfaces.IKaikeiService.html": {
    "href": "api/Convenience.Models.Interfaces.IKaikeiService.html",
    "title": "Interface IKaikeiService | Convenience",
    "keywords": "Interface IKaikeiService Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface IKaikeiService Methods GetShohinName(string) 商品コードを引数に、商品名称を回答する Task<string> GetShohinName(string argShohinId) Parameters argShohinId string 商品コード Returns Task<string> 商品名称 KaikeiAdd(KaikeiViewModel) 会計データの画面上の追加 Task<KaikeiViewModel> KaikeiAdd(KaikeiViewModel argKaikeiViewModel) Parameters argKaikeiViewModel KaikeiViewModel 会計ビューモデル Returns Task<KaikeiViewModel> KaikeiViewModel 会計品目が追加追加された会計ビュー KaikeiCommit(KaikeiViewModel) 会計Commit Task<KaikeiViewModel> KaikeiCommit(KaikeiViewModel argKaikeiViewModel) Parameters argKaikeiViewModel KaikeiViewModel 会計ビューモデル Returns Task<KaikeiViewModel> KaikeiViewModel 会計ビューモデル KaikeiSetting(KaikeiViewModel) 会計セッティング Task<KaikeiViewModel> KaikeiSetting(KaikeiViewModel argKaikeiViewModel) Parameters argKaikeiViewModel KaikeiViewModel 会計ビューモデル Returns Task<KaikeiViewModel> KaikeiViewModel 会計ビューモデル SetKaikeiViewModel() 会計ビューモデル設定 Task<KaikeiViewModel> SetKaikeiViewModel() Returns Task<KaikeiViewModel> KaikeiViewModel 会計ビューモデル"
  },
  "api/Convenience.Models.Interfaces.IMasterRegistrationService-3.IMasterRegistrationSelectList.html": {
    "href": "api/Convenience.Models.Interfaces.IMasterRegistrationService-3.IMasterRegistrationSelectList.html",
    "title": "Interface IMasterRegistrationService<TKeepMasterData, TPostMasterData, TMasterRegistrationViewModel>.IMasterRegistrationSelectList | Convenience",
    "keywords": "Interface IMasterRegistrationService<TKeepMasterData, TPostMasterData, TMasterRegistrationViewModel>.IMasterRegistrationSelectList Namespace Convenience.Models.Interfaces Assembly Convenience.dll 選択リスト作成のためのインターフェース public interface IMasterRegistrationService<TKeepMasterData, TPostMasterData, TMasterRegistrationViewModel>.IMasterRegistrationSelectList Properties _context ConvenienceContext _context { get; } Property Value ConvenienceContext Methods SetSelectList<T>() 任意の型Tの選択リストを作成 Task<IList<SelectListItem>> SetSelectList<T>() where T : class, ISelectList, new() Returns Task<IList<SelectListItem>> Type Parameters T"
  },
  "api/Convenience.Models.Interfaces.IMasterRegistrationService-3.html": {
    "href": "api/Convenience.Models.Interfaces.IMasterRegistrationService-3.html",
    "title": "Interface IMasterRegistrationService<TKeepMasterData, TPostMasterData, TMasterRegistrationViewModel> | Convenience",
    "keywords": "Interface IMasterRegistrationService<TKeepMasterData, TPostMasterData, TMasterRegistrationViewModel> Namespace Convenience.Models.Interfaces Assembly Convenience.dll マスター登録サービスインターフェース public interface IMasterRegistrationService<TKeepMasterData, TPostMasterData, TMasterRegistrationViewModel> : ISharedTools Type Parameters TKeepMasterData 更新されるマスタデータの型 TPostMasterData Postされるデータの型 TMasterRegistrationViewModel 登録用ビューモデルの型 Inherited Members ISharedTools.ConvertToSerial<T>(T) ISharedTools.ConvertFromSerial<T>(string) ISharedTools.IsExistCheck<T>(T) ISharedTools.IsNotExistCheck<T>(T) ISharedTools.GetDisplayName(Type, string) Properties KeepMasterDatas 更新されるマスタデータ IList<TKeepMasterData> KeepMasterDatas { get; set; } Property Value IList<TKeepMasterData> MasterRegisiationViewModel 登録用ビューモデル IMasterRegistrationViewModel<TPostMasterData> MasterRegisiationViewModel { get; set; } Property Value IMasterRegistrationViewModel<TPostMasterData> PostedMasterDatas Postされるデータ IList<TPostMasterData> PostedMasterDatas { get; set; } Property Value IList<TPostMasterData> _context データベースコンテキスト ConvenienceContext _context { get; set; } Property Value ConvenienceContext Methods DefaultInsertRow(IList<TPostMasterData>, int) 新しい行を挿入するデフォルトの処理 IList<TPostMasterData> DefaultInsertRow(IList<TPostMasterData> PostMasterDatas, int index) Parameters PostMasterDatas IList<TPostMasterData> index int Returns IList<TPostMasterData> DefaultMakeViewModel() デフォルトのビューモデル作成処理 Task<IMasterRegistrationViewModel<TPostMasterData>> DefaultMakeViewModel() Returns Task<IMasterRegistrationViewModel<TPostMasterData>> 生成されたビューモデル DefaultUpdateMasterData(IMasterRegistrationViewModel<TPostMasterData>) デフォルトの更新処理 Task<IMasterRegistrationViewModel<TPostMasterData>> DefaultUpdateMasterData(IMasterRegistrationViewModel<TPostMasterData> argMasterRegistrationViewModel) Parameters argMasterRegistrationViewModel IMasterRegistrationViewModel<TPostMasterData> Returns Task<IMasterRegistrationViewModel<TPostMasterData>> DeleteData<T>(IEnumerable<IPostMasterData>) 削除フラグが立っていないデータをフィルタリング IList<T> DeleteData<T>(IEnumerable<IPostMasterData> indatas) Parameters indatas IEnumerable<IPostMasterData> Returns IList<T> Type Parameters T InsertRow(IList<TPostMasterData>, int) 新しい行を挿入 IList<TPostMasterData> InsertRow(IList<TPostMasterData> PostMasterDatas, int index) Parameters PostMasterDatas IList<TPostMasterData> 現在の投稿データリスト index int 挿入位置のインデックス Returns IList<TPostMasterData> 更新後のデータリスト MakeViewModel() ビューモデルを作成 Task<TMasterRegistrationViewModel> MakeViewModel() Returns Task<TMasterRegistrationViewModel> 生成されたビューモデル MapFromKeepMasterDataToPostData(IList<TKeepMasterData>) 更新用データモデルからPostデータへの変換（実装強制用） IList<TPostMasterData> MapFromKeepMasterDataToPostData(IList<TKeepMasterData> argDatas) Parameters argDatas IList<TKeepMasterData> Returns IList<TPostMasterData> MapFromPostDataToKeepMasterData(IList<TPostMasterData>) Postデータから更新用データモデルへの変換（実装強制用） IList<TKeepMasterData> MapFromPostDataToKeepMasterData(IList<TPostMasterData> argDatas) Parameters argDatas IList<TPostMasterData> Returns IList<TKeepMasterData> QueryMasterData() データベースからマスタデータを問い合わせる抽象メソッド Task<IList<TKeepMasterData>> QueryMasterData() Returns Task<IList<TKeepMasterData>> 取得されたマスタデータ UpdateMasterData(TMasterRegistrationViewModel) ビューモデルを基にマスタデータを更新 Task<TMasterRegistrationViewModel> UpdateMasterData(TMasterRegistrationViewModel arg3) Parameters arg3 TMasterRegistrationViewModel 更新対象のビューモデル Returns Task<TMasterRegistrationViewModel> 更新されたビューモデル"
  },
  "api/Convenience.Models.Interfaces.IMasterRegistrationViewModel-1.html": {
    "href": "api/Convenience.Models.Interfaces.IMasterRegistrationViewModel-1.html",
    "title": "Interface IMasterRegistrationViewModel<T> | Convenience",
    "keywords": "Interface IMasterRegistrationViewModel<T> Namespace Convenience.Models.Interfaces Assembly Convenience.dll マスター登録用ビューモデルのインターフェース public interface IMasterRegistrationViewModel<T> Type Parameters T Properties IsNormal bool? IsNormal { get; set; } Property Value bool? PostMasterDatas IList<T> PostMasterDatas { get; set; } Property Value IList<T> Remark string? Remark { get; set; } Property Value string"
  },
  "api/Convenience.Models.Interfaces.INaigaiClassMasterService.html": {
    "href": "api/Convenience.Models.Interfaces.INaigaiClassMasterService.html",
    "title": "Interface INaigaiClassMasterService | Convenience",
    "keywords": "Interface INaigaiClassMasterService Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface INaigaiClassMasterService : IMasterRegistrationService<NaigaiClassMaster, NaigaiClassMasterService.PostMasterData, NaigaiClassMasterViewModel>, ISharedTools Inherited Members IMasterRegistrationService<NaigaiClassMaster, NaigaiClassMasterService.PostMasterData, NaigaiClassMasterViewModel>._context IMasterRegistrationService<NaigaiClassMaster, NaigaiClassMasterService.PostMasterData, NaigaiClassMasterViewModel>.KeepMasterDatas IMasterRegistrationService<NaigaiClassMaster, NaigaiClassMasterService.PostMasterData, NaigaiClassMasterViewModel>.PostedMasterDatas IMasterRegistrationService<NaigaiClassMaster, NaigaiClassMasterService.PostMasterData, NaigaiClassMasterViewModel>.MasterRegisiationViewModel IMasterRegistrationService<NaigaiClassMaster, NaigaiClassMasterService.PostMasterData, NaigaiClassMasterViewModel>.QueryMasterData() IMasterRegistrationService<NaigaiClassMaster, NaigaiClassMasterService.PostMasterData, NaigaiClassMasterViewModel>.MakeViewModel() IMasterRegistrationService<NaigaiClassMaster, NaigaiClassMasterService.PostMasterData, NaigaiClassMasterViewModel>.UpdateMasterData(NaigaiClassMasterViewModel) IMasterRegistrationService<NaigaiClassMaster, NaigaiClassMasterService.PostMasterData, NaigaiClassMasterViewModel>.InsertRow(IList<NaigaiClassMasterService.PostMasterData>, int) IMasterRegistrationService<NaigaiClassMaster, NaigaiClassMasterService.PostMasterData, NaigaiClassMasterViewModel>.DefaultMakeViewModel() IMasterRegistrationService<NaigaiClassMaster, NaigaiClassMasterService.PostMasterData, NaigaiClassMasterViewModel>.DefaultUpdateMasterData(IMasterRegistrationViewModel<NaigaiClassMasterService.PostMasterData>) IMasterRegistrationService<NaigaiClassMaster, NaigaiClassMasterService.PostMasterData, NaigaiClassMasterViewModel>.DeleteData<T>(IEnumerable<IPostMasterData>) IMasterRegistrationService<NaigaiClassMaster, NaigaiClassMasterService.PostMasterData, NaigaiClassMasterViewModel>.DefaultInsertRow(IList<NaigaiClassMasterService.PostMasterData>, int) IMasterRegistrationService<NaigaiClassMaster, NaigaiClassMasterService.PostMasterData, NaigaiClassMasterViewModel>.MapFromPostDataToKeepMasterData(IList<NaigaiClassMasterService.PostMasterData>) IMasterRegistrationService<NaigaiClassMaster, NaigaiClassMasterService.PostMasterData, NaigaiClassMasterViewModel>.MapFromKeepMasterDataToPostData(IList<NaigaiClassMaster>) ISharedTools.ConvertToSerial<T>(T) ISharedTools.ConvertFromSerial<T>(string) ISharedTools.IsExistCheck<T>(T) ISharedTools.IsNotExistCheck<T>(T) ISharedTools.GetDisplayName(Type, string)"
  },
  "api/Convenience.Models.Interfaces.IPostMasterData.html": {
    "href": "api/Convenience.Models.Interfaces.IPostMasterData.html",
    "title": "Interface IPostMasterData | Convenience",
    "keywords": "Interface IPostMasterData Namespace Convenience.Models.Interfaces Assembly Convenience.dll Postデータのインターフェース public interface IPostMasterData : IDeleteFlag Inherited Members IDeleteFlag.DeleteFlag"
  },
  "api/Convenience.Models.Interfaces.IRetrivalService.html": {
    "href": "api/Convenience.Models.Interfaces.IRetrivalService.html",
    "title": "Interface IRetrivalService | Convenience",
    "keywords": "Interface IRetrivalService Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface IRetrivalService : ISharedTools Inherited Members ISharedTools.ConvertToSerial<T>(T) ISharedTools.ConvertFromSerial<T>(string) ISharedTools.IsExistCheck<T>(T) ISharedTools.IsNotExistCheck<T>(T) ISharedTools.GetDisplayName(Type, string) Methods BuildComparison<T>(string, string, object) Where系ラムダ式を作る Expression<Func<T, bool>> BuildComparison<T>(string propertyName, string strComparisonType, object value) Parameters propertyName string 左辺 strComparisonType string 比較演算子に対する指示 value object 右辺 Returns Expression<Func<T, bool>> Where系ラムダ式 Type Parameters T Exceptions NotSupportedException CombineExpressions<T>(Expression<Func<T, bool>>, Expression<Func<T, bool>>) 複数のWhere系ラムダ式をAndで結ぶ Expression<Func<T, bool>> CombineExpressions<T>(Expression<Func<T, bool>> expr1, Expression<Func<T, bool>> expr2) Parameters expr1 Expression<Func<T, bool>> 式に追加される先 expr2 Expression<Func<T, bool>> 式に追加する元 Returns Expression<Func<T, bool>> Andで式に追加された先 Type Parameters T lambaの対象タイプ SearchItemRecognizer<T1, T2>(SelecteWhereItem[], IEnumerable<T1>) 検索指示項目を認識しラムダ式を作る IEnumerable<T1> SearchItemRecognizer<T1, T2>(IRetrivalViewModel<T2>.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem[] argSelecteWhereItemArray, IEnumerable<T1> Meisais) Parameters argSelecteWhereItemArray SelecteWhereItem[] 検索指示項目 Meisais IEnumerable<T1> 注文実績クエリ Returns IEnumerable<T1> ラムダ式で処理された検索結果（注文実績明細が渡されたら遅延実行） Type Parameters T1 T2 SetSortKey<T1, T2>(SortEventRec[], IEnumerable<T1>) 画面で指示されたソート指示を元に表情報に対しソートする IEnumerable<T1> SetSortKey<T1, T2>(IRetrivalViewModel<T2>.IKeywordAreaClass.ISortAreaClass.SortEventRec[] argSortEventRec, IEnumerable<T1> argChumonJissekis) Parameters argSortEventRec SortEventRec[] ソート指示部 argChumonJissekis IEnumerable<T1> ソート対象となる表示用注文実績データ Returns IEnumerable<T1> Type Parameters T1 T2 WhereLambda1<T>(string, string, string) ラムダ式を作る Expression<Func<T, bool>>? WhereLambda1<T>(string leftSide, string comparison, string rightSide) Parameters leftSide string 左辺 comparison string rightSide string 右辺 Returns Expression<Func<T, bool>> Type Parameters T WhereLambda2<T>(string, string, string) Expression<Func<T, bool>>? WhereLambda2<T>(string leftSide, string comparison, string rightSide) Parameters leftSide string comparison string rightSide string Returns Expression<Func<T, bool>> Type Parameters T"
  },
  "api/Convenience.Models.Interfaces.IRetrivalViewModel-1.IDataAreaClass.html": {
    "href": "api/Convenience.Models.Interfaces.IRetrivalViewModel-1.IDataAreaClass.html",
    "title": "Interface IRetrivalViewModel<T>.IDataAreaClass | Convenience",
    "keywords": "Interface IRetrivalViewModel<T>.IDataAreaClass Namespace Convenience.Models.Interfaces Assembly Convenience.dll データ表示管理用インターふぇおす public interface IRetrivalViewModel<T>.IDataAreaClass Properties Lines データ表示用リスト IEnumerable<T> Lines { get; set; } Property Value IEnumerable<T> SummaryLine T SummaryLine { get; set; } Property Value T"
  },
  "api/Convenience.Models.Interfaces.IRetrivalViewModel-1.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem.html": {
    "href": "api/Convenience.Models.Interfaces.IRetrivalViewModel-1.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem.html",
    "title": "Class IRetrivalViewModel<T>.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem | Convenience",
    "keywords": "Class IRetrivalViewModel<T>.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem Namespace Convenience.Models.Interfaces Assembly Convenience.dll Where入力リスト1レコード定義用クラス public class IRetrivalViewModel<T>.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem Inheritance object IRetrivalViewModel<T>.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SelecteWhereItem() public SelecteWhereItem() SelecteWhereItem(string, string, string) public SelecteWhereItem(string leftSide, string comparisonOperator, string rightSide) Parameters leftSide string comparisonOperator string rightSide string Properties ComparisonOperator [MaxLength(2)] public string? ComparisonOperator { get; set; } Property Value string LeftSide public string? LeftSide { get; set; } Property Value string RightSide public string? RightSide { get; set; } Property Value string"
  },
  "api/Convenience.Models.Interfaces.IRetrivalViewModel-1.IKeywordAreaClass.IKeyAreaClass.html": {
    "href": "api/Convenience.Models.Interfaces.IRetrivalViewModel-1.IKeywordAreaClass.IKeyAreaClass.html",
    "title": "Interface IRetrivalViewModel<T>.IKeywordAreaClass.IKeyAreaClass | Convenience",
    "keywords": "Interface IRetrivalViewModel<T>.IKeywordAreaClass.IKeyAreaClass Namespace Convenience.Models.Interfaces Assembly Convenience.dll 検索キー管理用クラス public interface IRetrivalViewModel<T>.IKeywordAreaClass.IKeyAreaClass Properties ComparisonOperatorList 比較演算子選択用 [JsonIgnore] SelectList ComparisonOperatorList { get; set; } Property Value SelectList LineCountForSelectorOfWhere Where入力行数 [JsonIgnore] int LineCountForSelectorOfWhere { get; set; } Property Value int SelectWhereLeftSideList Where左辺用カラムセット用 [JsonIgnore] SelectList SelectWhereLeftSideList { get; set; } Property Value SelectList SelecteWhereItemArray Where入力リスト初期化 IRetrivalViewModel<T>.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem[] SelecteWhereItemArray { get; set; } Property Value SelecteWhereItem[] Methods GetDefaltSortForWhere(int) 検索キー指示データ初期データセット IRetrivalViewModel<T>.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem GetDefaltSortForWhere(int index) Parameters index int Returns IRetrivalViewModel<T>.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem InitKeyArea() 比較演算子一覧のセット 検索キーキー指示データセット void InitKeyArea()"
  },
  "api/Convenience.Models.Interfaces.IRetrivalViewModel-1.IKeywordAreaClass.ISortAreaClass.SortEventRec.html": {
    "href": "api/Convenience.Models.Interfaces.IRetrivalViewModel-1.IKeywordAreaClass.ISortAreaClass.SortEventRec.html",
    "title": "Class IRetrivalViewModel<T>.IKeywordAreaClass.ISortAreaClass.SortEventRec | Convenience",
    "keywords": "Class IRetrivalViewModel<T>.IKeywordAreaClass.ISortAreaClass.SortEventRec Namespace Convenience.Models.Interfaces Assembly Convenience.dll ソートキー指示データクラス public class IRetrivalViewModel<T>.IKeywordAreaClass.ISortAreaClass.SortEventRec Inheritance object IRetrivalViewModel<T>.IKeywordAreaClass.ISortAreaClass.SortEventRec Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SortEventRec() public SortEventRec() SortEventRec(string?, bool) public SortEventRec(string? KeyEventData, bool Descending) Parameters KeyEventData string Descending bool Properties Descending public bool Descending { get; set; } Property Value bool KeyEventData public string? KeyEventData { get; set; } Property Value string"
  },
  "api/Convenience.Models.Interfaces.IRetrivalViewModel-1.IKeywordAreaClass.ISortAreaClass.html": {
    "href": "api/Convenience.Models.Interfaces.IRetrivalViewModel-1.IKeywordAreaClass.ISortAreaClass.html",
    "title": "Interface IRetrivalViewModel<T>.IKeywordAreaClass.ISortAreaClass | Convenience",
    "keywords": "Interface IRetrivalViewModel<T>.IKeywordAreaClass.ISortAreaClass Namespace Convenience.Models.Interfaces Assembly Convenience.dll ソートエリア管理用インターフェース public interface IRetrivalViewModel<T>.IKeywordAreaClass.ISortAreaClass Properties KeyEventList ソートキー指示データ管理用 IRetrivalViewModel<T>.IKeywordAreaClass.ISortAreaClass.SortEventRec[] KeyEventList { get; set; } Property Value SortEventRec[] KeyList ソートキー一覧表示用 [JsonIgnore] SelectList KeyList { get; set; } Property Value SelectList LineCountForSelectorOfOrder ソートキーエリア管理用クラス int LineCountForSelectorOfOrder { get; set; } Property Value int Methods GetDefaltSortForSort(int) ソートキー指示データ初期データセット IRetrivalViewModel<T>.IKeywordAreaClass.ISortAreaClass.SortEventRec GetDefaltSortForSort(int index) Parameters index int Returns IRetrivalViewModel<T>.IKeywordAreaClass.ISortAreaClass.SortEventRec InitSortArea() ソートキー指示データセット void InitSortArea()"
  },
  "api/Convenience.Models.Interfaces.IRetrivalViewModel-1.IKeywordAreaClass.html": {
    "href": "api/Convenience.Models.Interfaces.IRetrivalViewModel-1.IKeywordAreaClass.html",
    "title": "Interface IRetrivalViewModel<T>.IKeywordAreaClass | Convenience",
    "keywords": "Interface IRetrivalViewModel<T>.IKeywordAreaClass Namespace Convenience.Models.Interfaces Assembly Convenience.dll ソートキー・検索キーエリア管理用インターフェース public interface IRetrivalViewModel<T>.IKeywordAreaClass Properties KeyArea 検索キーエリア管理用 IRetrivalViewModel<T>.IKeywordAreaClass.IKeyAreaClass KeyArea { get; set; } Property Value IRetrivalViewModel<T>.IKeywordAreaClass.IKeyAreaClass SortArea ソートキーエリア管理用 IRetrivalViewModel<T>.IKeywordAreaClass.ISortAreaClass SortArea { get; set; } Property Value IRetrivalViewModel<T>.IKeywordAreaClass.ISortAreaClass"
  },
  "api/Convenience.Models.Interfaces.IRetrivalViewModel-1.html": {
    "href": "api/Convenience.Models.Interfaces.IRetrivalViewModel-1.html",
    "title": "Interface IRetrivalViewModel<T> | Convenience",
    "keywords": "Interface IRetrivalViewModel<T> Namespace Convenience.Models.Interfaces Assembly Convenience.dll 注文実績検索ビューモデル用インターフェース public interface IRetrivalViewModel<T> : ISharedTools Type Parameters T Inherited Members ISharedTools.ConvertToSerial<T>(T) ISharedTools.ConvertFromSerial<T>(string) ISharedTools.IsExistCheck<T>(T) ISharedTools.IsNotExistCheck<T>(T) ISharedTools.GetDisplayName(Type, string) Properties DataArea データ表示管理用 IRetrivalViewModel<T>.IDataAreaClass DataArea { get; set; } Property Value IRetrivalViewModel<T>.IDataAreaClass KeywordArea ソートキー・検索キーエリア管理用 IRetrivalViewModel<T>.IKeywordAreaClass KeywordArea { get; set; } Property Value IRetrivalViewModel<T>.IKeywordAreaClass"
  },
  "api/Convenience.Models.Interfaces.ISelectList.html": {
    "href": "api/Convenience.Models.Interfaces.ISelectList.html",
    "title": "Interface ISelectList | Convenience",
    "keywords": "Interface ISelectList Namespace Convenience.Models.Interfaces Assembly Convenience.dll 選択リストアイテムのインターフェース public interface ISelectList Properties OrderKey string[] OrderKey { get; } Property Value string[] Text string Text { get; } Property Value string Value string Value { get; } Property Value string"
  },
  "api/Convenience.Models.Interfaces.ISharedTools.html": {
    "href": "api/Convenience.Models.Interfaces.ISharedTools.html",
    "title": "Interface ISharedTools | Convenience",
    "keywords": "Interface ISharedTools Namespace Convenience.Models.Interfaces Assembly Convenience.dll シリアライズ・デシリアライズ化 public interface ISharedTools Methods ConvertFromSerial<T>(string) デシリアライズ化 protected static T ConvertFromSerial<T>(string serial) Parameters serial string シリアルデータ Returns T Type Parameters T デシリアライズ化対象オブジェクトのタイプ設定 ConvertToSerial<T>(T) シリアライズ化 protected static string ConvertToSerial<T>(T obj) Parameters obj T シリアル化する対象オブジェクト Returns string Type Parameters T シリアル対象オブジェクトのタイプ設定 GetDisplayName(Type, string) public static string? GetDisplayName(Type type, string propertyName) Parameters type Type propertyName string Returns string IsExistCheck<T>(T?) データがnullではないか、リスト形式ならば0件ではないか protected static bool IsExistCheck<T>(T? checkdata) Parameters checkdata T チェックするデータ Returns bool Type Parameters T チェックする型 IsNotExistCheck<T>(T?) データがnullか、リスト形式ならば0件か protected static bool IsNotExistCheck<T>(T? checkdata) Parameters checkdata T Returns bool Type Parameters T"
  },
  "api/Convenience.Models.Interfaces.IShiire.html": {
    "href": "api/Convenience.Models.Interfaces.IShiire.html",
    "title": "Interface IShiire | Convenience",
    "keywords": "Interface IShiire Namespace Convenience.Models.Interfaces Assembly Convenience.dll 仕入クラスインターフェース public interface IShiire Properties Shiirejissekis 仕入実績プロパティ Include ChuumonJissekiMeisai IList<ShiireJisseki> Shiirejissekis { get; set; } Property Value IList<ShiireJisseki> SokoZaikos 倉庫在庫プロパティ IList<SokoZaiko> SokoZaikos { get; set; } Property Value IList<SokoZaiko> Methods ChumonToShiireJisseki(string, DateOnly, uint) 仕入実績作成 Task<IList<ShiireJisseki>> ChumonToShiireJisseki(string inChumonId, DateOnly inShiireDate, uint inSeqByShiireDate) Parameters inChumonId string 注文コード（注文実績問い合わせキー） inShiireDate DateOnly 仕入日付（仕入実績にセットされる） inSeqByShiireDate uint 仕入日付内のシーケンス（仕入実績にセットされる） Returns Task<IList<ShiireJisseki>> 注文実績から新規作成された仕入実績 ChuumonIdOnShiireJissekiExistingCheck(string, DateOnly, uint) Task<bool> ChuumonIdOnShiireJissekiExistingCheck(string inChumonId, DateOnly inShiireDate, uint inSeqByShiireDate) Parameters inChumonId string inShiireDate DateOnly inSeqByShiireDate uint Returns Task<bool> ChuumonZanZaikoSuChousei(string, IList<ShiireJisseki>) 注文残・在庫数量調整 Task<Shiire.ShiireUkeireReturnSet> ChuumonZanZaikoSuChousei(string inChumonId, IList<ShiireJisseki> inShiireJissekis) Parameters inChumonId string 注文コード inShiireJissekis IList<ShiireJisseki> 仕入実績（注文実績がインクルードされていること） Returns Task<Shiire.ShiireUkeireReturnSet> 注文残・倉庫在庫が調整された注文残・倉庫在庫調整用モデル NextSeq(string, DateOnly) 注文コード、仕入日を元に、次の仕入SEQを求める 仕入実績の主キーは注文コード、仕入日、仕入SEQなので、仕入日に数回仕入れる場合は、 仕入SEQをインクリメントして利用する Task<uint> NextSeq(string inChumonId, DateOnly inShiireDate) Parameters inChumonId string 仕入実績検索キー：注文コード inShiireDate DateOnly 仕入実績検索キー：仕入日 Returns Task<uint> 次の仕入SEQ（次に仕入実績を登録する仕入SEQ） ShiireSokoConnection(IList<ShiireJisseki>, IEnumerable<SokoZaiko>) 倉庫在庫を仕入データに接続する（表示前に利用する） NotMappedは外部キーが使えないから、includeできないため IList<ShiireJisseki> ShiireSokoConnection(IList<ShiireJisseki> inShiireJissekis, IEnumerable<SokoZaiko> indata) Parameters inShiireJissekis IList<ShiireJisseki> 仕入実績 indata IEnumerable<SokoZaiko> 仕入実績に結合する倉庫在庫 Returns IList<ShiireJisseki> ShiireToShiireJisseki(string, DateOnly, uint) 注文実績から仕入実績プロパティに反映 Task<IList<ShiireJisseki>> ShiireToShiireJisseki(string inChumonId, DateOnly inShiireDate, uint inSeqByShiireDate) Parameters inChumonId string 注文コード inShiireDate DateOnly 仕入日付 inSeqByShiireDate uint 仕入SEQ Returns Task<IList<ShiireJisseki>> ShiireUpdate(IList<ShiireJisseki>) 仕入データPost内容の反映 IList<ShiireJisseki> ShiireUpdate(IList<ShiireJisseki> inShiireJissekis) Parameters inShiireJissekis IList<ShiireJisseki> Postされた仕入実績 Returns IList<ShiireJisseki> Postされた注仕入実績がオーバライドされた仕入実績プロパティ ZanAriChumonList() 注文残がある注文のリスト化 Task<IList<Shiire.ChumonList>> ZanAriChumonList() Returns Task<IList<Shiire.ChumonList>> 注文残のある注文コード一覧"
  },
  "api/Convenience.Models.Interfaces.IShiireJissekiService.html": {
    "href": "api/Convenience.Models.Interfaces.IShiireJissekiService.html",
    "title": "Interface IShiireJissekiService | Convenience",
    "keywords": "Interface IShiireJissekiService Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface IShiireJissekiService Methods ShiireJissekiRetrival(ShiireJissekiViewModel) Task<ShiireJissekiViewModel> ShiireJissekiRetrival(ShiireJissekiViewModel argShiireJissekiViewModel) Parameters argShiireJissekiViewModel ShiireJissekiViewModel Returns Task<ShiireJissekiViewModel>"
  },
  "api/Convenience.Models.Interfaces.IShiireMasterService.html": {
    "href": "api/Convenience.Models.Interfaces.IShiireMasterService.html",
    "title": "Interface IShiireMasterService | Convenience",
    "keywords": "Interface IShiireMasterService Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface IShiireMasterService : IMasterRegistrationService<ShiireMaster, ShiireMasterService.PostMasterData, ShiireMasterViewModel>, ISharedTools Inherited Members IMasterRegistrationService<ShiireMaster, ShiireMasterService.PostMasterData, ShiireMasterViewModel>._context IMasterRegistrationService<ShiireMaster, ShiireMasterService.PostMasterData, ShiireMasterViewModel>.KeepMasterDatas IMasterRegistrationService<ShiireMaster, ShiireMasterService.PostMasterData, ShiireMasterViewModel>.PostedMasterDatas IMasterRegistrationService<ShiireMaster, ShiireMasterService.PostMasterData, ShiireMasterViewModel>.MasterRegisiationViewModel IMasterRegistrationService<ShiireMaster, ShiireMasterService.PostMasterData, ShiireMasterViewModel>.QueryMasterData() IMasterRegistrationService<ShiireMaster, ShiireMasterService.PostMasterData, ShiireMasterViewModel>.MakeViewModel() IMasterRegistrationService<ShiireMaster, ShiireMasterService.PostMasterData, ShiireMasterViewModel>.UpdateMasterData(ShiireMasterViewModel) IMasterRegistrationService<ShiireMaster, ShiireMasterService.PostMasterData, ShiireMasterViewModel>.InsertRow(IList<ShiireMasterService.PostMasterData>, int) IMasterRegistrationService<ShiireMaster, ShiireMasterService.PostMasterData, ShiireMasterViewModel>.DefaultMakeViewModel() IMasterRegistrationService<ShiireMaster, ShiireMasterService.PostMasterData, ShiireMasterViewModel>.DefaultUpdateMasterData(IMasterRegistrationViewModel<ShiireMasterService.PostMasterData>) IMasterRegistrationService<ShiireMaster, ShiireMasterService.PostMasterData, ShiireMasterViewModel>.DeleteData<T>(IEnumerable<IPostMasterData>) IMasterRegistrationService<ShiireMaster, ShiireMasterService.PostMasterData, ShiireMasterViewModel>.DefaultInsertRow(IList<ShiireMasterService.PostMasterData>, int) IMasterRegistrationService<ShiireMaster, ShiireMasterService.PostMasterData, ShiireMasterViewModel>.MapFromPostDataToKeepMasterData(IList<ShiireMasterService.PostMasterData>) IMasterRegistrationService<ShiireMaster, ShiireMasterService.PostMasterData, ShiireMasterViewModel>.MapFromKeepMasterDataToPostData(IList<ShiireMaster>) ISharedTools.ConvertToSerial<T>(T) ISharedTools.ConvertFromSerial<T>(string) ISharedTools.IsExistCheck<T>(T) ISharedTools.IsNotExistCheck<T>(T) ISharedTools.GetDisplayName(Type, string)"
  },
  "api/Convenience.Models.Interfaces.IShiireSakiMasterService.html": {
    "href": "api/Convenience.Models.Interfaces.IShiireSakiMasterService.html",
    "title": "Interface IShiireSakiMasterService | Convenience",
    "keywords": "Interface IShiireSakiMasterService Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface IShiireSakiMasterService : IMasterRegistrationService<ShiireSakiMaster, ShiireSakiMasterService.PostMasterData, ShiireSakiMasterViewModel>, ISharedTools Inherited Members IMasterRegistrationService<ShiireSakiMaster, ShiireSakiMasterService.PostMasterData, ShiireSakiMasterViewModel>._context IMasterRegistrationService<ShiireSakiMaster, ShiireSakiMasterService.PostMasterData, ShiireSakiMasterViewModel>.KeepMasterDatas IMasterRegistrationService<ShiireSakiMaster, ShiireSakiMasterService.PostMasterData, ShiireSakiMasterViewModel>.PostedMasterDatas IMasterRegistrationService<ShiireSakiMaster, ShiireSakiMasterService.PostMasterData, ShiireSakiMasterViewModel>.MasterRegisiationViewModel IMasterRegistrationService<ShiireSakiMaster, ShiireSakiMasterService.PostMasterData, ShiireSakiMasterViewModel>.QueryMasterData() IMasterRegistrationService<ShiireSakiMaster, ShiireSakiMasterService.PostMasterData, ShiireSakiMasterViewModel>.MakeViewModel() IMasterRegistrationService<ShiireSakiMaster, ShiireSakiMasterService.PostMasterData, ShiireSakiMasterViewModel>.UpdateMasterData(ShiireSakiMasterViewModel) IMasterRegistrationService<ShiireSakiMaster, ShiireSakiMasterService.PostMasterData, ShiireSakiMasterViewModel>.InsertRow(IList<ShiireSakiMasterService.PostMasterData>, int) IMasterRegistrationService<ShiireSakiMaster, ShiireSakiMasterService.PostMasterData, ShiireSakiMasterViewModel>.DefaultMakeViewModel() IMasterRegistrationService<ShiireSakiMaster, ShiireSakiMasterService.PostMasterData, ShiireSakiMasterViewModel>.DefaultUpdateMasterData(IMasterRegistrationViewModel<ShiireSakiMasterService.PostMasterData>) IMasterRegistrationService<ShiireSakiMaster, ShiireSakiMasterService.PostMasterData, ShiireSakiMasterViewModel>.DeleteData<T>(IEnumerable<IPostMasterData>) IMasterRegistrationService<ShiireSakiMaster, ShiireSakiMasterService.PostMasterData, ShiireSakiMasterViewModel>.DefaultInsertRow(IList<ShiireSakiMasterService.PostMasterData>, int) IMasterRegistrationService<ShiireSakiMaster, ShiireSakiMasterService.PostMasterData, ShiireSakiMasterViewModel>.MapFromPostDataToKeepMasterData(IList<ShiireSakiMasterService.PostMasterData>) IMasterRegistrationService<ShiireSakiMaster, ShiireSakiMasterService.PostMasterData, ShiireSakiMasterViewModel>.MapFromKeepMasterDataToPostData(IList<ShiireSakiMaster>) ISharedTools.ConvertToSerial<T>(T) ISharedTools.ConvertFromSerial<T>(string) ISharedTools.IsExistCheck<T>(T) ISharedTools.IsNotExistCheck<T>(T) ISharedTools.GetDisplayName(Type, string)"
  },
  "api/Convenience.Models.Interfaces.IShiireService.html": {
    "href": "api/Convenience.Models.Interfaces.IShiireService.html",
    "title": "Interface IShiireService | Convenience",
    "keywords": "Interface IShiireService Namespace Convenience.Models.Interfaces Assembly Convenience.dll 仕入サービス用インターフェース public interface IShiireService Properties shiire 仕入クラス用オブジェクト変数 IShiire shiire { get; } Property Value IShiire Methods SetShiireKeysModel() 仕入キーモデル設定（仕入画面１枚目用） Task<ShiireKeysViewModel> SetShiireKeysModel() Returns Task<ShiireKeysViewModel> ShiireKeysViewModel 仕入キービューモデル ShiireCommit(ShiireViewModel) 仕入データをDBに書き込む・注文残の調整・倉庫在庫への反映（Post後処理・再表示用） 仕入実績データPost後の後の再表示用 Task<ShiireViewModel> ShiireCommit(ShiireViewModel inShiireViewModel) Parameters inShiireViewModel ShiireViewModel 仕入ビューモデル（注文コード・仕入日・仕入SEQ、Postされた仕入実績データ） Returns Task<ShiireViewModel> 仕入ビューモデル（更新エンティティ数・DB更新された仕入実績） Remarks ①仕入実績がある場合は、仕入実績取り込み、ない場合は注文実績から作成 ② ①の内容に対し、ポストデータを反映 ③注文実績の注文残と倉庫在庫の在庫数を仕入数にあわせ過不足する ④仕入実績DB更新 ⑤仕入実績に倉庫在庫を接続しインクルードできるようにする（表示用） ShiireSetting(ShiireKeysViewModel) 仕入セッティング 仕入実績データの画面初期表示用（DB更新後の再表示も含む） Task<ShiireViewModel> ShiireSetting(ShiireKeysViewModel inShiireKeysViewModel) Parameters inShiireKeysViewModel ShiireKeysViewModel 注文キービューモデル Returns Task<ShiireViewModel> ShiireViewModel 仕入ビューモデル（仕入実績・インクルードされた注文実績・インクルードされた倉庫在庫） Remarks ①現在時間により仕入日セット ②仕入は毎回新規なので、仕入SEQを発番・注文実績から仕入実績を作る ③関係する倉庫在庫を接続（表示用）"
  },
  "api/Convenience.Models.Interfaces.IShohinMasterService.html": {
    "href": "api/Convenience.Models.Interfaces.IShohinMasterService.html",
    "title": "Interface IShohinMasterService | Convenience",
    "keywords": "Interface IShohinMasterService Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface IShohinMasterService : IMasterRegistrationService<ShohinMaster, ShohinMasterService.PostMasterData, ShohinMasterViewModel>, ISharedTools Inherited Members IMasterRegistrationService<ShohinMaster, ShohinMasterService.PostMasterData, ShohinMasterViewModel>._context IMasterRegistrationService<ShohinMaster, ShohinMasterService.PostMasterData, ShohinMasterViewModel>.KeepMasterDatas IMasterRegistrationService<ShohinMaster, ShohinMasterService.PostMasterData, ShohinMasterViewModel>.PostedMasterDatas IMasterRegistrationService<ShohinMaster, ShohinMasterService.PostMasterData, ShohinMasterViewModel>.MasterRegisiationViewModel IMasterRegistrationService<ShohinMaster, ShohinMasterService.PostMasterData, ShohinMasterViewModel>.QueryMasterData() IMasterRegistrationService<ShohinMaster, ShohinMasterService.PostMasterData, ShohinMasterViewModel>.MakeViewModel() IMasterRegistrationService<ShohinMaster, ShohinMasterService.PostMasterData, ShohinMasterViewModel>.UpdateMasterData(ShohinMasterViewModel) IMasterRegistrationService<ShohinMaster, ShohinMasterService.PostMasterData, ShohinMasterViewModel>.InsertRow(IList<ShohinMasterService.PostMasterData>, int) IMasterRegistrationService<ShohinMaster, ShohinMasterService.PostMasterData, ShohinMasterViewModel>.DefaultMakeViewModel() IMasterRegistrationService<ShohinMaster, ShohinMasterService.PostMasterData, ShohinMasterViewModel>.DefaultUpdateMasterData(IMasterRegistrationViewModel<ShohinMasterService.PostMasterData>) IMasterRegistrationService<ShohinMaster, ShohinMasterService.PostMasterData, ShohinMasterViewModel>.DeleteData<T>(IEnumerable<IPostMasterData>) IMasterRegistrationService<ShohinMaster, ShohinMasterService.PostMasterData, ShohinMasterViewModel>.DefaultInsertRow(IList<ShohinMasterService.PostMasterData>, int) IMasterRegistrationService<ShohinMaster, ShohinMasterService.PostMasterData, ShohinMasterViewModel>.MapFromPostDataToKeepMasterData(IList<ShohinMasterService.PostMasterData>) IMasterRegistrationService<ShohinMaster, ShohinMasterService.PostMasterData, ShohinMasterViewModel>.MapFromKeepMasterDataToPostData(IList<ShohinMaster>) ISharedTools.ConvertToSerial<T>(T) ISharedTools.ConvertFromSerial<T>(string) ISharedTools.IsExistCheck<T>(T) ISharedTools.IsNotExistCheck<T>(T) ISharedTools.GetDisplayName(Type, string)"
  },
  "api/Convenience.Models.Interfaces.ITentoHaraidashi.html": {
    "href": "api/Convenience.Models.Interfaces.ITentoHaraidashi.html",
    "title": "Interface ITentoHaraidashi | Convenience",
    "keywords": "Interface ITentoHaraidashi Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface ITentoHaraidashi Properties TentoHaraidashiHeader プロパティ 店頭払出ヘッダー TentoHaraidashiHeader? TentoHaraidashiHeader { get; set; } Property Value TentoHaraidashiHeader Methods TentoHaraidashiHeaderList(Expression<Func<TentoHaraidashiHeader, bool>>) IQueryable<TentoHaraidashiHeader> TentoHaraidashiHeaderList(Expression<Func<TentoHaraidashiHeader, bool>> whereExpression) Parameters whereExpression Expression<Func<TentoHaraidashiHeader, bool>> Returns IQueryable<TentoHaraidashiHeader> TentoHaraidashiSakusei(DateTime) 倉庫在庫から店頭払出実績（ヘッダー＋実績）を作成する ①店頭払出ヘッダーを作成する ②倉庫在庫より、店頭払出実績（ヘッダー＋実績）を作成する ③データ表示用に＋倉庫在庫＋仕入マスタもリンク接続する 4️⃣店頭在庫をリンク接続する Task<TentoHaraidashiHeader> TentoHaraidashiSakusei(DateTime argCurrentDateTime) Parameters argCurrentDateTime DateTime Returns Task<TentoHaraidashiHeader> TentoHaraidashiHeader 店頭払出ヘッダー＋店頭払出実績 TentoHaraidashiToiawase(string) 店頭払出問い合わせ ①店頭払出ヘッダー＋実績を問い合わせる ②実績に倉庫在庫をくっつける ②実績に仕入マスタ＋商品マスタをくっつける ③実績に店頭在庫をくっつける Task<TentoHaraidashiHeader?> TentoHaraidashiToiawase(string argTentoHaraidashiId) Parameters argTentoHaraidashiId string 店頭払出コード Returns Task<TentoHaraidashiHeader> TentoHaraidashiHeader 店頭払出ヘッダ TentoHaraidashiUpdate(IEnumerable<TentoHaraidashiJisseki>) IList<TentoHaraidashiJisseki> TentoHaraidashiUpdate(IEnumerable<TentoHaraidashiJisseki> argTentoHaraidashiJissekis) Parameters argTentoHaraidashiJissekis IEnumerable<TentoHaraidashiJisseki> Returns IList<TentoHaraidashiJisseki>"
  },
  "api/Convenience.Models.Interfaces.ITentoHaraidashiService.html": {
    "href": "api/Convenience.Models.Interfaces.ITentoHaraidashiService.html",
    "title": "Interface ITentoHaraidashiService | Convenience",
    "keywords": "Interface ITentoHaraidashiService Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface ITentoHaraidashiService Methods SetTentoHaraidashiViewModel() 店頭払出ビューモデル設定 Task<TentoHaraidashiViewModel> SetTentoHaraidashiViewModel() Returns Task<TentoHaraidashiViewModel> TentoHaraidashiViewModel 店頭払出ビューモデル TentoHaraidashiCommit(TentoHaraidashiViewModel) 店頭払出Commit Task<TentoHaraidashiViewModel> TentoHaraidashiCommit(TentoHaraidashiViewModel argTentoHaraidashiViewModel) Parameters argTentoHaraidashiViewModel TentoHaraidashiViewModel 店頭払出ビューモデル Returns Task<TentoHaraidashiViewModel> TentoHaraidashiViewModel 店頭払出ビューモデル TentoHaraidashiSetting(TentoHaraidashiViewModel) 店頭払出セッティング Task<TentoHaraidashiViewModel> TentoHaraidashiSetting(TentoHaraidashiViewModel argTentoHaraidashiViewModel) Parameters argTentoHaraidashiViewModel TentoHaraidashiViewModel 店頭払出ビューモデル Returns Task<TentoHaraidashiViewModel> TentoHaraidashiViewModel 店頭払出ビューモデル"
  },
  "api/Convenience.Models.Interfaces.ITentoZaikoService.html": {
    "href": "api/Convenience.Models.Interfaces.ITentoZaikoService.html",
    "title": "Interface ITentoZaikoService | Convenience",
    "keywords": "Interface ITentoZaikoService Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface ITentoZaikoService Methods TentoZaikoRetrival(TentoZaikoViewModel) 店頭在庫検索 Task<TentoZaikoViewModel> TentoZaikoRetrival(TentoZaikoViewModel argTentoZaikoViewModel) Parameters argTentoZaikoViewModel TentoZaikoViewModel 店頭在庫検索ビューモデル Returns Task<TentoZaikoViewModel> 店頭在庫ビューモデル（検索内容含む）"
  },
  "api/Convenience.Models.Interfaces.ITotalSummaryRetrival.html": {
    "href": "api/Convenience.Models.Interfaces.ITotalSummaryRetrival.html",
    "title": "Interface ITotalSummaryRetrival | Convenience",
    "keywords": "Interface ITotalSummaryRetrival Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface ITotalSummaryRetrival : ISharedTools Inherited Members ISharedTools.ConvertToSerial<T>(T) ISharedTools.ConvertFromSerial<T>(string) ISharedTools.IsExistCheck<T>(T) ISharedTools.IsNotExistCheck<T>(T) ISharedTools.GetDisplayName(Type, string) Methods IsNumericType(Type) private static bool IsNumericType(Type type) Parameters type Type Returns bool TotalSummary<T>(IEnumerable<T>, T, string?) T TotalSummary<T>(IEnumerable<T> argDatas, T argOutDatas, string? aCountProperty) Parameters argDatas IEnumerable<T> argOutDatas T aCountProperty string Returns T Type Parameters T"
  },
  "api/Convenience.Models.Interfaces.IZaiko.html": {
    "href": "api/Convenience.Models.Interfaces.IZaiko.html",
    "title": "Interface IZaiko | Convenience",
    "keywords": "Interface IZaiko Namespace Convenience.Models.Interfaces Assembly Convenience.dll 在庫クラスインターフェース public interface IZaiko Properties SoKoZaikoQueryable 生成される問い合わせ（遅延実行用） IQueryable<ZaikoViewModel.ZaikoListLine>? SoKoZaikoQueryable { get; set; } Property Value IQueryable<ZaikoViewModel.ZaikoListLine> Methods AddOrderby(string, bool) 機能：注文実績明細検索＆倉庫在庫（遅延実行）＋Where内容の状態から、ソート順の追加セットを行う IQueryable<ZaikoViewModel.ZaikoListLine>? AddOrderby(string sortKey, bool descending) Parameters sortKey string ソートキー descending bool 降順・昇順区分 Returns IQueryable<ZaikoViewModel.ZaikoListLine> 倉庫在庫 ＆ 注文実績明細(変数:SoKoZaikoQueryable) ソート指示付き ISoKoZaikoQueryable型にして遅延実行化 CreateSokoZaikoList(string) 注文実績明細検索＆倉庫在庫（遅延実行） IQueryable<ZaikoViewModel.ZaikoListLine> CreateSokoZaikoList(string searchKey) Parameters searchKey string Returns IQueryable<ZaikoViewModel.ZaikoListLine> 倉庫在庫 ＆ 注文実績明細(変数:SoKoZaikoQueryable) Where指示付き ISoKoZaikoQueryable型にして遅延実行化"
  },
  "api/Convenience.Models.Interfaces.IZaikoService.html": {
    "href": "api/Convenience.Models.Interfaces.IZaikoService.html",
    "title": "Interface IZaikoService | Convenience",
    "keywords": "Interface IZaikoService Namespace Convenience.Models.Interfaces Assembly Convenience.dll 倉庫在庫検索（サービス）インターフェース public interface IZaikoService Methods KeyInput(KeyEventRec[], SelecteWhereItem[]) 検索キー画面の情報取得 Task<ZaikoViewModel> KeyInput(ZaikoViewModel.KeyEventRec[] keydata, ZaikoViewModel.SelecteWhereItem[] selecteWhereItemArray) Parameters keydata KeyEventRec[] selecteWhereItemArray SelecteWhereItem[] Returns Task<ZaikoViewModel>"
  },
  "api/Convenience.Models.Interfaces.html": {
    "href": "api/Convenience.Models.Interfaces.html",
    "title": "Namespace Convenience.Models.Interfaces | Convenience",
    "keywords": "Namespace Convenience.Models.Interfaces Classes IRetrivalViewModel<T>.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem Where入力リスト1レコード定義用クラス IRetrivalViewModel<T>.IKeywordAreaClass.ISortAreaClass.SortEventRec ソートキー指示データクラス Interfaces IChumon 注文クラスインターフェース IChumonJissekiService IChumonService 注文サービスクラス用インターフェース IConvertObjectToCsv CSVファイルを作る用インターフェース IDbContext DB接続用インターフェース（c#コンソールデバッグ用） IDeleteFlag 削除フラグ不可設定用インターフェース IKaikei IKaikeiJissekiForAdd 画面上の会計実績追加用のデータ構造インターフェース化 このインターフェースは、画面からの追加や、消費税に関する内外区分による消費税計算で使われる 実装先：KaikeiJissekiForAdd、KaikeiJisseki(DTO) IKaikeiJissekiService IKaikeiService IMasterRegistrationService<TKeepMasterData, TPostMasterData, TMasterRegistrationViewModel> マスター登録サービスインターフェース IMasterRegistrationService<TKeepMasterData, TPostMasterData, TMasterRegistrationViewModel>.IMasterRegistrationSelectList 選択リスト作成のためのインターフェース IMasterRegistrationViewModel<T> マスター登録用ビューモデルのインターフェース INaigaiClassMasterService IPostMasterData Postデータのインターフェース IRetrivalService IRetrivalViewModel<T> 注文実績検索ビューモデル用インターフェース IRetrivalViewModel<T>.IDataAreaClass データ表示管理用インターふぇおす IRetrivalViewModel<T>.IKeywordAreaClass ソートキー・検索キーエリア管理用インターフェース IRetrivalViewModel<T>.IKeywordAreaClass.IKeyAreaClass 検索キー管理用クラス IRetrivalViewModel<T>.IKeywordAreaClass.ISortAreaClass ソートエリア管理用インターフェース ISelectList 選択リストアイテムのインターフェース ISharedTools シリアライズ・デシリアライズ化 IShiire 仕入クラスインターフェース IShiireJissekiService IShiireMasterService IShiireSakiMasterService IShiireService 仕入サービス用インターフェース IShohinMasterService ITentoHaraidashi ITentoHaraidashiService ITentoZaikoService ITotalSummaryRetrival IZaiko 在庫クラスインターフェース IZaikoService 倉庫在庫検索（サービス）インターフェース Enums Comparisons 比較演算子のスキーマー化"
  },
  "api/Convenience.Models.Menu.html": {
    "href": "api/Convenience.Models.Menu.html",
    "title": "Class Menu | Convenience",
    "keywords": "Class Menu Namespace Convenience.Models Assembly Convenience.dll メニュークラス public class Menu Inheritance object Menu Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MenuList メニュー表示用リスト（メニューアイテムリスト） public List<MenuItem> MenuList { get; set; } Property Value List<MenuItem>"
  },
  "api/Convenience.Models.MenuItem.html": {
    "href": "api/Convenience.Models.MenuItem.html",
    "title": "Class MenuItem | Convenience",
    "keywords": "Class MenuItem Namespace Convenience.Models Assembly Convenience.dll メニューアイテムクラス public class MenuItem Inheritance object MenuItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChildrenMenus public IList<MenuItem>? ChildrenMenus { get; set; } Property Value IList<MenuItem> Description 説明 public string Description { get; set; } Property Value string Name メニュー名 public required string Name { get; set; } Property Value string Url 起動ＵＲＬ public string Url { get; set; } Property Value string"
  },
  "api/Convenience.Models.Properties.AutoMapperSharedProfile.html": {
    "href": "api/Convenience.Models.Properties.AutoMapperSharedProfile.html",
    "title": "Class AutoMapperSharedProfile | Convenience",
    "keywords": "Class AutoMapperSharedProfile Namespace Convenience.Models.Properties Assembly Convenience.dll public class AutoMapperSharedProfile : Profile, IProfileExpression, IProfileConfiguration Inheritance object Profile AutoMapperSharedProfile Implements IProfileExpression IProfileConfiguration Inherited Members Profile.DisableConstructorMapping() Profile.CreateProjection<TSource, TDestination>() Profile.CreateProjection<TSource, TDestination>(MemberList) Profile.CreateMap<TSource, TDestination>() Profile.CreateMap<TSource, TDestination>(MemberList) Profile.CreateMap(Type, Type) Profile.CreateMap(Type, Type, MemberList) Profile.ClearPrefixes() Profile.ReplaceMemberName(string, string) Profile.RecognizePrefixes(params string[]) Profile.RecognizePostfixes(params string[]) Profile.RecognizeDestinationPrefixes(params string[]) Profile.RecognizeDestinationPostfixes(params string[]) Profile.AddGlobalIgnore(string) Profile.IncludeSourceExtensionMethods(Type) Profile.IProfileConfiguration.ConstructorMappingEnabled Profile.IProfileConfiguration.MethodMappingEnabled Profile.IProfileConfiguration.FieldMappingEnabled Profile.IProfileConfiguration.EnableNullPropagationForQueryMapping Profile.IProfileConfiguration.AllPropertyMapActions Profile.IProfileConfiguration.AllTypeMapActions Profile.IProfileConfiguration.GlobalIgnores Profile.IProfileConfiguration.SourceExtensionMethods Profile.IProfileConfiguration.TypeMapConfigs Profile.IProfileConfiguration.OpenTypeMapConfigs Profile.IProfileConfiguration.ValueTransformers Profile.ProfileName Profile.AllowNullDestinationValues Profile.AllowNullCollections Profile.ShouldMapProperty Profile.ShouldMapField Profile.ShouldMapMethod Profile.ShouldUseConstructor Profile.SourceMemberNamingConvention Profile.DestinationMemberNamingConvention Profile.ValueTransformers object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AutoMapperSharedProfile() public AutoMapperSharedProfile()"
  },
  "api/Convenience.Models.Properties.CSVMapping.ChumonJissekiCSV.html": {
    "href": "api/Convenience.Models.Properties.CSVMapping.ChumonJissekiCSV.html",
    "title": "Class CSVMapping.ChumonJissekiCSV | Convenience",
    "keywords": "Class CSVMapping.ChumonJissekiCSV Namespace Convenience.Models.Properties Assembly Convenience.dll public record CSVMapping.ChumonJissekiCSV : IEquatable<CSVMapping.ChumonJissekiCSV> Inheritance object CSVMapping.ChumonJissekiCSV Implements IEquatable<CSVMapping.ChumonJissekiCSV> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonDate [Name(\"注文日\")] [Index(11, -1)] public DateOnly ChumonDate { get; set; } Property Value DateOnly ChumonId [Name(\"注文コード\")] [Index(1, -1)] public string ChumonId { get; set; } Property Value string ChumonKingaku [Name(\"注文金額\")] [Index(12, -1)] public decimal ChumonKingaku { get; set; } Property Value decimal ChumonSu [Name(\"注文数\")] [Index(8, -1)] public decimal ChumonSu { get; set; } Property Value decimal ChumonZan [Name(\"注文残\")] [Index(10, -1)] public decimal ChumonZan { get; set; } Property Value decimal ChumonZanKingaku [Name(\"注文残金額\")] [Index(14, -1)] public decimal ChumonZanKingaku { get; set; } Property Value decimal ShiirePrdId [Name(\"仕入商品コード\")] [Index(4, -1)] public string ShiirePrdId { get; set; } Property Value string ShiirePrdName [Name(\"仕入商品名称\")] [Index(5, -1)] public string ShiirePrdName { get; set; } Property Value string ShiireSakiId [Name(\"仕入先コード\")] [Index(2, -1)] public string ShiireSakiId { get; set; } Property Value string ShiireSakiKaisya [Name(\"仕入先会社\")] [Index(3, -1)] public string ShiireSakiKaisya { get; set; } Property Value string ShiireZumiKingaku [Name(\"仕入済金額\")] [Index(13, -1)] public decimal ShiireZumiKingaku { get; set; } Property Value decimal ShiireZumiSu [Name(\"仕入済数\")] [Index(9, -1)] public decimal ShiireZumiSu { get; set; } Property Value decimal ShohinId [Name(\"商品コード\")] [Index(6, -1)] public string ShohinId { get; set; } Property Value string ShohinName [Name(\"商品名称\")] [Index(7, -1)] public string ShohinName { get; set; } Property Value string"
  },
  "api/Convenience.Models.Properties.CSVMapping.KaikeiJissekiCSV.html": {
    "href": "api/Convenience.Models.Properties.CSVMapping.KaikeiJissekiCSV.html",
    "title": "Class CSVMapping.KaikeiJissekiCSV | Convenience",
    "keywords": "Class CSVMapping.KaikeiJissekiCSV Namespace Convenience.Models.Properties Assembly Convenience.dll public record CSVMapping.KaikeiJissekiCSV : IEquatable<CSVMapping.KaikeiJissekiCSV> Inheritance object CSVMapping.KaikeiJissekiCSV Implements IEquatable<CSVMapping.KaikeiJissekiCSV> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties NaigaiClass [Name(\"内外区分\")] [Index(9, -1)] public string NaigaiClass { get; set; } Property Value string NaigaiClassName [Name(\"内外区分名称\")] [Index(10, -1)] public string NaigaiClassName { get; set; } Property Value string ShohiZeiritsu [Name(\"消費税率\")] [Index(8, -1)] public decimal ShohiZeiritsu { get; set; } Property Value decimal ShohinId [Name(\"商品コード\")] [Index(2, -1)] public string? ShohinId { get; set; } Property Value string ShohinName [Name(\"商品名称\")] [Index(3, -1)] public string ShohinName { get; set; } Property Value string ShohinTanka [Name(\"商品単価\")] [Index(7, -1)] public decimal ShohinTanka { get; set; } Property Value decimal UriageDatetime [Name(\"売上日時\")] [Index(1, -1)] public DateTime UriageDatetime { get; set; } Property Value DateTime UriageKingaku [Name(\"売上金額\")] [Index(5, -1)] public decimal UriageKingaku { get; set; } Property Value decimal UriageSu [Name(\"売上数量\")] [Index(4, -1)] public decimal UriageSu { get; set; } Property Value decimal ZeikomiKingaku [Name(\"税込金額\")] [Index(6, -1)] public decimal ZeikomiKingaku { get; set; } Property Value decimal"
  },
  "api/Convenience.Models.Properties.CSVMapping.ShiireJissekiCSV.html": {
    "href": "api/Convenience.Models.Properties.CSVMapping.ShiireJissekiCSV.html",
    "title": "Class CSVMapping.ShiireJissekiCSV | Convenience",
    "keywords": "Class CSVMapping.ShiireJissekiCSV Namespace Convenience.Models.Properties Assembly Convenience.dll public record CSVMapping.ShiireJissekiCSV : IEquatable<CSVMapping.ShiireJissekiCSV> Inheritance object CSVMapping.ShiireJissekiCSV Implements IEquatable<CSVMapping.ShiireJissekiCSV> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonId [Name(\"注文コード\")] [Index(1, -1)] public string ChumonId { get; set; } Property Value string NonyuSu [Name(\"納入数\")] [Index(11, -1)] public decimal NonyuSu { get; set; } Property Value decimal SeqByShiireDate [Name(\"仕入SEQ\")] [Index(3, -1)] public uint SeqByShiireDate { get; set; } Property Value uint ShiireDate [Name(\"仕入日付\")] [Index(2, -1)] public DateOnly ShiireDate { get; set; } Property Value DateOnly ShiireDateTime [Name(\"仕入日時\")] [Index(4, -1)] public DateTime ShiireDateTime { get; set; } Property Value DateTime ShiirePrdId [Name(\"仕入商品コード\")] [Index(7, -1)] public string ShiirePrdId { get; set; } Property Value string ShiirePrdName [Name(\"仕入商品名称\")] [Index(8, -1)] public string ShiirePrdName { get; set; } Property Value string ShiireSakiId [Name(\"仕入先コード\")] [Index(5, -1)] public string ShiireSakiId { get; set; } Property Value string ShiireSakiKaisya [Name(\"仕入先会社\")] [Index(6, -1)] public string ShiireSakiKaisya { get; set; } Property Value string ShohinId [Name(\"商品コード\")] [Index(9, -1)] public string ShohinId { get; set; } Property Value string ShohinName [Name(\"商品名称\")] [Index(10, -1)] public string ShohinName { get; set; } Property Value string"
  },
  "api/Convenience.Models.Properties.CSVMapping.SokoZaikoCSV.html": {
    "href": "api/Convenience.Models.Properties.CSVMapping.SokoZaikoCSV.html",
    "title": "Class CSVMapping.SokoZaikoCSV | Convenience",
    "keywords": "Class CSVMapping.SokoZaikoCSV Namespace Convenience.Models.Properties Assembly Convenience.dll public record CSVMapping.SokoZaikoCSV : IEquatable<CSVMapping.SokoZaikoCSV> Inheritance object CSVMapping.SokoZaikoCSV Implements IEquatable<CSVMapping.SokoZaikoCSV> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonZan [Name(\"注文残\")] [Index(5, -1)] public decimal? ChumonZan { get; set; } Property Value decimal? LastDeliveryDate [Name(\"直近払出日\")] [Index(9, -1)] public DateOnly? LastDeliveryDate { get; set; } Property Value DateOnly? LastShiireDate [Name(\"直近仕入日\")] [Index(8, -1)] public DateOnly LastShiireDate { get; set; } Property Value DateOnly ShiirePrdId [Name(\"仕入商品コード\")] [Index(2, -1)] public string ShiirePrdId { get; set; } Property Value string ShiireSakiId [Name(\"仕入先コード\")] [Index(1, -1)] public string ShiireSakiId { get; set; } Property Value string ShohinId [Name(\"商品コード\")] [Index(3, -1)] public string ShohinId { get; set; } Property Value string ShohinName [Name(\"商品名称\")] [Index(4, -1)] public string? ShohinName { get; set; } Property Value string SokoZaikoCaseSu [Name(\"仕入単位在庫数\")] [Index(6, -1)] public decimal SokoZaikoCaseSu { get; set; } Property Value decimal SokoZaikoSu [Name(\"在庫数\")] [Index(7, -1)] public decimal SokoZaikoSu { get; set; } Property Value decimal"
  },
  "api/Convenience.Models.Properties.CSVMapping.TentoZaIkoCSV.html": {
    "href": "api/Convenience.Models.Properties.CSVMapping.TentoZaIkoCSV.html",
    "title": "Class CSVMapping.TentoZaIkoCSV | Convenience",
    "keywords": "Class CSVMapping.TentoZaIkoCSV Namespace Convenience.Models.Properties Assembly Convenience.dll public record CSVMapping.TentoZaIkoCSV : IEquatable<CSVMapping.TentoZaIkoCSV> Inheritance object CSVMapping.TentoZaIkoCSV Implements IEquatable<CSVMapping.TentoZaIkoCSV> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LastHaraidashiDate [Name(\"直近払出日時\")] [Index(5, -1)] public DateTime? LastHaraidashiDate { get; set; } Property Value DateTime? LastShireDateTime [Name(\"直近仕入日時\")] [Index(4, -1)] public DateOnly LastShireDateTime { get; set; } Property Value DateOnly LastUriageDatetime [Name(\"直近売上日時\")] [Index(6, -1)] public DateTime? LastUriageDatetime { get; set; } Property Value DateTime? ShohinId [Name(\"商品コード\")] [Index(1, -1)] public string? ShohinId { get; set; } Property Value string ShohinName [Name(\"商品名称\")] [Index(2, -1)] public string? ShohinName { get; set; } Property Value string ZaikoSu [Name(\"店頭在庫数\")] [Index(3, -1)] public decimal ZaikoSu { get; set; } Property Value decimal"
  },
  "api/Convenience.Models.Properties.CSVMapping.html": {
    "href": "api/Convenience.Models.Properties.CSVMapping.html",
    "title": "Class CSVMapping | Convenience",
    "keywords": "Class CSVMapping Namespace Convenience.Models.Properties Assembly Convenience.dll public static class CSVMapping Inheritance object CSVMapping Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Convenience.Models.Properties.Chumon.DelegateOverrideProc.html": {
    "href": "api/Convenience.Models.Properties.Chumon.DelegateOverrideProc.html",
    "title": "Delegate Chumon.DelegateOverrideProc | Convenience",
    "keywords": "Delegate Chumon.DelegateOverrideProc Namespace Convenience.Models.Properties Assembly Convenience.dll private delegate ChumonJisseki Chumon.DelegateOverrideProc(ChumonJisseki postedChumonJisseki, ChumonJisseki existedChumonJisseki) Parameters postedChumonJisseki ChumonJisseki existedChumonJisseki ChumonJisseki Returns ChumonJisseki"
  },
  "api/Convenience.Models.Properties.Chumon.html": {
    "href": "api/Convenience.Models.Properties.Chumon.html",
    "title": "Class Chumon | Convenience",
    "keywords": "Class Chumon Namespace Convenience.Models.Properties Assembly Convenience.dll 注文クラス public class Chumon : IChumon, IDbContext Inheritance object Chumon Implements IChumon IDbContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Chumon() 注文クラスデバッグ用 public Chumon() Chumon(ConvenienceContext) コンストラクタ public Chumon(ConvenienceContext context) Parameters context ConvenienceContext DBコンテキスト Fields OverrideProc private readonly Chumon.DelegateOverrideProc OverrideProc Field Value Chumon.DelegateOverrideProc _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext Properties ChumonJisseki 注文実績プロパティ public ChumonJisseki? ChumonJisseki { get; set; } Property Value ChumonJisseki Methods ChumonIdHatsuban(DateOnly) 注文コード発番 private Task<string?> ChumonIdHatsuban(DateOnly InTheDate) Parameters InTheDate DateOnly 注文日付 Returns Task<string> 発番された注文コード Remarks 注文コード書式例）：20240129-001(yyyyMMdd-001～999） ChumonSakusei(string, DateOnly) 注文作成 public Task<ChumonJisseki> ChumonSakusei(string inShireSakiId, DateOnly inChumonDate) Parameters inShireSakiId string 仕入先コード inChumonDate DateOnly 注文日 Returns Task<ChumonJisseki> 新規作成された注文実績 Remarks 仕入先より注文実績データ（親）を生成する 注文実績明細データ（子）を仕入マスタを元に作成する 注文実績データ（親）と注文実績明細データ（子）を連結する 注文実績（プラス注文実績明細）を戻り値とする Exceptions Exception ChumonToiawase(string, DateOnly) 注文更新用問い合わせ public Task<ChumonJisseki?> ChumonToiawase(string inShireSakiId, DateOnly inChumonDate) Parameters inShireSakiId string 仕入先コード inChumonDate DateOnly 注文日 Returns Task<ChumonJisseki> 既存の注文実績 Remarks ①注文実績＋注文実績明細＋仕入マスタ＋商品マスタ検索 ②戻り値を注文実績＋注文実績明細とする ChumonUpdate(ChumonJisseki) 注文実績＋注文明細更新 public Task<ChumonJisseki> ChumonUpdate(ChumonJisseki postedChumonJisseki) Parameters postedChumonJisseki ChumonJisseki postされた注文実績 Returns Task<ChumonJisseki> postされた注文実績を上書きされた注文実績 ChumonUpdateWithAutoMapper(ChumonJisseki, ChumonJisseki) Postデータの上乗せ処理（AutoMapper利用) private static ChumonJisseki ChumonUpdateWithAutoMapper(ChumonJisseki postedChumonJisseki, ChumonJisseki existedChumonJisseki) Parameters postedChumonJisseki ChumonJisseki 注文実績＋明細のPostデータ existedChumonJisseki ChumonJisseki 注文実績＋明細のDBデータ Returns ChumonJisseki 上乗せされた注文実績＋明細データ Remarks private readonly DelegateOverrideProc OverrideProc = ChumonUpdateWithAutoMapper;の設定の時にコールされる ３つの回答例の説明用の為、研修生は気にしなくて良い ChumonUpdateWithHandMade(ChumonJisseki, ChumonJisseki) Postデータの上乗せ処理（Linq使った手書き対応) private static ChumonJisseki ChumonUpdateWithHandMade(ChumonJisseki postedChumonJisseki, ChumonJisseki existedChumonJisseki) Parameters postedChumonJisseki ChumonJisseki 注文実績＋明細のPostデータ existedChumonJisseki ChumonJisseki 注文実績＋明細のDBデータ Returns ChumonJisseki 上乗せされた注文実績＋明細データ Remarks private readonly DelegateOverrideProc OverrideProc = ChumonUpdateWithHandMade;の設定の時にコールされる ３つの回答例の説明用の為、研修生は気にしなくて良い ChumonUpdateWithIndex(ChumonJisseki, ChumonJisseki) Postデータの上乗せ処理（For+Index使った手書き対応) private static ChumonJisseki ChumonUpdateWithIndex(ChumonJisseki postedChumonJisseki, ChumonJisseki existedChumonJisseki) Parameters postedChumonJisseki ChumonJisseki 注文実績＋明細のPostデータ existedChumonJisseki ChumonJisseki 注文実績＋明細のDBデータ Returns ChumonJisseki 上乗せされた注文実績＋明細データ Remarks private readonly DelegateOverrideProc OverrideProc = ChumonUpdateWithIndex;の設定の時にコールされる ３つの回答例の説明用の為、研修生は気にしなくて良い IsExistCheck<T>(T?) private static bool IsExistCheck<T>(T? checkdata) Parameters checkdata T Returns bool Type Parameters T ShiireSakiList<T>(Expression<Func<ShiireSakiMaster, T>>) public IQueryable<ShiireSakiMaster> ShiireSakiList<T>(Expression<Func<ShiireSakiMaster, T>> orderExpression) Parameters orderExpression Expression<Func<ShiireSakiMaster, T>> Returns IQueryable<ShiireSakiMaster> Type Parameters T"
  },
  "api/Convenience.Models.Properties.ChumonChumonJissekiToDTOAutoMapperProfile.html": {
    "href": "api/Convenience.Models.Properties.ChumonChumonJissekiToDTOAutoMapperProfile.html",
    "title": "Class ChumonChumonJissekiToDTOAutoMapperProfile | Convenience",
    "keywords": "Class ChumonChumonJissekiToDTOAutoMapperProfile Namespace Convenience.Models.Properties Assembly Convenience.dll public class ChumonChumonJissekiToDTOAutoMapperProfile : Profile, IProfileExpression, IProfileConfiguration Inheritance object Profile ChumonChumonJissekiToDTOAutoMapperProfile Implements IProfileExpression IProfileConfiguration Inherited Members Profile.DisableConstructorMapping() Profile.CreateProjection<TSource, TDestination>() Profile.CreateProjection<TSource, TDestination>(MemberList) Profile.CreateMap<TSource, TDestination>() Profile.CreateMap<TSource, TDestination>(MemberList) Profile.CreateMap(Type, Type) Profile.CreateMap(Type, Type, MemberList) Profile.ClearPrefixes() Profile.ReplaceMemberName(string, string) Profile.RecognizePrefixes(params string[]) Profile.RecognizePostfixes(params string[]) Profile.RecognizeDestinationPrefixes(params string[]) Profile.RecognizeDestinationPostfixes(params string[]) Profile.AddGlobalIgnore(string) Profile.IncludeSourceExtensionMethods(Type) Profile.IProfileConfiguration.ConstructorMappingEnabled Profile.IProfileConfiguration.MethodMappingEnabled Profile.IProfileConfiguration.FieldMappingEnabled Profile.IProfileConfiguration.EnableNullPropagationForQueryMapping Profile.IProfileConfiguration.AllPropertyMapActions Profile.IProfileConfiguration.AllTypeMapActions Profile.IProfileConfiguration.GlobalIgnores Profile.IProfileConfiguration.SourceExtensionMethods Profile.IProfileConfiguration.TypeMapConfigs Profile.IProfileConfiguration.OpenTypeMapConfigs Profile.IProfileConfiguration.ValueTransformers Profile.ProfileName Profile.AllowNullDestinationValues Profile.AllowNullCollections Profile.ShouldMapProperty Profile.ShouldMapField Profile.ShouldMapMethod Profile.ShouldUseConstructor Profile.SourceMemberNamingConvention Profile.DestinationMemberNamingConvention Profile.ValueTransformers object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChumonChumonJissekiToDTOAutoMapperProfile() public ChumonChumonJissekiToDTOAutoMapperProfile()"
  },
  "api/Convenience.Models.Properties.ChumonCreateChumonJissekiToDTOAutoMapperProfile.html": {
    "href": "api/Convenience.Models.Properties.ChumonCreateChumonJissekiToDTOAutoMapperProfile.html",
    "title": "Class ChumonCreateChumonJissekiToDTOAutoMapperProfile | Convenience",
    "keywords": "Class ChumonCreateChumonJissekiToDTOAutoMapperProfile Namespace Convenience.Models.Properties Assembly Convenience.dll public class ChumonCreateChumonJissekiToDTOAutoMapperProfile : Profile, IProfileExpression, IProfileConfiguration Inheritance object Profile ChumonCreateChumonJissekiToDTOAutoMapperProfile Implements IProfileExpression IProfileConfiguration Inherited Members Profile.DisableConstructorMapping() Profile.CreateProjection<TSource, TDestination>() Profile.CreateProjection<TSource, TDestination>(MemberList) Profile.CreateMap<TSource, TDestination>() Profile.CreateMap<TSource, TDestination>(MemberList) Profile.CreateMap(Type, Type) Profile.CreateMap(Type, Type, MemberList) Profile.ClearPrefixes() Profile.ReplaceMemberName(string, string) Profile.RecognizePrefixes(params string[]) Profile.RecognizePostfixes(params string[]) Profile.RecognizeDestinationPrefixes(params string[]) Profile.RecognizeDestinationPostfixes(params string[]) Profile.AddGlobalIgnore(string) Profile.IncludeSourceExtensionMethods(Type) Profile.IProfileConfiguration.ConstructorMappingEnabled Profile.IProfileConfiguration.MethodMappingEnabled Profile.IProfileConfiguration.FieldMappingEnabled Profile.IProfileConfiguration.EnableNullPropagationForQueryMapping Profile.IProfileConfiguration.AllPropertyMapActions Profile.IProfileConfiguration.AllTypeMapActions Profile.IProfileConfiguration.GlobalIgnores Profile.IProfileConfiguration.SourceExtensionMethods Profile.IProfileConfiguration.TypeMapConfigs Profile.IProfileConfiguration.OpenTypeMapConfigs Profile.IProfileConfiguration.ValueTransformers Profile.ProfileName Profile.AllowNullDestinationValues Profile.AllowNullCollections Profile.ShouldMapProperty Profile.ShouldMapField Profile.ShouldMapMethod Profile.ShouldUseConstructor Profile.SourceMemberNamingConvention Profile.DestinationMemberNamingConvention Profile.ValueTransformers object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChumonCreateChumonJissekiToDTOAutoMapperProfile() public ChumonCreateChumonJissekiToDTOAutoMapperProfile()"
  },
  "api/Convenience.Models.Properties.ChumonJissekiPostdataToChumonJissekiViewModel.html": {
    "href": "api/Convenience.Models.Properties.ChumonJissekiPostdataToChumonJissekiViewModel.html",
    "title": "Class ChumonJissekiPostdataToChumonJissekiViewModel | Convenience",
    "keywords": "Class ChumonJissekiPostdataToChumonJissekiViewModel Namespace Convenience.Models.Properties Assembly Convenience.dll public class ChumonJissekiPostdataToChumonJissekiViewModel : Profile, IProfileExpression, IProfileConfiguration Inheritance object Profile ChumonJissekiPostdataToChumonJissekiViewModel Implements IProfileExpression IProfileConfiguration Inherited Members Profile.DisableConstructorMapping() Profile.CreateProjection<TSource, TDestination>() Profile.CreateProjection<TSource, TDestination>(MemberList) Profile.CreateMap<TSource, TDestination>() Profile.CreateMap<TSource, TDestination>(MemberList) Profile.CreateMap(Type, Type) Profile.CreateMap(Type, Type, MemberList) Profile.ClearPrefixes() Profile.ReplaceMemberName(string, string) Profile.RecognizePrefixes(params string[]) Profile.RecognizePostfixes(params string[]) Profile.RecognizeDestinationPrefixes(params string[]) Profile.RecognizeDestinationPostfixes(params string[]) Profile.AddGlobalIgnore(string) Profile.IncludeSourceExtensionMethods(Type) Profile.IProfileConfiguration.ConstructorMappingEnabled Profile.IProfileConfiguration.MethodMappingEnabled Profile.IProfileConfiguration.FieldMappingEnabled Profile.IProfileConfiguration.EnableNullPropagationForQueryMapping Profile.IProfileConfiguration.AllPropertyMapActions Profile.IProfileConfiguration.AllTypeMapActions Profile.IProfileConfiguration.GlobalIgnores Profile.IProfileConfiguration.SourceExtensionMethods Profile.IProfileConfiguration.TypeMapConfigs Profile.IProfileConfiguration.OpenTypeMapConfigs Profile.IProfileConfiguration.ValueTransformers Profile.ProfileName Profile.AllowNullDestinationValues Profile.AllowNullCollections Profile.ShouldMapProperty Profile.ShouldMapField Profile.ShouldMapMethod Profile.ShouldUseConstructor Profile.SourceMemberNamingConvention Profile.DestinationMemberNamingConvention Profile.ValueTransformers object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChumonJissekiPostdataToChumonJissekiViewModel() public ChumonJissekiPostdataToChumonJissekiViewModel()"
  },
  "api/Convenience.Models.Properties.ChumonJissekiSetupException.html": {
    "href": "api/Convenience.Models.Properties.ChumonJissekiSetupException.html",
    "title": "Class ChumonJissekiSetupException | Convenience",
    "keywords": "Class ChumonJissekiSetupException Namespace Convenience.Models.Properties Assembly Convenience.dll 注文クラスのセッティングエラー public class ChumonJissekiSetupException : Exception, ISerializable Inheritance object Exception ChumonJissekiSetupException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ChumonJissekiSetupException(string) public ChumonJissekiSetupException(string message) Parameters message string"
  },
  "api/Convenience.Models.Properties.ConvertObjectToCsv.html": {
    "href": "api/Convenience.Models.Properties.ConvertObjectToCsv.html",
    "title": "Class ConvertObjectToCsv | Convenience",
    "keywords": "Class ConvertObjectToCsv Namespace Convenience.Models.Properties Assembly Convenience.dll CSVファイルを作る public class ConvertObjectToCsv : IConvertObjectToCsv Inheritance object ConvertObjectToCsv Implements IConvertObjectToCsv Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConvertObjectToCsv(IWebHostEnvironment) コンストラクタ public ConvertObjectToCsv(IWebHostEnvironment environment) Parameters environment IWebHostEnvironment Fields FilenameDic public static Dictionary<string, string> FilenameDic Field Value Dictionary<string, string> _environment private IWebHostEnvironment _environment Field Value IWebHostEnvironment configuration private CsvConfiguration configuration Field Value CsvConfiguration encoding private readonly Encoding encoding Field Value Encoding strEncoding private const string strEncoding = \"shift-jis\" Field Value string tmpDir private const string tmpDir = \"tmpfiles\" Field Value string Methods ConvertToCSV<T1, T2>(IEnumerable<T1>, string) CSVへ変換 public string ConvertToCSV<T1, T2>(IEnumerable<T1> modeldatas, string filename) where T1 : class where T2 : class Parameters modeldatas IEnumerable<T1> 変換元モデル filename string CSVマッピングモデル Returns string 作られたファイル名（フルパス） Type Parameters T1 CSV化したいモデル T2 CSVMappingモデル CsvConfig() Csvコンフィグ public (CsvConfiguration config, Encoding encording) CsvConfig() Returns (CsvConfiguration config, Encoding encording) Csvコンフィグ・エンコード GetFileName(string) ファイル名を取得する public string GetFileName(string keyword) Parameters keyword string コントローラー名 Returns string ファイル名 Exceptions KeyNotFoundException"
  },
  "api/Convenience.Models.Properties.DataCountMismatchException.html": {
    "href": "api/Convenience.Models.Properties.DataCountMismatchException.html",
    "title": "Class DataCountMismatchException | Convenience",
    "keywords": "Class DataCountMismatchException Namespace Convenience.Models.Properties Assembly Convenience.dll ０件データ public class DataCountMismatchException : Exception, ISerializable Inheritance object Exception DataCountMismatchException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DataCountMismatchException(string) public DataCountMismatchException(string message) Parameters message string"
  },
  "api/Convenience.Models.Properties.DataPositionMismatchException.html": {
    "href": "api/Convenience.Models.Properties.DataPositionMismatchException.html",
    "title": "Class DataPositionMismatchException | Convenience",
    "keywords": "Class DataPositionMismatchException Namespace Convenience.Models.Properties Assembly Convenience.dll データ上乗せ時のindex位置エラー public class DataPositionMismatchException : Exception, ISerializable Inheritance object Exception DataPositionMismatchException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DataPositionMismatchException(string) public DataPositionMismatchException(string message) Parameters message string"
  },
  "api/Convenience.Models.Properties.Kaikei.html": {
    "href": "api/Convenience.Models.Properties.Kaikei.html",
    "title": "Class Kaikei | Convenience",
    "keywords": "Class Kaikei Namespace Convenience.Models.Properties Assembly Convenience.dll 店頭払出クラス public class Kaikei : IKaikei, ISharedTools Inheritance object Kaikei Implements IKaikei ISharedTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Kaikei(ConvenienceContext) コンストラクタ（ASP用） public Kaikei(ConvenienceContext context) Parameters context ConvenienceContext Fields _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext Properties KaikeiHeader プロパティ 店頭払出ヘッダー public KaikeiHeader? KaikeiHeader { get; set; } Property Value KaikeiHeader Methods KaikeiAddcommodity(IKaikeiJissekiForAdd) 会計実績の品目追加 public Task<IList<KaikeiJisseki>> KaikeiAddcommodity(IKaikeiJissekiForAdd argKaikeiJisseki) Parameters argKaikeiJisseki IKaikeiJissekiForAdd Returns Task<IList<KaikeiJisseki>> KaikeiJisseki 品目を追加された会計実績 KaikeiSakusei(DateTime) 会計作成（新規会計用） 新規会計ヘッダーと実績を作成する public KaikeiHeader KaikeiSakusei(DateTime argCurrentDateTime) Parameters argCurrentDateTime DateTime 適用日時 Returns KaikeiHeader KaikeiHeader 会計ヘッダー＋実績 Remarks ①会計ヘッダーの作成 ②会計実績の作成 KaikeiToiawase(string) 会計問い合わせ(ソート指示なし） public Task<KaikeiHeader?> KaikeiToiawase(string argTentoHaraidashiId) Parameters argTentoHaraidashiId string 店頭払出コード Returns Task<KaikeiHeader> 会計実績ヘッダー＋実績 KaikeiToiawase<T>(string, Expression<Func<KaikeiJisseki, T>>?) 会計問い合わせ public Task<KaikeiHeader?> KaikeiToiawase<T>(string argTentoHaraidashiId, Expression<Func<KaikeiJisseki, T>>? orderexpression) Parameters argTentoHaraidashiId string 店頭払出コード orderexpression Expression<Func<KaikeiJisseki, T>> ソート指示用ラムダ式 Returns Task<KaikeiHeader> 会計実績ヘッダー＋実績 Type Parameters T ソート指示された項目のタイプ KaikeiUpdate(KaikeiHeader) 会計ヘッダー＋実績のＤＢ更新 public Task<KaikeiHeader> KaikeiUpdate(KaikeiHeader argpostedKaikeiHeader) Parameters argpostedKaikeiHeader KaikeiHeader 反映する会計ヘッダ＋実績 Returns Task<KaikeiHeader> KaikeiHeader DB更新された会計ヘッダ＋実績 ShohizeiKeisan(IKaikeiJissekiForAdd, KaikeiJisseki) 消費税計算 public KaikeiJisseki ShohizeiKeisan(IKaikeiJissekiForAdd inKaikeiJisseki, KaikeiJisseki outKaikeiJisseki) Parameters inKaikeiJisseki IKaikeiJissekiForAdd 会計実績 outKaikeiJisseki KaikeiJisseki 消費税関連で計算されたものの反映先（会計実績） Returns KaikeiJisseki 消費税関連で計算されたものの反映先（会計実績） Remarks （条件）売上金額が第一引数側にセットされていること Exceptions InvalidDataException UriageDatetimeIdHatsuban(DateTime) 会計コード発番 private Task<string> UriageDatetimeIdHatsuban(DateTime argCurrentDateTime) Parameters argCurrentDateTime DateTime 会計日時 Returns Task<string> 会計コード(yyyyMMdd-HH-001～999、HHは店頭払出日時の時間部分 ZaikoConnection(string, DateTime, decimal, TentoZaiko?) 店頭在庫から売上分を差し引く public TentoZaiko? ZaikoConnection(string argShohinId, DateTime argUriageDateTime, decimal argDiffUriageSu, TentoZaiko? argTentoZaiko) Parameters argShohinId string 商品コード argUriageDateTime DateTime 売上日時 argDiffUriageSu decimal 差し引く個数 argTentoZaiko TentoZaiko 店頭在庫 Returns TentoZaiko 店頭在庫"
  },
  "api/Convenience.Models.Properties.KaikeiAddLineToTempDataAutoMapperProfile.html": {
    "href": "api/Convenience.Models.Properties.KaikeiAddLineToTempDataAutoMapperProfile.html",
    "title": "Class KaikeiAddLineToTempDataAutoMapperProfile | Convenience",
    "keywords": "Class KaikeiAddLineToTempDataAutoMapperProfile Namespace Convenience.Models.Properties Assembly Convenience.dll public class KaikeiAddLineToTempDataAutoMapperProfile : Profile, IProfileExpression, IProfileConfiguration Inheritance object Profile KaikeiAddLineToTempDataAutoMapperProfile Implements IProfileExpression IProfileConfiguration Inherited Members Profile.DisableConstructorMapping() Profile.CreateProjection<TSource, TDestination>() Profile.CreateProjection<TSource, TDestination>(MemberList) Profile.CreateMap<TSource, TDestination>() Profile.CreateMap<TSource, TDestination>(MemberList) Profile.CreateMap(Type, Type) Profile.CreateMap(Type, Type, MemberList) Profile.ClearPrefixes() Profile.ReplaceMemberName(string, string) Profile.RecognizePrefixes(params string[]) Profile.RecognizePostfixes(params string[]) Profile.RecognizeDestinationPrefixes(params string[]) Profile.RecognizeDestinationPostfixes(params string[]) Profile.AddGlobalIgnore(string) Profile.IncludeSourceExtensionMethods(Type) Profile.IProfileConfiguration.ConstructorMappingEnabled Profile.IProfileConfiguration.MethodMappingEnabled Profile.IProfileConfiguration.FieldMappingEnabled Profile.IProfileConfiguration.EnableNullPropagationForQueryMapping Profile.IProfileConfiguration.AllPropertyMapActions Profile.IProfileConfiguration.AllTypeMapActions Profile.IProfileConfiguration.GlobalIgnores Profile.IProfileConfiguration.SourceExtensionMethods Profile.IProfileConfiguration.TypeMapConfigs Profile.IProfileConfiguration.OpenTypeMapConfigs Profile.IProfileConfiguration.ValueTransformers Profile.ProfileName Profile.AllowNullDestinationValues Profile.AllowNullCollections Profile.ShouldMapProperty Profile.ShouldMapField Profile.ShouldMapMethod Profile.ShouldUseConstructor Profile.SourceMemberNamingConvention Profile.DestinationMemberNamingConvention Profile.ValueTransformers object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KaikeiAddLineToTempDataAutoMapperProfile(IKaikei) public KaikeiAddLineToTempDataAutoMapperProfile(IKaikei kaikei) Parameters kaikei IKaikei"
  },
  "api/Convenience.Models.Properties.KaikeiJissekiPostdataToKaikeiJissekiViewModel.html": {
    "href": "api/Convenience.Models.Properties.KaikeiJissekiPostdataToKaikeiJissekiViewModel.html",
    "title": "Class KaikeiJissekiPostdataToKaikeiJissekiViewModel | Convenience",
    "keywords": "Class KaikeiJissekiPostdataToKaikeiJissekiViewModel Namespace Convenience.Models.Properties Assembly Convenience.dll public class KaikeiJissekiPostdataToKaikeiJissekiViewModel : Profile, IProfileExpression, IProfileConfiguration Inheritance object Profile KaikeiJissekiPostdataToKaikeiJissekiViewModel Implements IProfileExpression IProfileConfiguration Inherited Members Profile.DisableConstructorMapping() Profile.CreateProjection<TSource, TDestination>() Profile.CreateProjection<TSource, TDestination>(MemberList) Profile.CreateMap<TSource, TDestination>() Profile.CreateMap<TSource, TDestination>(MemberList) Profile.CreateMap(Type, Type) Profile.CreateMap(Type, Type, MemberList) Profile.ClearPrefixes() Profile.ReplaceMemberName(string, string) Profile.RecognizePrefixes(params string[]) Profile.RecognizePostfixes(params string[]) Profile.RecognizeDestinationPrefixes(params string[]) Profile.RecognizeDestinationPostfixes(params string[]) Profile.AddGlobalIgnore(string) Profile.IncludeSourceExtensionMethods(Type) Profile.IProfileConfiguration.ConstructorMappingEnabled Profile.IProfileConfiguration.MethodMappingEnabled Profile.IProfileConfiguration.FieldMappingEnabled Profile.IProfileConfiguration.EnableNullPropagationForQueryMapping Profile.IProfileConfiguration.AllPropertyMapActions Profile.IProfileConfiguration.AllTypeMapActions Profile.IProfileConfiguration.GlobalIgnores Profile.IProfileConfiguration.SourceExtensionMethods Profile.IProfileConfiguration.TypeMapConfigs Profile.IProfileConfiguration.OpenTypeMapConfigs Profile.IProfileConfiguration.ValueTransformers Profile.ProfileName Profile.AllowNullDestinationValues Profile.AllowNullCollections Profile.ShouldMapProperty Profile.ShouldMapField Profile.ShouldMapMethod Profile.ShouldUseConstructor Profile.SourceMemberNamingConvention Profile.DestinationMemberNamingConvention Profile.ValueTransformers object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KaikeiJissekiPostdataToKaikeiJissekiViewModel() public KaikeiJissekiPostdataToKaikeiJissekiViewModel()"
  },
  "api/Convenience.Models.Properties.KaikeiPostToDTOAutoMapperProfile.html": {
    "href": "api/Convenience.Models.Properties.KaikeiPostToDTOAutoMapperProfile.html",
    "title": "Class KaikeiPostToDTOAutoMapperProfile | Convenience",
    "keywords": "Class KaikeiPostToDTOAutoMapperProfile Namespace Convenience.Models.Properties Assembly Convenience.dll AutoMapper用プロファイル public class KaikeiPostToDTOAutoMapperProfile : Profile, IProfileExpression, IProfileConfiguration Inheritance object Profile KaikeiPostToDTOAutoMapperProfile Implements IProfileExpression IProfileConfiguration Inherited Members Profile.DisableConstructorMapping() Profile.CreateProjection<TSource, TDestination>() Profile.CreateProjection<TSource, TDestination>(MemberList) Profile.CreateMap<TSource, TDestination>() Profile.CreateMap<TSource, TDestination>(MemberList) Profile.CreateMap(Type, Type) Profile.CreateMap(Type, Type, MemberList) Profile.ClearPrefixes() Profile.ReplaceMemberName(string, string) Profile.RecognizePrefixes(params string[]) Profile.RecognizePostfixes(params string[]) Profile.RecognizeDestinationPrefixes(params string[]) Profile.RecognizeDestinationPostfixes(params string[]) Profile.AddGlobalIgnore(string) Profile.IncludeSourceExtensionMethods(Type) Profile.IProfileConfiguration.ConstructorMappingEnabled Profile.IProfileConfiguration.MethodMappingEnabled Profile.IProfileConfiguration.FieldMappingEnabled Profile.IProfileConfiguration.EnableNullPropagationForQueryMapping Profile.IProfileConfiguration.AllPropertyMapActions Profile.IProfileConfiguration.AllTypeMapActions Profile.IProfileConfiguration.GlobalIgnores Profile.IProfileConfiguration.SourceExtensionMethods Profile.IProfileConfiguration.TypeMapConfigs Profile.IProfileConfiguration.OpenTypeMapConfigs Profile.IProfileConfiguration.ValueTransformers Profile.ProfileName Profile.AllowNullDestinationValues Profile.AllowNullCollections Profile.ShouldMapProperty Profile.ShouldMapField Profile.ShouldMapMethod Profile.ShouldUseConstructor Profile.SourceMemberNamingConvention Profile.DestinationMemberNamingConvention Profile.ValueTransformers object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KaikeiPostToDTOAutoMapperProfile(IKaikei) public KaikeiPostToDTOAutoMapperProfile(IKaikei kaikei) Parameters kaikei IKaikei"
  },
  "api/Convenience.Models.Properties.Message.ErrDef.html": {
    "href": "api/Convenience.Models.Properties.Message.ErrDef.html",
    "title": "Enum Message.ErrDef | Convenience",
    "keywords": "Enum Message.ErrDef Namespace Convenience.Models.Properties Assembly Convenience.dll エラーコードenum設定（0から付与） public enum Message.ErrDef Fields CanNotlUpdate = 2 ChumonDateError = 4 ChumonIdError = 3 ChumonIdRelationError = 5 ChumonSuBadRange = 7 ChumonSuIsNull = 6 ChumonZanIsNull = 8 DataValid = 0 NormalUpdate = 1 NothingChumonJisseki = 10 OtherError = 11 SuErrorBetChumonSuAndZan = 9"
  },
  "api/Convenience.Models.Properties.Message.MessageData.html": {
    "href": "api/Convenience.Models.Properties.Message.MessageData.html",
    "title": "Class Message.MessageData | Convenience",
    "keywords": "Class Message.MessageData Namespace Convenience.Models.Properties Assembly Convenience.dll メッセ―ジ表示用データクラス public class Message.MessageData Inheritance object Message.MessageData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MessageNo メッセージ番号 public Message.ErrDef MessageNo { get; set; } Property Value Message.ErrDef MessageText 表示メッセージ public string? MessageText { get; set; } Property Value string"
  },
  "api/Convenience.Models.Properties.Message.html": {
    "href": "api/Convenience.Models.Properties.Message.html",
    "title": "Class Message | Convenience",
    "keywords": "Class Message Namespace Convenience.Models.Properties Assembly Convenience.dll 正常・エラーメッセージ用クラス public class Message Inheritance object Message Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MessageList エラー番号とメッセージ表示のリンク private static readonly ICollection<Message.MessageData> MessageList Field Value ICollection<Message.MessageData> Properties messageData メッセ―ジ表示用データクラスのオブジェクト変数 public static Message.MessageData? messageData { get; set; } Property Value Message.MessageData Remarks NULL許容 Methods SetMessage(ErrDef) エラーメッセージのセット public Message.MessageData? SetMessage(Message.ErrDef inErrCd) Parameters inErrCd Message.ErrDef 表示したいメッセージ内容に対応したエラーコード Returns Message.MessageData メッセ―ジ表示用データクラスがセットされたオブジェクト変数 Remarks NULL返却あり"
  },
  "api/Convenience.Models.Properties.NoDataFoundException.html": {
    "href": "api/Convenience.Models.Properties.NoDataFoundException.html",
    "title": "Class NoDataFoundException | Convenience",
    "keywords": "Class NoDataFoundException Namespace Convenience.Models.Properties Assembly Convenience.dll エンティティからのデータがなかったとき public class NoDataFoundException : Exception, ISerializable Inheritance object Exception NoDataFoundException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NoDataFoundException(string) public NoDataFoundException(string message) Parameters message string"
  },
  "api/Convenience.Models.Properties.OrderCodeGenerationException.html": {
    "href": "api/Convenience.Models.Properties.OrderCodeGenerationException.html",
    "title": "Class OrderCodeGenerationException | Convenience",
    "keywords": "Class OrderCodeGenerationException Namespace Convenience.Models.Properties Assembly Convenience.dll 注文コード発番時のエラー public class OrderCodeGenerationException : Exception, ISerializable Inheritance object Exception OrderCodeGenerationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OrderCodeGenerationException(string) public OrderCodeGenerationException(string message) Parameters message string"
  },
  "api/Convenience.Models.Properties.PostDataInValidException.html": {
    "href": "api/Convenience.Models.Properties.PostDataInValidException.html",
    "title": "Class PostDataInValidException | Convenience",
    "keywords": "Class PostDataInValidException Namespace Convenience.Models.Properties Assembly Convenience.dll ポストデータチェックエラー public class PostDataInValidException : Exception, ISerializable Inheritance object Exception PostDataInValidException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PostDataInValidException(string) public PostDataInValidException(string message) Parameters message string"
  },
  "api/Convenience.Models.Properties.Shiire.ChumonList.html": {
    "href": "api/Convenience.Models.Properties.Shiire.ChumonList.html",
    "title": "Class Shiire.ChumonList | Convenience",
    "keywords": "Class Shiire.ChumonList Namespace Convenience.Models.Properties Assembly Convenience.dll 仕入画面のキー入力の注文コード一覧用 public class Shiire.ChumonList Inheritance object Shiire.ChumonList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChumonList() public ChumonList() ChumonList(string, decimal) public ChumonList(string ChumonId, decimal ChumonZan) Parameters ChumonId string ChumonZan decimal Properties ChumonId public string ChumonId { get; set; } Property Value string ChumonZan public decimal ChumonZan { get; set; } Property Value decimal"
  },
  "api/Convenience.Models.Properties.Shiire.ShiireUkeireReturnSet.html": {
    "href": "api/Convenience.Models.Properties.Shiire.ShiireUkeireReturnSet.html",
    "title": "Class Shiire.ShiireUkeireReturnSet | Convenience",
    "keywords": "Class Shiire.ShiireUkeireReturnSet Namespace Convenience.Models.Properties Assembly Convenience.dll 注文残・倉庫在庫調整用モデル public class Shiire.ShiireUkeireReturnSet Inheritance object Shiire.ShiireUkeireReturnSet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShiireUkeireReturnSet() public ShiireUkeireReturnSet() Properties ShiireJissekis 仕入実績 Include注文実績 public IList<ShiireJisseki> ShiireJissekis { get; set; } Property Value IList<ShiireJisseki> SokoZaikos 倉庫在庫 public IList<SokoZaiko> SokoZaikos { get; set; } Property Value IList<SokoZaiko>"
  },
  "api/Convenience.Models.Properties.Shiire.html": {
    "href": "api/Convenience.Models.Properties.Shiire.html",
    "title": "Class Shiire | Convenience",
    "keywords": "Class Shiire Namespace Convenience.Models.Properties Assembly Convenience.dll 仕入クラス public class Shiire : IShiire, IDbContext, ISharedTools Inheritance object Shiire Implements IShiire IDbContext ISharedTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Shiire() 仕入クラスデバッグ用 public Shiire() Shiire(ConvenienceContext) コンストラクタ 通常の場合はＤＢコンテキストを引き継ぐ public Shiire(ConvenienceContext context) Parameters context ConvenienceContext ASPから引き継ぐDBコンテキスト Fields _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext _mapper AutoMapper用 private IMapper? _mapper Field Value IMapper Properties Shiirejissekis 仕入実績プロパティ Include ChuumonJissekiMeisai public IList<ShiireJisseki> Shiirejissekis { get; set; } Property Value IList<ShiireJisseki> SokoZaikos 倉庫在庫プロパティ public IList<SokoZaiko> SokoZaikos { get; set; } Property Value IList<SokoZaiko> Methods ChumonToShiireJisseki(string, DateOnly, uint) 仕入実績作成 public Task<IList<ShiireJisseki>> ChumonToShiireJisseki(string inChumonId, DateOnly inShiireDate, uint inSeqByShiireDate) Parameters inChumonId string 注文コード（注文実績問い合わせキー） inShiireDate DateOnly 仕入日付（仕入実績にセットされる） inSeqByShiireDate uint 仕入日付内のシーケンス（仕入実績にセットされる） Returns Task<IList<ShiireJisseki>> 注文実績から新規作成された仕入実績 ChuumonIdOnShiireJissekiExistingCheck(string, DateOnly, uint) public Task<bool> ChuumonIdOnShiireJissekiExistingCheck(string inChumonId, DateOnly inShiireDate, uint inSeqByShiireDate) Parameters inChumonId string inShiireDate DateOnly inSeqByShiireDate uint Returns Task<bool> ChuumonZanZaikoSuChousei(string, IList<ShiireJisseki>) 注文残・在庫数量調整 public Task<Shiire.ShiireUkeireReturnSet> ChuumonZanZaikoSuChousei(string inChumonId, IList<ShiireJisseki> inShiireJissekis) Parameters inChumonId string 注文コード inShiireJissekis IList<ShiireJisseki> 仕入実績（注文実績がインクルードされていること） Returns Task<Shiire.ShiireUkeireReturnSet> 注文残・倉庫在庫が調整された注文残・倉庫在庫調整用モデル NextSeq(string, DateOnly) 注文コード、仕入日を元に、次の仕入SEQを求める 仕入実績の主キーは注文コード、仕入日、仕入SEQなので、仕入日に数回仕入れる場合は、 仕入SEQをインクリメントして利用する public Task<uint> NextSeq(string inChumonId, DateOnly inShiireDate) Parameters inChumonId string 仕入実績検索キー：注文コード inShiireDate DateOnly 仕入実績検索キー：仕入日 Returns Task<uint> 次の仕入SEQ（次に仕入実績を登録する仕入SEQ） ShiireSokoConnection(IList<ShiireJisseki>, IEnumerable<SokoZaiko>) 倉庫在庫を仕入データに接続する（表示前に利用する） NotMappedは外部キーが使えないから、includeできないため public IList<ShiireJisseki> ShiireSokoConnection(IList<ShiireJisseki> inShiireJissekis, IEnumerable<SokoZaiko> inSokoZaiko) Parameters inShiireJissekis IList<ShiireJisseki> 仕入実績 inSokoZaiko IEnumerable<SokoZaiko> Returns IList<ShiireJisseki> ShiireToShiireJisseki(string, DateOnly, uint) 仕入実績から仕入実績プロパティに反映 public Task<IList<ShiireJisseki>> ShiireToShiireJisseki(string inChumonId, DateOnly inShiireDate, uint inSeqByShiireDate) Parameters inChumonId string 注文コード inShiireDate DateOnly 仕入日付 inSeqByShiireDate uint 仕入SEQ Returns Task<IList<ShiireJisseki>> ShiireUpdate(IList<ShiireJisseki>) 仕入データPost内容の反映 public IList<ShiireJisseki> ShiireUpdate(IList<ShiireJisseki> inShiireJissekis) Parameters inShiireJissekis IList<ShiireJisseki> Postされた仕入実績 Returns IList<ShiireJisseki> Postされた注仕入実績がオーバライドされた仕入実績プロパティ ZaikoSet(IEnumerable<ShiireJisseki>) 倉庫在庫登録 private Task<IList<SokoZaiko>> ZaikoSet(IEnumerable<ShiireJisseki> shiireJissekis) Parameters shiireJissekis IEnumerable<ShiireJisseki> Postされたデータでオーバーライドされた仕入実績 Returns Task<IList<SokoZaiko>> 仕入実績から仕入差を使って在庫数を調整された倉庫在庫 ZanAriChumonList() 注文残がある注文のリスト化 public Task<IList<Shiire.ChumonList>> ZanAriChumonList() Returns Task<IList<Shiire.ChumonList>> 注文残のある注文コード一覧"
  },
  "api/Convenience.Models.Properties.ShiireConvChumonJissekiToShiireJissekiAutoMapperProfile.html": {
    "href": "api/Convenience.Models.Properties.ShiireConvChumonJissekiToShiireJissekiAutoMapperProfile.html",
    "title": "Class ShiireConvChumonJissekiToShiireJissekiAutoMapperProfile | Convenience",
    "keywords": "Class ShiireConvChumonJissekiToShiireJissekiAutoMapperProfile Namespace Convenience.Models.Properties Assembly Convenience.dll public class ShiireConvChumonJissekiToShiireJissekiAutoMapperProfile : Profile, IProfileExpression, IProfileConfiguration Inheritance object Profile ShiireConvChumonJissekiToShiireJissekiAutoMapperProfile Implements IProfileExpression IProfileConfiguration Inherited Members Profile.DisableConstructorMapping() Profile.CreateProjection<TSource, TDestination>() Profile.CreateProjection<TSource, TDestination>(MemberList) Profile.CreateMap<TSource, TDestination>() Profile.CreateMap<TSource, TDestination>(MemberList) Profile.CreateMap(Type, Type) Profile.CreateMap(Type, Type, MemberList) Profile.ClearPrefixes() Profile.ReplaceMemberName(string, string) Profile.RecognizePrefixes(params string[]) Profile.RecognizePostfixes(params string[]) Profile.RecognizeDestinationPrefixes(params string[]) Profile.RecognizeDestinationPostfixes(params string[]) Profile.AddGlobalIgnore(string) Profile.IncludeSourceExtensionMethods(Type) Profile.IProfileConfiguration.ConstructorMappingEnabled Profile.IProfileConfiguration.MethodMappingEnabled Profile.IProfileConfiguration.FieldMappingEnabled Profile.IProfileConfiguration.EnableNullPropagationForQueryMapping Profile.IProfileConfiguration.AllPropertyMapActions Profile.IProfileConfiguration.AllTypeMapActions Profile.IProfileConfiguration.GlobalIgnores Profile.IProfileConfiguration.SourceExtensionMethods Profile.IProfileConfiguration.TypeMapConfigs Profile.IProfileConfiguration.OpenTypeMapConfigs Profile.IProfileConfiguration.ValueTransformers Profile.ProfileName Profile.AllowNullDestinationValues Profile.AllowNullCollections Profile.ShouldMapProperty Profile.ShouldMapField Profile.ShouldMapMethod Profile.ShouldUseConstructor Profile.SourceMemberNamingConvention Profile.DestinationMemberNamingConvention Profile.ValueTransformers object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShiireConvChumonJissekiToShiireJissekiAutoMapperProfile() public ShiireConvChumonJissekiToShiireJissekiAutoMapperProfile()"
  },
  "api/Convenience.Models.Properties.ShiireJissekiPostdataToShiireJissekiViewModel.html": {
    "href": "api/Convenience.Models.Properties.ShiireJissekiPostdataToShiireJissekiViewModel.html",
    "title": "Class ShiireJissekiPostdataToShiireJissekiViewModel | Convenience",
    "keywords": "Class ShiireJissekiPostdataToShiireJissekiViewModel Namespace Convenience.Models.Properties Assembly Convenience.dll public class ShiireJissekiPostdataToShiireJissekiViewModel : Profile, IProfileExpression, IProfileConfiguration Inheritance object Profile ShiireJissekiPostdataToShiireJissekiViewModel Implements IProfileExpression IProfileConfiguration Inherited Members Profile.DisableConstructorMapping() Profile.CreateProjection<TSource, TDestination>() Profile.CreateProjection<TSource, TDestination>(MemberList) Profile.CreateMap<TSource, TDestination>() Profile.CreateMap<TSource, TDestination>(MemberList) Profile.CreateMap(Type, Type) Profile.CreateMap(Type, Type, MemberList) Profile.ClearPrefixes() Profile.ReplaceMemberName(string, string) Profile.RecognizePrefixes(params string[]) Profile.RecognizePostfixes(params string[]) Profile.RecognizeDestinationPrefixes(params string[]) Profile.RecognizeDestinationPostfixes(params string[]) Profile.AddGlobalIgnore(string) Profile.IncludeSourceExtensionMethods(Type) Profile.IProfileConfiguration.ConstructorMappingEnabled Profile.IProfileConfiguration.MethodMappingEnabled Profile.IProfileConfiguration.FieldMappingEnabled Profile.IProfileConfiguration.EnableNullPropagationForQueryMapping Profile.IProfileConfiguration.AllPropertyMapActions Profile.IProfileConfiguration.AllTypeMapActions Profile.IProfileConfiguration.GlobalIgnores Profile.IProfileConfiguration.SourceExtensionMethods Profile.IProfileConfiguration.TypeMapConfigs Profile.IProfileConfiguration.OpenTypeMapConfigs Profile.IProfileConfiguration.ValueTransformers Profile.ProfileName Profile.AllowNullDestinationValues Profile.AllowNullCollections Profile.ShouldMapProperty Profile.ShouldMapField Profile.ShouldMapMethod Profile.ShouldUseConstructor Profile.SourceMemberNamingConvention Profile.DestinationMemberNamingConvention Profile.ValueTransformers object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShiireJissekiPostdataToShiireJissekiViewModel() public ShiireJissekiPostdataToShiireJissekiViewModel()"
  },
  "api/Convenience.Models.Properties.ShiirePostToDTOAutoMapperProfile.html": {
    "href": "api/Convenience.Models.Properties.ShiirePostToDTOAutoMapperProfile.html",
    "title": "Class ShiirePostToDTOAutoMapperProfile | Convenience",
    "keywords": "Class ShiirePostToDTOAutoMapperProfile Namespace Convenience.Models.Properties Assembly Convenience.dll public class ShiirePostToDTOAutoMapperProfile : Profile, IProfileExpression, IProfileConfiguration Inheritance object Profile ShiirePostToDTOAutoMapperProfile Implements IProfileExpression IProfileConfiguration Inherited Members Profile.DisableConstructorMapping() Profile.CreateProjection<TSource, TDestination>() Profile.CreateProjection<TSource, TDestination>(MemberList) Profile.CreateMap<TSource, TDestination>() Profile.CreateMap<TSource, TDestination>(MemberList) Profile.CreateMap(Type, Type) Profile.CreateMap(Type, Type, MemberList) Profile.ClearPrefixes() Profile.ReplaceMemberName(string, string) Profile.RecognizePrefixes(params string[]) Profile.RecognizePostfixes(params string[]) Profile.RecognizeDestinationPrefixes(params string[]) Profile.RecognizeDestinationPostfixes(params string[]) Profile.AddGlobalIgnore(string) Profile.IncludeSourceExtensionMethods(Type) Profile.IProfileConfiguration.ConstructorMappingEnabled Profile.IProfileConfiguration.MethodMappingEnabled Profile.IProfileConfiguration.FieldMappingEnabled Profile.IProfileConfiguration.EnableNullPropagationForQueryMapping Profile.IProfileConfiguration.AllPropertyMapActions Profile.IProfileConfiguration.AllTypeMapActions Profile.IProfileConfiguration.GlobalIgnores Profile.IProfileConfiguration.SourceExtensionMethods Profile.IProfileConfiguration.TypeMapConfigs Profile.IProfileConfiguration.OpenTypeMapConfigs Profile.IProfileConfiguration.ValueTransformers Profile.ProfileName Profile.AllowNullDestinationValues Profile.AllowNullCollections Profile.ShouldMapProperty Profile.ShouldMapField Profile.ShouldMapMethod Profile.ShouldUseConstructor Profile.SourceMemberNamingConvention Profile.DestinationMemberNamingConvention Profile.ValueTransformers object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShiirePostToDTOAutoMapperProfile(ConvenienceContext) public ShiirePostToDTOAutoMapperProfile(ConvenienceContext _context) Parameters _context ConvenienceContext"
  },
  "api/Convenience.Models.Properties.TentoHaraidashi.html": {
    "href": "api/Convenience.Models.Properties.TentoHaraidashi.html",
    "title": "Class TentoHaraidashi | Convenience",
    "keywords": "Class TentoHaraidashi Namespace Convenience.Models.Properties Assembly Convenience.dll 店頭払出クラス public class TentoHaraidashi : ITentoHaraidashi, ISharedTools Inheritance object TentoHaraidashi Implements ITentoHaraidashi ISharedTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TentoHaraidashi(ConvenienceContext) コンストラクタ public TentoHaraidashi(ConvenienceContext context) Parameters context ConvenienceContext Fields _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext Properties TentoHaraidashiHeader プロパティ 店頭払出ヘッダー public TentoHaraidashiHeader? TentoHaraidashiHeader { get; set; } Property Value TentoHaraidashiHeader Methods TentoHaraidashiHatsuban(DateTime) 店頭払出コード発番 private string TentoHaraidashiHatsuban(DateTime argCurrentDateTime) Parameters argCurrentDateTime DateTime 店頭払出日時 Returns string 店頭払出コード(yyyyMMdd-HH-001～999、HHは店頭払出日時の時間部分 TentoHaraidashiHeaderList(Expression<Func<TentoHaraidashiHeader, bool>>) public IQueryable<TentoHaraidashiHeader> TentoHaraidashiHeaderList(Expression<Func<TentoHaraidashiHeader, bool>> whereExpression) Parameters whereExpression Expression<Func<TentoHaraidashiHeader, bool>> Returns IQueryable<TentoHaraidashiHeader> TentoHaraidashiSakusei(DateTime) 倉庫在庫から店頭払出実績（ヘッダー＋実績）を作成する ①店頭払出ヘッダーを作成する ②倉庫在庫より、店頭払出実績（ヘッダー＋実績）を作成する ③データ表示用に＋倉庫在庫＋仕入マスタもリンク接続する 4️⃣店頭在庫をリンク接続する public Task<TentoHaraidashiHeader> TentoHaraidashiSakusei(DateTime argCurrentDateTime) Parameters argCurrentDateTime DateTime Returns Task<TentoHaraidashiHeader> TentoHaraidashiHeader 店頭払出ヘッダー＋店頭払出実績 TentoHaraidashiToiawase(string) 店頭払出問い合わせ ①店頭払出ヘッダー＋実績を問い合わせる ②実績に倉庫在庫をくっつける ②実績に仕入マスタ＋商品マスタをくっつける ③実績に店頭在庫をくっつける public Task<TentoHaraidashiHeader?> TentoHaraidashiToiawase(string argTentoHaraidashiId) Parameters argTentoHaraidashiId string 店頭払出コード Returns Task<TentoHaraidashiHeader> TentoHaraidashiHeader 店頭払出ヘッダ TentoHaraidashiUpdate(IEnumerable<TentoHaraidashiJisseki>) public IList<TentoHaraidashiJisseki> TentoHaraidashiUpdate(IEnumerable<TentoHaraidashiJisseki> argTentoHaraidashiJissekis) Parameters argTentoHaraidashiJissekis IEnumerable<TentoHaraidashiJisseki> Returns IList<TentoHaraidashiJisseki>"
  },
  "api/Convenience.Models.Properties.TentoHaraidashiPostToDTOAutoMapperProfile.html": {
    "href": "api/Convenience.Models.Properties.TentoHaraidashiPostToDTOAutoMapperProfile.html",
    "title": "Class TentoHaraidashiPostToDTOAutoMapperProfile | Convenience",
    "keywords": "Class TentoHaraidashiPostToDTOAutoMapperProfile Namespace Convenience.Models.Properties Assembly Convenience.dll public class TentoHaraidashiPostToDTOAutoMapperProfile : Profile, IProfileExpression, IProfileConfiguration Inheritance object Profile TentoHaraidashiPostToDTOAutoMapperProfile Implements IProfileExpression IProfileConfiguration Inherited Members Profile.DisableConstructorMapping() Profile.CreateProjection<TSource, TDestination>() Profile.CreateProjection<TSource, TDestination>(MemberList) Profile.CreateMap<TSource, TDestination>() Profile.CreateMap<TSource, TDestination>(MemberList) Profile.CreateMap(Type, Type) Profile.CreateMap(Type, Type, MemberList) Profile.ClearPrefixes() Profile.ReplaceMemberName(string, string) Profile.RecognizePrefixes(params string[]) Profile.RecognizePostfixes(params string[]) Profile.RecognizeDestinationPrefixes(params string[]) Profile.RecognizeDestinationPostfixes(params string[]) Profile.AddGlobalIgnore(string) Profile.IncludeSourceExtensionMethods(Type) Profile.IProfileConfiguration.ConstructorMappingEnabled Profile.IProfileConfiguration.MethodMappingEnabled Profile.IProfileConfiguration.FieldMappingEnabled Profile.IProfileConfiguration.EnableNullPropagationForQueryMapping Profile.IProfileConfiguration.AllPropertyMapActions Profile.IProfileConfiguration.AllTypeMapActions Profile.IProfileConfiguration.GlobalIgnores Profile.IProfileConfiguration.SourceExtensionMethods Profile.IProfileConfiguration.TypeMapConfigs Profile.IProfileConfiguration.OpenTypeMapConfigs Profile.IProfileConfiguration.ValueTransformers Profile.ProfileName Profile.AllowNullDestinationValues Profile.AllowNullCollections Profile.ShouldMapProperty Profile.ShouldMapField Profile.ShouldMapMethod Profile.ShouldUseConstructor Profile.SourceMemberNamingConvention Profile.DestinationMemberNamingConvention Profile.ValueTransformers object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TentoHaraidashiPostToDTOAutoMapperProfile() public TentoHaraidashiPostToDTOAutoMapperProfile()"
  },
  "api/Convenience.Models.Properties.TentoZaikoPostdataToTentoZaikoViewModel.html": {
    "href": "api/Convenience.Models.Properties.TentoZaikoPostdataToTentoZaikoViewModel.html",
    "title": "Class TentoZaikoPostdataToTentoZaikoViewModel | Convenience",
    "keywords": "Class TentoZaikoPostdataToTentoZaikoViewModel Namespace Convenience.Models.Properties Assembly Convenience.dll public class TentoZaikoPostdataToTentoZaikoViewModel : Profile, IProfileExpression, IProfileConfiguration Inheritance object Profile TentoZaikoPostdataToTentoZaikoViewModel Implements IProfileExpression IProfileConfiguration Inherited Members Profile.DisableConstructorMapping() Profile.CreateProjection<TSource, TDestination>() Profile.CreateProjection<TSource, TDestination>(MemberList) Profile.CreateMap<TSource, TDestination>() Profile.CreateMap<TSource, TDestination>(MemberList) Profile.CreateMap(Type, Type) Profile.CreateMap(Type, Type, MemberList) Profile.ClearPrefixes() Profile.ReplaceMemberName(string, string) Profile.RecognizePrefixes(params string[]) Profile.RecognizePostfixes(params string[]) Profile.RecognizeDestinationPrefixes(params string[]) Profile.RecognizeDestinationPostfixes(params string[]) Profile.AddGlobalIgnore(string) Profile.IncludeSourceExtensionMethods(Type) Profile.IProfileConfiguration.ConstructorMappingEnabled Profile.IProfileConfiguration.MethodMappingEnabled Profile.IProfileConfiguration.FieldMappingEnabled Profile.IProfileConfiguration.EnableNullPropagationForQueryMapping Profile.IProfileConfiguration.AllPropertyMapActions Profile.IProfileConfiguration.AllTypeMapActions Profile.IProfileConfiguration.GlobalIgnores Profile.IProfileConfiguration.SourceExtensionMethods Profile.IProfileConfiguration.TypeMapConfigs Profile.IProfileConfiguration.OpenTypeMapConfigs Profile.IProfileConfiguration.ValueTransformers Profile.ProfileName Profile.AllowNullDestinationValues Profile.AllowNullCollections Profile.ShouldMapProperty Profile.ShouldMapField Profile.ShouldMapMethod Profile.ShouldUseConstructor Profile.SourceMemberNamingConvention Profile.DestinationMemberNamingConvention Profile.ValueTransformers object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TentoZaikoPostdataToTentoZaikoViewModel() public TentoZaikoPostdataToTentoZaikoViewModel()"
  },
  "api/Convenience.Models.Properties.Zaiko.html": {
    "href": "api/Convenience.Models.Properties.Zaiko.html",
    "title": "Class Zaiko | Convenience",
    "keywords": "Class Zaiko Namespace Convenience.Models.Properties Assembly Convenience.dll 注文実績明細検索＆倉庫在庫（遅延実行） public class Zaiko : IZaiko Inheritance object Zaiko Implements IZaiko Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Zaiko() コンストラクター（コンソール実行＝デバッグ用） public Zaiko() Zaiko(ConvenienceContext) ＤＢコンテキスト設定（ＡＳＰ実行用） public Zaiko(ConvenienceContext context) Parameters context ConvenienceContext Fields _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext isFirstCalled OrderByかThenByか切り替えるフラグ private bool isFirstCalled Field Value bool Properties SoKoZaikoQueryable 生成される問い合わせ（遅延実行用） public IQueryable<ZaikoViewModel.ZaikoListLine>? SoKoZaikoQueryable { get; set; } Property Value IQueryable<ZaikoViewModel.ZaikoListLine> Methods AddOrderby(string, bool) 機能：注文実績明細検索＆倉庫在庫（遅延実行）＋Where内容の状態から、ソート順の追加セットを行う public IQueryable<ZaikoViewModel.ZaikoListLine>? AddOrderby(string sortKey, bool descending) Parameters sortKey string ソートキー descending bool 降順・昇順区分 Returns IQueryable<ZaikoViewModel.ZaikoListLine> 倉庫在庫 ＆ 注文実績明細(変数:SoKoZaikoQueryable) ソート指示付き ISoKoZaikoQueryable型にして遅延実行化 CreateSokoZaikoList(string) 注文実績明細検索＆倉庫在庫（遅延実行） public IQueryable<ZaikoViewModel.ZaikoListLine> CreateSokoZaikoList(string inSearchKey) Parameters inSearchKey string 検索キー Returns IQueryable<ZaikoViewModel.ZaikoListLine> 倉庫在庫 ＆ 注文実績明細(変数:SoKoZaikoQueryable) Where指示付き ISoKoZaikoQueryable型にして遅延実行化"
  },
  "api/Convenience.Models.Properties.html": {
    "href": "api/Convenience.Models.Properties.html",
    "title": "Namespace Convenience.Models.Properties | Convenience",
    "keywords": "Namespace Convenience.Models.Properties Classes AutoMapperSharedProfile CSVMapping CSVMapping.ChumonJissekiCSV CSVMapping.KaikeiJissekiCSV CSVMapping.ShiireJissekiCSV CSVMapping.SokoZaikoCSV CSVMapping.TentoZaIkoCSV Chumon 注文クラス ChumonChumonJissekiToDTOAutoMapperProfile ChumonCreateChumonJissekiToDTOAutoMapperProfile ChumonJissekiPostdataToChumonJissekiViewModel ChumonJissekiSetupException 注文クラスのセッティングエラー ConvertObjectToCsv CSVファイルを作る DataCountMismatchException ０件データ DataPositionMismatchException データ上乗せ時のindex位置エラー Kaikei 店頭払出クラス KaikeiAddLineToTempDataAutoMapperProfile KaikeiJissekiPostdataToKaikeiJissekiViewModel KaikeiPostToDTOAutoMapperProfile AutoMapper用プロファイル Message 正常・エラーメッセージ用クラス Message.MessageData メッセ―ジ表示用データクラス NoDataFoundException エンティティからのデータがなかったとき OrderCodeGenerationException 注文コード発番時のエラー PostDataInValidException ポストデータチェックエラー Shiire 仕入クラス Shiire.ChumonList 仕入画面のキー入力の注文コード一覧用 Shiire.ShiireUkeireReturnSet 注文残・倉庫在庫調整用モデル ShiireConvChumonJissekiToShiireJissekiAutoMapperProfile ShiireJissekiPostdataToShiireJissekiViewModel ShiirePostToDTOAutoMapperProfile TentoHaraidashi 店頭払出クラス TentoHaraidashiPostToDTOAutoMapperProfile TentoZaikoPostdataToTentoZaikoViewModel Zaiko 注文実績明細検索＆倉庫在庫（遅延実行） Enums Message.ErrDef エラーコードenum設定（0から付与） Delegates Chumon.DelegateOverrideProc"
  },
  "api/Convenience.Models.Services.ChumonJissekiService.html": {
    "href": "api/Convenience.Models.Services.ChumonJissekiService.html",
    "title": "Class ChumonJissekiService | Convenience",
    "keywords": "Class ChumonJissekiService Namespace Convenience.Models.Services Assembly Convenience.dll 注文実績検索サービス public class ChumonJissekiService : IChumonJissekiService, IRetrivalService, ITotalSummaryRetrival, ISharedTools Inheritance object ChumonJissekiService Implements IChumonJissekiService IRetrivalService ITotalSummaryRetrival ISharedTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChumonJissekiService(ConvenienceContext) コンストラクタ public ChumonJissekiService(ConvenienceContext context) Parameters context ConvenienceContext ＤＢコンテキストＤＩ Fields _context DBコンテクスト private readonly ConvenienceContext _context Field Value ConvenienceContext Methods ChumonJissekiRetrival(ChumonJissekiViewModel) 注文実績検索 public Task<ChumonJissekiViewModel> ChumonJissekiRetrival(ChumonJissekiViewModel argChumonJissekiViewModel) Parameters argChumonJissekiViewModel ChumonJissekiViewModel 注文実績検索ビューモデル Returns Task<ChumonJissekiViewModel> 注文実績ビューモデル（検索内容含む） WhereLambda1<T>(string, string, string) 注文実績明細に対する条件ラムダ式 public Expression<Func<T, bool>>? WhereLambda1<T>(string leftSide, string comparison, string rightSide) Parameters leftSide string 左辺 comparison string 比較演算子 rightSide string 右辺 Returns Expression<Func<T, bool>> ラムダ式 Type Parameters T WhereLambda2<T>(string, string, string) public Expression<Func<T, bool>>? WhereLambda2<T>(string leftSide, string comparison, string rightSide) Parameters leftSide string comparison string rightSide string Returns Expression<Func<T, bool>> Type Parameters T"
  },
  "api/Convenience.Models.Services.ChumonService.html": {
    "href": "api/Convenience.Models.Services.ChumonService.html",
    "title": "Class ChumonService | Convenience",
    "keywords": "Class ChumonService Namespace Convenience.Models.Services Assembly Convenience.dll 注文サービスクラス public class ChumonService : IChumonService, IDbContext Inheritance object ChumonService Implements IChumonService IDbContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChumonService() デバッグ用 public ChumonService() ChumonService(ConvenienceContext, IChumon) コンストラクター 通常用 public ChumonService(ConvenienceContext context, IChumon chumon) Parameters context ConvenienceContext DBコンテキスト chumon IChumon 注文クラスＤＩ注入用 Fields CreateChumonInstance コンストラクタ 注文オブジェクト用記述 private readonly Func<ConvenienceContext, IChumon> CreateChumonInstance Field Value Func<ConvenienceContext, IChumon> _context DBコンテクスト private readonly ConvenienceContext _context Field Value ConvenienceContext Properties ChumonKeysViewModel 注文キービューモデル（１枚目の画面用） public ChumonKeysViewModel ChumonKeysViewModel { get; set; } Property Value ChumonKeysViewModel ChumonViewModel 注文明細ビューモデル（２枚目の画面用） public ChumonViewModel ChumonViewModel { get; set; } Property Value ChumonViewModel chumon 注文オブジェクト用 public IChumon chumon { get; set; } Property Value IChumon Methods ChumonCommit(ChumonViewModel) 注文データをDBに書き込む public Task<ChumonViewModel> ChumonCommit(ChumonViewModel inChumonViewModel) Parameters inChumonViewModel ChumonViewModel Returns Task<ChumonViewModel> ChumonViewModel 注文明細ビューモデル Exceptions Exception 排他制御の例外が起きたらスローする ChumonJissekiIsValid(ChumonJisseki) Postされた注文実績のデータチェック private static (bool, Message.ErrDef) ChumonJissekiIsValid(ChumonJisseki inChumonJisseki) Parameters inChumonJisseki ChumonJisseki postされた注文実績 Returns (bool, Message.ErrDef) 正常=true、異常=false、エラーコード ChumonRegex() [GeneratedRegex(\"^[0-9]{8}-[0-9]{3}$\")] private static Regex ChumonRegex() Returns Regex Remarks Pattern explanation: ○ Match if at the beginning of the string. ○ Match '0' through '9' exactly 8 times. ○ Match '-'. ○ Match '0' through '9' exactly 3 times. ○ Match if at the end of the string or if before an ending newline. ChumonSetting(ChumonKeysViewModel) 注文セッティング public Task<ChumonViewModel> ChumonSetting(ChumonKeysViewModel inChumonKeysViewModel) Parameters inChumonKeysViewModel ChumonKeysViewModel 注文キー入力画面仕入先コード（画面より） Returns Task<ChumonViewModel> 注文明細ビューモデル SetChumonKeysViewModel() 注文キービューモデル初期設定 public Task<ChumonKeysViewModel> SetChumonKeysViewModel() Returns Task<ChumonKeysViewModel> ChumonKeysViewModel 注文キービューモデル"
  },
  "api/Convenience.Models.Services.KaikeiJissekiService.html": {
    "href": "api/Convenience.Models.Services.KaikeiJissekiService.html",
    "title": "Class KaikeiJissekiService | Convenience",
    "keywords": "Class KaikeiJissekiService Namespace Convenience.Models.Services Assembly Convenience.dll 会計実績検索サービス public class KaikeiJissekiService : IKaikeiJissekiService, IRetrivalService, ITotalSummaryRetrival, ISharedTools Inheritance object KaikeiJissekiService Implements IKaikeiJissekiService IRetrivalService ITotalSummaryRetrival ISharedTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KaikeiJissekiService(ConvenienceContext) コンストラクタ public KaikeiJissekiService(ConvenienceContext context) Parameters context ConvenienceContext ＤＢコンテキストＤＩ Fields _context DBコンテクスト private readonly ConvenienceContext _context Field Value ConvenienceContext Methods KaikeiJissekiRetrival(KaikeiJissekiViewModel) 会計実績検索 public Task<KaikeiJissekiViewModel> KaikeiJissekiRetrival(KaikeiJissekiViewModel argKaikeiJissekiViewModel) Parameters argKaikeiJissekiViewModel KaikeiJissekiViewModel 会計実績検索ビューモデル Returns Task<KaikeiJissekiViewModel> 会計実績ビューモデル（検索内容含む） WhereLambda1<T>(string, string, string) 注文実績明細に対する条件ラムダ式 public Expression<Func<T, bool>>? WhereLambda1<T>(string leftSide, string comparison, string rightSide) Parameters leftSide string 左辺 comparison string 比較演算子 rightSide string 右辺 Returns Expression<Func<T, bool>> ラムダ式 Type Parameters T WhereLambda2<T>(string, string, string) public Expression<Func<T, bool>>? WhereLambda2<T>(string leftSide, string comparison, string rightSide) Parameters leftSide string comparison string rightSide string Returns Expression<Func<T, bool>> Type Parameters T"
  },
  "api/Convenience.Models.Services.KaikeiService.html": {
    "href": "api/Convenience.Models.Services.KaikeiService.html",
    "title": "Class KaikeiService | Convenience",
    "keywords": "Class KaikeiService Namespace Convenience.Models.Services Assembly Convenience.dll 会計サービスクラス public class KaikeiService : IKaikeiService Inheritance object KaikeiService Implements IKaikeiService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KaikeiService(ConvenienceContext, IKaikei, ITempDataDictionaryFactory, IActionContextAccessor) コンストラクタ public KaikeiService(ConvenienceContext context, IKaikei kaikei, ITempDataDictionaryFactory tempDataFactory, IActionContextAccessor actionContextAccessor) Parameters context ConvenienceContext kaikei IKaikei tempDataFactory ITempDataDictionaryFactory actionContextAccessor IActionContextAccessor Remarks DBコンテキスト 会計クラスのＤＩ コントローラ以外でtempdata扱いが出来ようにするＤＩ（２つ） Fields _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext _tempData TempData用 private readonly ITempDataDictionary _tempData Field Value ITempDataDictionary tempDataIndex private const string tempDataIndex = \"KaikeiService\" Field Value string Properties Kaikei 会計クラス用 private IKaikei Kaikei { get; set; } Property Value IKaikei KaikeiViewModel 会計ビュー・モデル（プロパティ） public KaikeiViewModel KaikeiViewModel { get; set; } Property Value KaikeiViewModel Methods GetShohinName(string) 商品名称を返す public Task<string> GetShohinName(string argShohinId) Parameters argShohinId string 商品コード Returns Task<string> string 商品名称 Remarks 画面からajaxで、商品コードを投げてくるから、商品名称を返す GetViewModelToTempData() tempデータからビューモデルへ復帰 private KaikeiViewModel GetViewModelToTempData() Returns KaikeiViewModel KaikeiAdd(KaikeiViewModel) 会計Add public Task<KaikeiViewModel> KaikeiAdd(KaikeiViewModel argKaikeiViewModel) Parameters argKaikeiViewModel KaikeiViewModel 会計ビューモデル Returns Task<KaikeiViewModel> KaikeiViewModel 会計ビューモデル KaikeiCommit(KaikeiViewModel) 会計Commit public Task<KaikeiViewModel> KaikeiCommit(KaikeiViewModel argKaikeiViewModel) Parameters argKaikeiViewModel KaikeiViewModel 会計ビューモデル Returns Task<KaikeiViewModel> KaikeiViewModel 会計ビューモデル KaikeiSetting(KaikeiViewModel) 会計セッティング public Task<KaikeiViewModel> KaikeiSetting(KaikeiViewModel argKaikeiViewModel) Parameters argKaikeiViewModel KaikeiViewModel 会計ビューモデル Returns Task<KaikeiViewModel> KaikeiViewModel 会計ビューモデル SetKaikeiViewModel() 会計ビューモデル設定（初期画面用） public Task<KaikeiViewModel> SetKaikeiViewModel() Returns Task<KaikeiViewModel> KaikeiViewModel 会計ビューモデル SetKeyInputList(UriageDateTimeAndIdMatching) private static IList<SelectListItem> SetKeyInputList(UriageDateTimeAndIdMatching argUriageDateTimeAndIdMatching) Parameters argUriageDateTimeAndIdMatching UriageDateTimeAndIdMatching Returns IList<SelectListItem> SetKeyInputList(int, DateTime) private Task<IList<SelectListItem>> SetKeyInputList(int argDaysAgo, DateTime argCurrentDateTime) Parameters argDaysAgo int argCurrentDateTime DateTime Returns Task<IList<SelectListItem>> SetSelectListItem(IList<UriageDateTimeAndIdMatching>) private static IList<SelectListItem> SetSelectListItem(IList<UriageDateTimeAndIdMatching> argUriageDateTimeAndIdMatchings) Parameters argUriageDateTimeAndIdMatchings IList<UriageDateTimeAndIdMatching> Returns IList<SelectListItem> SetViewModelToTempData(KaikeiViewModel) ビューモデルをtempデータに退避 private void SetViewModelToTempData(KaikeiViewModel argKaikeiViewModel) Parameters argKaikeiViewModel KaikeiViewModel ビューモデル"
  },
  "api/Convenience.Models.Services.NaigaiClassMasterService.PostMasterData.html": {
    "href": "api/Convenience.Models.Services.NaigaiClassMasterService.PostMasterData.html",
    "title": "Class NaigaiClassMasterService.PostMasterData | Convenience",
    "keywords": "Class NaigaiClassMasterService.PostMasterData Namespace Convenience.Models.Services Assembly Convenience.dll Postデータ用クラス public class NaigaiClassMasterService.PostMasterData : NaigaiClassMaster, IPostMasterData, IDeleteFlag Inheritance object NaigaiClassMaster NaigaiClassMasterService.PostMasterData Implements IPostMasterData IDeleteFlag Inherited Members NaigaiClassMaster.NaigaiClass NaigaiClassMaster.NaigaiClassName NaigaiClassMaster.KaikeiJissekis object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DeleteFlag 削除フラグ public bool DeleteFlag { get; set; } Property Value bool"
  },
  "api/Convenience.Models.Services.NaigaiClassMasterService.html": {
    "href": "api/Convenience.Models.Services.NaigaiClassMasterService.html",
    "title": "Class NaigaiClassMasterService | Convenience",
    "keywords": "Class NaigaiClassMasterService Namespace Convenience.Models.Services Assembly Convenience.dll 内外区分マスタのサービスクラス public class NaigaiClassMasterService : INaigaiClassMasterService, IMasterRegistrationService<NaigaiClassMaster, NaigaiClassMasterService.PostMasterData, NaigaiClassMasterViewModel>, ISharedTools Inheritance object NaigaiClassMasterService Implements INaigaiClassMasterService IMasterRegistrationService<NaigaiClassMaster, NaigaiClassMasterService.PostMasterData, NaigaiClassMasterViewModel> ISharedTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NaigaiClassMasterService(ConvenienceContext) コンストラクタ public NaigaiClassMasterService(ConvenienceContext context) Parameters context ConvenienceContext データベースコンテキスト Fields my private readonly INaigaiClassMasterService my Field Value INaigaiClassMasterService Properties KeepMasterDatas 現在保持しているマスタデータ public IList<NaigaiClassMaster> KeepMasterDatas { get; set; } Property Value IList<NaigaiClassMaster> MasterRegisiationViewModel ビューモデル public IMasterRegistrationViewModel<NaigaiClassMasterService.PostMasterData> MasterRegisiationViewModel { get; set; } Property Value IMasterRegistrationViewModel<NaigaiClassMasterService.PostMasterData> PostedMasterDatas Postされたマスタデータ public IList<NaigaiClassMasterService.PostMasterData> PostedMasterDatas { get; set; } Property Value IList<NaigaiClassMasterService.PostMasterData> _context データベースコンテキスト public ConvenienceContext _context { get; set; } Property Value ConvenienceContext Methods InsertRow(IList<PostMasterData>, int) 新しい行を挿入 public IList<NaigaiClassMasterService.PostMasterData> InsertRow(IList<NaigaiClassMasterService.PostMasterData> PostMasterDatas, int index) Parameters PostMasterDatas IList<NaigaiClassMasterService.PostMasterData> index int Returns IList<NaigaiClassMasterService.PostMasterData> MakeViewModel() ビューモデルを作成 public Task<NaigaiClassMasterViewModel> MakeViewModel() Returns Task<NaigaiClassMasterViewModel> MapFromKeepMasterDataToPostData(IList<NaigaiClassMaster>) 保持データをPostデータにマッピング public IList<NaigaiClassMasterService.PostMasterData> MapFromKeepMasterDataToPostData(IList<NaigaiClassMaster> argDatas) Parameters argDatas IList<NaigaiClassMaster> Returns IList<NaigaiClassMasterService.PostMasterData> MapFromPostDataToKeepMasterData(IList<PostMasterData>) Postデータを保持データにマッピング public IList<NaigaiClassMaster> MapFromPostDataToKeepMasterData(IList<NaigaiClassMasterService.PostMasterData> argDatas) Parameters argDatas IList<NaigaiClassMasterService.PostMasterData> Postデータリスト Returns IList<NaigaiClassMaster> 保持データリスト QueryMasterData() データベースからマスタデータを取得 public Task<IList<NaigaiClassMaster>> QueryMasterData() Returns Task<IList<NaigaiClassMaster>> UpdateMasterData(NaigaiClassMasterViewModel) ビューモデルを基にマスタデータを更新 public Task<NaigaiClassMasterViewModel> UpdateMasterData(NaigaiClassMasterViewModel argMasterRegistrationViewModel) Parameters argMasterRegistrationViewModel NaigaiClassMasterViewModel Returns Task<NaigaiClassMasterViewModel>"
  },
  "api/Convenience.Models.Services.ShiireJissekiService.html": {
    "href": "api/Convenience.Models.Services.ShiireJissekiService.html",
    "title": "Class ShiireJissekiService | Convenience",
    "keywords": "Class ShiireJissekiService Namespace Convenience.Models.Services Assembly Convenience.dll 仕入実績検索サービス public class ShiireJissekiService : IShiireJissekiService, IRetrivalService, ITotalSummaryRetrival, ISharedTools Inheritance object ShiireJissekiService Implements IShiireJissekiService IRetrivalService ITotalSummaryRetrival ISharedTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShiireJissekiService(ConvenienceContext) コンストラクタ public ShiireJissekiService(ConvenienceContext context) Parameters context ConvenienceContext ＤＢコンテキストＤＩ Fields _context DBコンテクスト private readonly ConvenienceContext _context Field Value ConvenienceContext Methods ShiireJissekiRetrival(ShiireJissekiViewModel) 仕入実績検索 public Task<ShiireJissekiViewModel> ShiireJissekiRetrival(ShiireJissekiViewModel argShiireJissekiViewModel) Parameters argShiireJissekiViewModel ShiireJissekiViewModel 仕入実績検索ビューモデル Returns Task<ShiireJissekiViewModel> 仕入実績ビューモデル（検索内容含む） WhereLambda1<T>(string, string, string) 仕入実績に対する条件ラムダ式 public Expression<Func<T, bool>>? WhereLambda1<T>(string leftSide, string comparison, string rightSide) Parameters leftSide string 左辺 comparison string 比較演算子 rightSide string 右辺 Returns Expression<Func<T, bool>> ラムダ式 Type Parameters T WhereLambda2<T>(string, string, string) public Expression<Func<T, bool>>? WhereLambda2<T>(string leftSide, string comparison, string rightSide) Parameters leftSide string comparison string rightSide string Returns Expression<Func<T, bool>> Type Parameters T"
  },
  "api/Convenience.Models.Services.ShiireMasterService.PostMasterData.html": {
    "href": "api/Convenience.Models.Services.ShiireMasterService.PostMasterData.html",
    "title": "Class ShiireMasterService.PostMasterData | Convenience",
    "keywords": "Class ShiireMasterService.PostMasterData Namespace Convenience.Models.Services Assembly Convenience.dll Postデータ用クラス public class ShiireMasterService.PostMasterData : ShiireMaster, IPostMasterData, IDeleteFlag Inheritance object ShiireMaster ShiireMasterService.PostMasterData Implements IPostMasterData IDeleteFlag Inherited Members ShiireMaster.ShiireSakiId ShiireMaster.ShiirePrdId ShiireMaster.ShohinId ShiireMaster.ShiirePrdName ShiireMaster.ShiirePcsPerUnit ShiireMaster.ShiireUnit ShiireMaster.ShireTanka ShiireMaster.ShohinMaster ShiireMaster.ShiireSakiMaster ShiireMaster.ChumonJissekiMeisaiis ShiireMaster.SokoZaiko ShiireMaster.TentoHaraidashiJissekis object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DeleteFlag 削除フラグ public bool DeleteFlag { get; set; } Property Value bool"
  },
  "api/Convenience.Models.Services.ShiireMasterService.html": {
    "href": "api/Convenience.Models.Services.ShiireMasterService.html",
    "title": "Class ShiireMasterService | Convenience",
    "keywords": "Class ShiireMasterService Namespace Convenience.Models.Services Assembly Convenience.dll 仕入マスタの管理サービスクラス public class ShiireMasterService : IShiireMasterService, IMasterRegistrationService<ShiireMaster, ShiireMasterService.PostMasterData, ShiireMasterViewModel>, ISharedTools Inheritance object ShiireMasterService Implements IShiireMasterService IMasterRegistrationService<ShiireMaster, ShiireMasterService.PostMasterData, ShiireMasterViewModel> ISharedTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShiireMasterService(ConvenienceContext) コンストラクタ public ShiireMasterService(ConvenienceContext context) Parameters context ConvenienceContext データベースコンテキスト Fields my private readonly IShiireMasterService my Field Value IShiireMasterService Properties KeepMasterDatas 現在保持しているマスタデータ public IList<ShiireMaster> KeepMasterDatas { get; set; } Property Value IList<ShiireMaster> MasterRegisiationViewModel ビューモデル public IMasterRegistrationViewModel<ShiireMasterService.PostMasterData> MasterRegisiationViewModel { get; set; } Property Value IMasterRegistrationViewModel<ShiireMasterService.PostMasterData> PostedMasterDatas Postされたマスタデータ public IList<ShiireMasterService.PostMasterData> PostedMasterDatas { get; set; } Property Value IList<ShiireMasterService.PostMasterData> _context データベースコンテキスト public ConvenienceContext _context { get; set; } Property Value ConvenienceContext Methods InsertRow(IList<PostMasterData>, int) 新しい行を挿入 public IList<ShiireMasterService.PostMasterData> InsertRow(IList<ShiireMasterService.PostMasterData> PostMasterDatas, int index) Parameters PostMasterDatas IList<ShiireMasterService.PostMasterData> index int Returns IList<ShiireMasterService.PostMasterData> MakeViewModel() ビューモデルを作成 public Task<ShiireMasterViewModel> MakeViewModel() Returns Task<ShiireMasterViewModel> MapFromKeepMasterDataToPostData(IList<ShiireMaster>) 保持データをPostデータにマッピング public IList<ShiireMasterService.PostMasterData> MapFromKeepMasterDataToPostData(IList<ShiireMaster> argDatas) Parameters argDatas IList<ShiireMaster> Returns IList<ShiireMasterService.PostMasterData> MapFromPostDataToKeepMasterData(IList<PostMasterData>) Postデータを保持データにマッピング public IList<ShiireMaster> MapFromPostDataToKeepMasterData(IList<ShiireMasterService.PostMasterData> argDatas) Parameters argDatas IList<ShiireMasterService.PostMasterData> Postデータリスト Returns IList<ShiireMaster> 保持データリスト QueryMasterData() データベースから仕入マスタデータを取得 public Task<IList<ShiireMaster>> QueryMasterData() Returns Task<IList<ShiireMaster>> UpdateMasterData(ShiireMasterViewModel) ビューモデルを基にマスタデータを更新 public Task<ShiireMasterViewModel> UpdateMasterData(ShiireMasterViewModel argMasterRegistrationViewModel) Parameters argMasterRegistrationViewModel ShiireMasterViewModel Returns Task<ShiireMasterViewModel>"
  },
  "api/Convenience.Models.Services.ShiireSakiMasterService.PostMasterData.html": {
    "href": "api/Convenience.Models.Services.ShiireSakiMasterService.PostMasterData.html",
    "title": "Class ShiireSakiMasterService.PostMasterData | Convenience",
    "keywords": "Class ShiireSakiMasterService.PostMasterData Namespace Convenience.Models.Services Assembly Convenience.dll Postデータ用の内部クラス public class ShiireSakiMasterService.PostMasterData : ShiireSakiMaster, ISelectList, IPostMasterData, IDeleteFlag Inheritance object ShiireSakiMaster ShiireSakiMasterService.PostMasterData Implements ISelectList IPostMasterData IDeleteFlag Inherited Members ShiireSakiMaster.ShiireSakiId ShiireSakiMaster.ShiireSakiKaisya ShiireSakiMaster.ShiireSakiBusho ShiireSakiMaster.YubinBango ShiireSakiMaster.Todoufuken ShiireSakiMaster.Shikuchoson ShiireSakiMaster.Banchi ShiireSakiMaster.Tatemonomei ShiireSakiMaster.ShireMasters ShiireSakiMaster.ChumonJissekis ShiireSakiMaster.Value ShiireSakiMaster.Text ShiireSakiMaster.OrderKey object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DeleteFlag 削除フラグ public bool DeleteFlag { get; set; } Property Value bool"
  },
  "api/Convenience.Models.Services.ShiireSakiMasterService.html": {
    "href": "api/Convenience.Models.Services.ShiireSakiMasterService.html",
    "title": "Class ShiireSakiMasterService | Convenience",
    "keywords": "Class ShiireSakiMasterService Namespace Convenience.Models.Services Assembly Convenience.dll 仕入先マスタを管理するサービスクラス public class ShiireSakiMasterService : IShiireSakiMasterService, IMasterRegistrationService<ShiireSakiMaster, ShiireSakiMasterService.PostMasterData, ShiireSakiMasterViewModel>, ISharedTools Inheritance object ShiireSakiMasterService Implements IShiireSakiMasterService IMasterRegistrationService<ShiireSakiMaster, ShiireSakiMasterService.PostMasterData, ShiireSakiMasterViewModel> ISharedTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShiireSakiMasterService(ConvenienceContext) コンストラクタ public ShiireSakiMasterService(ConvenienceContext context) Parameters context ConvenienceContext データベースコンテキスト Fields my private readonly IShiireSakiMasterService my Field Value IShiireSakiMasterService Properties KeepMasterDatas 現在保持しているマスタデータ public IList<ShiireSakiMaster> KeepMasterDatas { get; set; } Property Value IList<ShiireSakiMaster> MasterRegisiationViewModel ビューモデル public IMasterRegistrationViewModel<ShiireSakiMasterService.PostMasterData> MasterRegisiationViewModel { get; set; } Property Value IMasterRegistrationViewModel<ShiireSakiMasterService.PostMasterData> PostedMasterDatas Postされたマスタデータ public IList<ShiireSakiMasterService.PostMasterData> PostedMasterDatas { get; set; } Property Value IList<ShiireSakiMasterService.PostMasterData> _context データベースコンテキスト public ConvenienceContext _context { get; set; } Property Value ConvenienceContext Methods InsertRow(IList<PostMasterData>, int) Postデータに新しい行を挿入 public IList<ShiireSakiMasterService.PostMasterData> InsertRow(IList<ShiireSakiMasterService.PostMasterData> PostMasterDatas, int index) Parameters PostMasterDatas IList<ShiireSakiMasterService.PostMasterData> Postデータリスト index int 挿入位置 Returns IList<ShiireSakiMasterService.PostMasterData> 更新後のPostデータリスト MakeViewModel() ビューモデルを作成 public Task<ShiireSakiMasterViewModel> MakeViewModel() Returns Task<ShiireSakiMasterViewModel> ビューモデル MapFromKeepMasterDataToPostData(IList<ShiireSakiMaster>) 保持データをPostデータにマッピング public IList<ShiireSakiMasterService.PostMasterData> MapFromKeepMasterDataToPostData(IList<ShiireSakiMaster> argDatas) Parameters argDatas IList<ShiireSakiMaster> 保持データリスト Returns IList<ShiireSakiMasterService.PostMasterData> Postデータリスト MapFromPostDataToKeepMasterData(IList<PostMasterData>) Postデータを保持データにマッピング public IList<ShiireSakiMaster> MapFromPostDataToKeepMasterData(IList<ShiireSakiMasterService.PostMasterData> argDatas) Parameters argDatas IList<ShiireSakiMasterService.PostMasterData> Postデータリスト Returns IList<ShiireSakiMaster> 保持データリスト QueryMasterData() データベースから仕入先マスタデータを取得 public Task<IList<ShiireSakiMaster>> QueryMasterData() Returns Task<IList<ShiireSakiMaster>> 保持データリスト UpdateMasterData(ShiireSakiMasterViewModel) ビューモデルを基にマスタデータを更新 public Task<ShiireSakiMasterViewModel> UpdateMasterData(ShiireSakiMasterViewModel argMasterRegistrationViewModel) Parameters argMasterRegistrationViewModel ShiireSakiMasterViewModel 更新用ビューモデル Returns Task<ShiireSakiMasterViewModel> 更新後のビューモデル"
  },
  "api/Convenience.Models.Services.ShiireService.html": {
    "href": "api/Convenience.Models.Services.ShiireService.html",
    "title": "Class ShiireService | Convenience",
    "keywords": "Class ShiireService Namespace Convenience.Models.Services Assembly Convenience.dll 仕入サービスクラス public class ShiireService : IShiireService, IDbContext Inheritance object ShiireService Implements IShiireService IDbContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShiireService() C#コンソールデバッグ用 public ShiireService() ShiireService(ConvenienceContext, IShiire) コンストラクター 通常用 public ShiireService(ConvenienceContext context, IShiire shiire) Parameters context ConvenienceContext DBコンテキスト shiire IShiire 仕入クラスＤＩ注入用 Fields _context private readonly ConvenienceContext _context Field Value ConvenienceContext Properties ShiireKeysViewModel 仕入キービューモデル（１枚目の画面用） public ShiireKeysViewModel ShiireKeysViewModel { get; set; } Property Value ShiireKeysViewModel ShiireViewModel 仕入ビューモデル（２枚目の画面用） public ShiireViewModel ShiireViewModel { get; set; } Property Value ShiireViewModel shiire 仕入クラス用オブジェクト変数 public IShiire shiire { get; set; } Property Value IShiire Methods SetShiireKeysModel() 仕入キーモデル設定（仕入画面１枚目用） public Task<ShiireKeysViewModel> SetShiireKeysModel() Returns Task<ShiireKeysViewModel> ShiireKeysViewModel 仕入キービューモデル SetShiireModel(int, IList<ShiireJisseki>) 仕入ビューモデル設定 private ShiireViewModel SetShiireModel(int entities, IList<ShiireJisseki> inshiireJissekis) Parameters entities int inshiireJissekis IList<ShiireJisseki> Returns ShiireViewModel ShiireCommit(ShiireViewModel) 仕入データをDBに書き込む・注文残の調整・倉庫在庫への反映（Post後処理・再表示用） 仕入実績データPost後の後の再表示用 public Task<ShiireViewModel> ShiireCommit(ShiireViewModel inShiireViewModel) Parameters inShiireViewModel ShiireViewModel 仕入ビューモデル（注文コード・仕入日・仕入SEQ、Postされた仕入実績データ） Returns Task<ShiireViewModel> 仕入ビューモデル（更新エンティティ数・DB更新された仕入実績） Remarks ①仕入実績がある場合は、仕入実績取り込み、ない場合は注文実績から作成 ② ①の内容に対し、ポストデータを反映 ③注文実績の注文残と倉庫在庫の在庫数を仕入数にあわせ過不足する ④仕入実績DB更新 ⑤仕入実績に倉庫在庫を接続しインクルードできるようにする（表示用） ShiireSetting(ShiireKeysViewModel) 仕入セッティング 仕入実績データの画面初期表示用（DB更新後の再表示も含む） public Task<ShiireViewModel> ShiireSetting(ShiireKeysViewModel inShiireKeysViewModel) Parameters inShiireKeysViewModel ShiireKeysViewModel 注文キービューモデル Returns Task<ShiireViewModel> ShiireViewModel 仕入ビューモデル（仕入実績・インクルードされた注文実績・インクルードされた倉庫在庫） Remarks ①現在時間により仕入日セット ②仕入は毎回新規なので、仕入SEQを発番・注文実績から仕入実績を作る ③関係する倉庫在庫を接続（表示用）"
  },
  "api/Convenience.Models.Services.ShohinMasterService.PostMasterData.html": {
    "href": "api/Convenience.Models.Services.ShohinMasterService.PostMasterData.html",
    "title": "Class ShohinMasterService.PostMasterData | Convenience",
    "keywords": "Class ShohinMasterService.PostMasterData Namespace Convenience.Models.Services Assembly Convenience.dll Postデータ用の内部クラス public class ShohinMasterService.PostMasterData : ShohinMaster, ISelectList, IPostMasterData, IDeleteFlag Inheritance object ShohinMaster ShohinMasterService.PostMasterData Implements ISelectList IPostMasterData IDeleteFlag Inherited Members ShohinMaster.ShohinId ShohinMaster.ShohinName ShohinMaster.ShohinTanka ShohinMaster.ShohiZeiritsu ShohinMaster.ShohiZeiritsuEatIn ShohinMaster.ShiireMasters ShohinMaster.TentoZaiko ShohinMaster.Value ShohinMaster.Text ShohinMaster.OrderKey object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DeleteFlag 削除フラグ public bool DeleteFlag { get; set; } Property Value bool"
  },
  "api/Convenience.Models.Services.ShohinMasterService.html": {
    "href": "api/Convenience.Models.Services.ShohinMasterService.html",
    "title": "Class ShohinMasterService | Convenience",
    "keywords": "Class ShohinMasterService Namespace Convenience.Models.Services Assembly Convenience.dll 商品マスタを管理するサービスクラス public class ShohinMasterService : IShohinMasterService, IMasterRegistrationService<ShohinMaster, ShohinMasterService.PostMasterData, ShohinMasterViewModel>, ISharedTools Inheritance object ShohinMasterService Implements IShohinMasterService IMasterRegistrationService<ShohinMaster, ShohinMasterService.PostMasterData, ShohinMasterViewModel> ISharedTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShohinMasterService(ConvenienceContext) コンストラクタ public ShohinMasterService(ConvenienceContext context) Parameters context ConvenienceContext データベースコンテキスト Fields my private readonly IShohinMasterService my Field Value IShohinMasterService Properties KeepMasterDatas 現在保持しているマスタデータ public IList<ShohinMaster> KeepMasterDatas { get; set; } Property Value IList<ShohinMaster> MasterRegisiationViewModel ビューモデル public IMasterRegistrationViewModel<ShohinMasterService.PostMasterData> MasterRegisiationViewModel { get; set; } Property Value IMasterRegistrationViewModel<ShohinMasterService.PostMasterData> PostedMasterDatas Postされたマスタデータ public IList<ShohinMasterService.PostMasterData> PostedMasterDatas { get; set; } Property Value IList<ShohinMasterService.PostMasterData> _context データベースコンテキスト public ConvenienceContext _context { get; set; } Property Value ConvenienceContext Methods InsertRow(IList<PostMasterData>, int) Postデータに新しい行を挿入 public IList<ShohinMasterService.PostMasterData> InsertRow(IList<ShohinMasterService.PostMasterData> PostMasterDatas, int index) Parameters PostMasterDatas IList<ShohinMasterService.PostMasterData> Postデータリスト index int 挿入位置 Returns IList<ShohinMasterService.PostMasterData> 更新後のPostデータリスト MakeViewModel() ビューモデルを作成 public Task<ShohinMasterViewModel> MakeViewModel() Returns Task<ShohinMasterViewModel> ビューモデル MapFromKeepMasterDataToPostData(IList<ShohinMaster>) 保持データをPostデータにマッピング public IList<ShohinMasterService.PostMasterData> MapFromKeepMasterDataToPostData(IList<ShohinMaster> argDatas) Parameters argDatas IList<ShohinMaster> 保持データリスト Returns IList<ShohinMasterService.PostMasterData> Postデータリスト MapFromPostDataToKeepMasterData(IList<PostMasterData>) Postデータを保持データにマッピング public IList<ShohinMaster> MapFromPostDataToKeepMasterData(IList<ShohinMasterService.PostMasterData> argDatas) Parameters argDatas IList<ShohinMasterService.PostMasterData> Postデータリスト Returns IList<ShohinMaster> 保持データリスト QueryMasterData() データベースから商品マスタデータを取得 public Task<IList<ShohinMaster>> QueryMasterData() Returns Task<IList<ShohinMaster>> 保持データリスト UpdateMasterData(ShohinMasterViewModel) ビューモデルを基にマスタデータを更新 public Task<ShohinMasterViewModel> UpdateMasterData(ShohinMasterViewModel argMasterRegistrationViewModel) Parameters argMasterRegistrationViewModel ShohinMasterViewModel 更新用ビューモデル Returns Task<ShohinMasterViewModel> 更新後のビューモデル"
  },
  "api/Convenience.Models.Services.TentoHaraidashiService.html": {
    "href": "api/Convenience.Models.Services.TentoHaraidashiService.html",
    "title": "Class TentoHaraidashiService | Convenience",
    "keywords": "Class TentoHaraidashiService Namespace Convenience.Models.Services Assembly Convenience.dll 店頭払出サービスクラス public class TentoHaraidashiService : ITentoHaraidashiService, ISharedTools Inheritance object TentoHaraidashiService Implements ITentoHaraidashiService ISharedTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TentoHaraidashiService(ConvenienceContext, ITentoHaraidashi) コンストラクタ public TentoHaraidashiService(ConvenienceContext context, ITentoHaraidashi tentoHaraidashi) Parameters context ConvenienceContext tentoHaraidashi ITentoHaraidashi Fields _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext Properties TentoHaraidashi private ITentoHaraidashi TentoHaraidashi { get; set; } Property Value ITentoHaraidashi TentoHaraidashiViewModel 店頭払出ビュー・モデル（プロパティ） public TentoHaraidashiViewModel TentoHaraidashiViewModel { get; set; } Property Value TentoHaraidashiViewModel Methods CreateListWithTentoHaraidashiId(int) 引数（マイナス値）を使用して、その引数分の日数をさかのぼり、店頭払出日付と店頭払出コード一覧を作る private Task<IList<HaraidashiDateTimeAndIdMatching>> CreateListWithTentoHaraidashiId(int argReverseDaysWithMinus) Parameters argReverseDaysWithMinus int さかのぼる日数（マイナスでいれる） Returns Task<IList<HaraidashiDateTimeAndIdMatching>> 店頭払出日時・店頭払出コード MakeListWithTentoHaraidashiIdToSelectListItem(IEnumerable<HaraidashiDateTimeAndIdMatching>) Ｖｉｅｗのselect項目のために店頭払出日付＋コードのリストを作成する private static IList<SelectListItem> MakeListWithTentoHaraidashiIdToSelectListItem(IEnumerable<HaraidashiDateTimeAndIdMatching> argHaraidashiDateTimeAndIdMatching) Parameters argHaraidashiDateTimeAndIdMatching IEnumerable<HaraidashiDateTimeAndIdMatching> Returns IList<SelectListItem> SetTentoHaraidashiViewModel() 初期表示用 public Task<TentoHaraidashiViewModel> SetTentoHaraidashiViewModel() Returns Task<TentoHaraidashiViewModel> TentoHaraidashiCommit(TentoHaraidashiViewModel) 店頭払出Commit public Task<TentoHaraidashiViewModel> TentoHaraidashiCommit(TentoHaraidashiViewModel argTentoHaraidashiViewModel) Parameters argTentoHaraidashiViewModel TentoHaraidashiViewModel 店頭払出ビューモデル Returns Task<TentoHaraidashiViewModel> TentoHaraidashiViewModel 店頭払出ビューモデル TentoHaraidashiSetting(TentoHaraidashiViewModel) 店頭払出セッティング public Task<TentoHaraidashiViewModel> TentoHaraidashiSetting(TentoHaraidashiViewModel argTentoHaraidashiViewModel) Parameters argTentoHaraidashiViewModel TentoHaraidashiViewModel 店頭払出ビューモデル Returns Task<TentoHaraidashiViewModel> TentoHaraidashiViewModel 店頭払出ビューモデル TransferToDisplayModel(TentoHaraidashiHeader) 商品マスタを軸に一覧構造をコンバート private static IEnumerable<ShohinMaster> TransferToDisplayModel(TentoHaraidashiHeader argTentoHaraidashiHeader) Parameters argTentoHaraidashiHeader TentoHaraidashiHeader Returns IEnumerable<ShohinMaster>"
  },
  "api/Convenience.Models.Services.TentoZaikoService.html": {
    "href": "api/Convenience.Models.Services.TentoZaikoService.html",
    "title": "Class TentoZaikoService | Convenience",
    "keywords": "Class TentoZaikoService Namespace Convenience.Models.Services Assembly Convenience.dll 店頭在庫検索サービス public class TentoZaikoService : ITentoZaikoService, IRetrivalService, ITotalSummaryRetrival, ISharedTools Inheritance object TentoZaikoService Implements ITentoZaikoService IRetrivalService ITotalSummaryRetrival ISharedTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TentoZaikoService(ConvenienceContext) コンストラクタ public TentoZaikoService(ConvenienceContext context) Parameters context ConvenienceContext ＤＢコンテキストＤＩ Fields _context DBコンテクスト private readonly ConvenienceContext _context Field Value ConvenienceContext Methods TentoZaikoRetrival(TentoZaikoViewModel) 店頭在庫検索 public Task<TentoZaikoViewModel> TentoZaikoRetrival(TentoZaikoViewModel argTentoZaikoViewModel) Parameters argTentoZaikoViewModel TentoZaikoViewModel 店頭在庫検索ビューモデル Returns Task<TentoZaikoViewModel> 店頭在庫ビューモデル（検索内容含む） WhereLambda1<T>(string, string, string) 注文実績明細に対する条件ラムダ式 public Expression<Func<T, bool>>? WhereLambda1<T>(string leftSide, string comparison, string rightSide) Parameters leftSide string 左辺 comparison string 比較演算子 rightSide string 右辺 Returns Expression<Func<T, bool>> ラムダ式 Type Parameters T WhereLambda2<T>(string, string, string) public Expression<Func<T, bool>>? WhereLambda2<T>(string leftSide, string comparison, string rightSide) Parameters leftSide string comparison string rightSide string Returns Expression<Func<T, bool>> Type Parameters T"
  },
  "api/Convenience.Models.Services.ZaikoService.html": {
    "href": "api/Convenience.Models.Services.ZaikoService.html",
    "title": "Class ZaikoService | Convenience",
    "keywords": "Class ZaikoService Namespace Convenience.Models.Services Assembly Convenience.dll 倉庫在庫検索（サービス） public class ZaikoService : IZaikoService, ITotalSummaryRetrival, ISharedTools Inheritance object ZaikoService Implements IZaikoService ITotalSummaryRetrival ISharedTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ZaikoService() public ZaikoService() ZaikoService(ConvenienceContext, IZaiko) コンストラクター（ＡＳＰ用） public ZaikoService(ConvenienceContext context, IZaiko zaiko) Parameters context ConvenienceContext DBコンテキスト zaiko IZaiko 在庫クラスＤＩ注入用 Fields Zaiko private readonly IZaiko Zaiko Field Value IZaiko _context private readonly ConvenienceContext _context Field Value ConvenienceContext Methods KeyInput(KeyEventRec[], SelecteWhereItem[]) 検索キー画面の情報取得 public Task<ZaikoViewModel> KeyInput(ZaikoViewModel.KeyEventRec[] inKeySetOrderArray, ZaikoViewModel.SelecteWhereItem[] inSelectWhereItemArray) Parameters inKeySetOrderArray KeyEventRec[] inSelectWhereItemArray SelecteWhereItem[] Returns Task<ZaikoViewModel>"
  },
  "api/Convenience.Models.Services.html": {
    "href": "api/Convenience.Models.Services.html",
    "title": "Namespace Convenience.Models.Services | Convenience",
    "keywords": "Namespace Convenience.Models.Services Classes ChumonJissekiService 注文実績検索サービス ChumonService 注文サービスクラス KaikeiJissekiService 会計実績検索サービス KaikeiService 会計サービスクラス NaigaiClassMasterService 内外区分マスタのサービスクラス NaigaiClassMasterService.PostMasterData Postデータ用クラス ShiireJissekiService 仕入実績検索サービス ShiireMasterService 仕入マスタの管理サービスクラス ShiireMasterService.PostMasterData Postデータ用クラス ShiireSakiMasterService 仕入先マスタを管理するサービスクラス ShiireSakiMasterService.PostMasterData Postデータ用の内部クラス ShiireService 仕入サービスクラス ShohinMasterService 商品マスタを管理するサービスクラス ShohinMasterService.PostMasterData Postデータ用の内部クラス TentoHaraidashiService 店頭払出サービスクラス TentoZaikoService 店頭在庫検索サービス ZaikoService 倉庫在庫検索（サービス）"
  },
  "api/Convenience.Models.ViewModels.Chumon.ChumonKeysViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.Chumon.ChumonKeysViewModel.html",
    "title": "Class ChumonKeysViewModel | Convenience",
    "keywords": "Class ChumonKeysViewModel Namespace Convenience.Models.ViewModels.Chumon Assembly Convenience.dll 注文キービューモデル public class ChumonKeysViewModel Inheritance object ChumonKeysViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonDate [Column(\"chumon_date\")] public DateOnly ChumonDate { get; set; } Property Value DateOnly ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] public string? ShiireSakiId { get; set; } Property Value string ShiireSakiList 仕入先一覧 public List<SelectListItem>? ShiireSakiList { get; set; } Property Value List<SelectListItem>"
  },
  "api/Convenience.Models.ViewModels.Chumon.ChumonViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.Chumon.ChumonViewModel.html",
    "title": "Class ChumonViewModel | Convenience",
    "keywords": "Class ChumonViewModel Namespace Convenience.Models.ViewModels.Chumon Assembly Convenience.dll 注文明細ビューモデル public class ChumonViewModel Inheritance object ChumonViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonJisseki 注文実績 public ChumonJisseki ChumonJisseki { get; set; } Property Value ChumonJisseki IsNormal 処理が正常がどうか（正常=true) public bool? IsNormal { get; set; } Property Value bool? Remark 処理結果（ＤＢ反映結果）表示内容 public string? Remark { get; set; } Property Value string"
  },
  "api/Convenience.Models.ViewModels.Chumon.html": {
    "href": "api/Convenience.Models.ViewModels.Chumon.html",
    "title": "Namespace Convenience.Models.ViewModels.Chumon | Convenience",
    "keywords": "Namespace Convenience.Models.ViewModels.Chumon Classes ChumonKeysViewModel 注文キービューモデル ChumonViewModel 注文明細ビューモデル"
  },
  "api/Convenience.Models.ViewModels.ChumonJisseki.ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass.html": {
    "href": "api/Convenience.Models.ViewModels.ChumonJisseki.ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass.html",
    "title": "Class ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass | Convenience",
    "keywords": "Class ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass Namespace Convenience.Models.ViewModels.ChumonJisseki Assembly Convenience.dll データ表示用リストの１レコード定義 public class ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass : ChumonJissekiMeisai Inheritance object ChumonJissekiMeisai ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass Inherited Members ChumonJissekiMeisai.ChumonId ChumonJissekiMeisai.ShiireSakiId ChumonJissekiMeisai.ShiirePrdId ChumonJissekiMeisai.ShohinId ChumonJissekiMeisai.ChumonSu ChumonJissekiMeisai.ChumonZan ChumonJissekiMeisai.LastChumonSu ChumonJissekiMeisai.ChumonJisseki ChumonJissekiMeisai.ShiireMaster ChumonJissekiMeisai.ShiireJisseki ChumonJissekiMeisai.Version object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChumonJissekiLineClass() public ChumonJissekiLineClass() Properties ChumonDate [Required] public DateOnly ChumonDate { get; set; } Property Value DateOnly ChumonKingaku [Required] [Precision(10, 2)] public decimal ChumonKingaku { get; set; } Property Value decimal ChumonZanKingaku [Required] [Precision(10, 2)] public decimal ChumonZanKingaku { get; set; } Property Value decimal ShiirePrdName [Required] public string ShiirePrdName { get; set; } Property Value string ShiireSakiKaisya [Required] public string ShiireSakiKaisya { get; set; } Property Value string ShiireZumiKingaku [Required] [Precision(10, 2)] public decimal ShiireZumiKingaku { get; set; } Property Value decimal ShiireZumiSu [Required] [Precision(10, 2)] public decimal ShiireZumiSu { get; set; } Property Value decimal ShohinName [Required] public string ShohinName { get; set; } Property Value string"
  },
  "api/Convenience.Models.ViewModels.ChumonJisseki.ChumonJissekiViewModel.DataAreaClass.html": {
    "href": "api/Convenience.Models.ViewModels.ChumonJisseki.ChumonJissekiViewModel.DataAreaClass.html",
    "title": "Class ChumonJissekiViewModel.DataAreaClass | Convenience",
    "keywords": "Class ChumonJissekiViewModel.DataAreaClass Namespace Convenience.Models.ViewModels.ChumonJisseki Assembly Convenience.dll データ表示管理用クラス public class ChumonJissekiViewModel.DataAreaClass : IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IDataAreaClass Inheritance object ChumonJissekiViewModel.DataAreaClass Implements IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IDataAreaClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DataAreaClass() コンストラクタ データ表示用リストの初期化 public DataAreaClass() Properties Lines データ表示用リスト public IEnumerable<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass> Lines { get; set; } Property Value IEnumerable<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass> SummaryLine public ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass SummaryLine { get; set; } Property Value ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass"
  },
  "api/Convenience.Models.ViewModels.ChumonJisseki.ChumonJissekiViewModel.KeywordAreaClass.KeyAreaClass.html": {
    "href": "api/Convenience.Models.ViewModels.ChumonJisseki.ChumonJissekiViewModel.KeywordAreaClass.KeyAreaClass.html",
    "title": "Class ChumonJissekiViewModel.KeywordAreaClass.KeyAreaClass | Convenience",
    "keywords": "Class ChumonJissekiViewModel.KeywordAreaClass.KeyAreaClass Namespace Convenience.Models.ViewModels.ChumonJisseki Assembly Convenience.dll 検索キー管理用クラス public class ChumonJissekiViewModel.KeywordAreaClass.KeyAreaClass : IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IKeywordAreaClass.IKeyAreaClass Inheritance object ChumonJissekiViewModel.KeywordAreaClass.KeyAreaClass Implements IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IKeywordAreaClass.IKeyAreaClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KeyAreaClass() 検索キーエリア管理用クラス public KeyAreaClass() Properties ComparisonOperatorList 比較演算子選択用 [JsonIgnore] public SelectList ComparisonOperatorList { get; set; } Property Value SelectList LineCountForSelectorOfWhere 検索キー入力最大行数 [JsonIgnore] public int LineCountForSelectorOfWhere { get; set; } Property Value int SelectWhereLeftSideList Where左辺用カラムセット用 [JsonIgnore] public SelectList SelectWhereLeftSideList { get; set; } Property Value SelectList SelecteWhereItemArray 検索キー指示データ管理用 public IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem[] SelecteWhereItemArray { get; set; } Property Value SelecteWhereItem[] Methods GetDefaltSortForWhere(int) 検索キー指示データ初期データセット 注文日（6か月前以降）でセット public IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem GetDefaltSortForWhere(int index) Parameters index int Returns IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem"
  },
  "api/Convenience.Models.ViewModels.ChumonJisseki.ChumonJissekiViewModel.KeywordAreaClass.SortAreaClass.html": {
    "href": "api/Convenience.Models.ViewModels.ChumonJisseki.ChumonJissekiViewModel.KeywordAreaClass.SortAreaClass.html",
    "title": "Class ChumonJissekiViewModel.KeywordAreaClass.SortAreaClass | Convenience",
    "keywords": "Class ChumonJissekiViewModel.KeywordAreaClass.SortAreaClass Namespace Convenience.Models.ViewModels.ChumonJisseki Assembly Convenience.dll ソートエリア管理用クラス public class ChumonJissekiViewModel.KeywordAreaClass.SortAreaClass : IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IKeywordAreaClass.ISortAreaClass Inheritance object ChumonJissekiViewModel.KeywordAreaClass.SortAreaClass Implements IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IKeywordAreaClass.ISortAreaClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SortAreaClass() ソートキーエリア管理用クラス public SortAreaClass() Properties KeyEventList ソートキー指示データ管理用 public IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IKeywordAreaClass.ISortAreaClass.SortEventRec[] KeyEventList { get; set; } Property Value SortEventRec[] KeyList ソートキー一覧表示用 [JsonIgnore] public SelectList KeyList { get; set; } Property Value SelectList LineCountForSelectorOfOrder ソートキー入力最大行数 public int LineCountForSelectorOfOrder { get; set; } Property Value int Methods GetDefaltSortForSort(int) ソートキー指示データ初期データセット 注文コード（昇順）でセット public IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IKeywordAreaClass.ISortAreaClass.SortEventRec GetDefaltSortForSort(int index) Parameters index int Returns IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IKeywordAreaClass.ISortAreaClass.SortEventRec"
  },
  "api/Convenience.Models.ViewModels.ChumonJisseki.ChumonJissekiViewModel.KeywordAreaClass.html": {
    "href": "api/Convenience.Models.ViewModels.ChumonJisseki.ChumonJissekiViewModel.KeywordAreaClass.html",
    "title": "Class ChumonJissekiViewModel.KeywordAreaClass | Convenience",
    "keywords": "Class ChumonJissekiViewModel.KeywordAreaClass Namespace Convenience.Models.ViewModels.ChumonJisseki Assembly Convenience.dll ソートキー・検索キーエリア管理用クラス public class ChumonJissekiViewModel.KeywordAreaClass : IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IKeywordAreaClass Inheritance object ChumonJissekiViewModel.KeywordAreaClass Implements IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IKeywordAreaClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KeywordAreaClass() コンストラクター ソートキーエリア・検索キーエリア管理用オブジェクト初期化 public KeywordAreaClass() Properties KeyArea 検索キーエリア管理用 public IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IKeywordAreaClass.IKeyAreaClass KeyArea { get; set; } Property Value IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IKeywordAreaClass.IKeyAreaClass SortArea ソートキーエリア管理用 public IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IKeywordAreaClass.ISortAreaClass SortArea { get; set; } Property Value IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IKeywordAreaClass.ISortAreaClass"
  },
  "api/Convenience.Models.ViewModels.ChumonJisseki.ChumonJissekiViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.ChumonJisseki.ChumonJissekiViewModel.html",
    "title": "Class ChumonJissekiViewModel | Convenience",
    "keywords": "Class ChumonJissekiViewModel Namespace Convenience.Models.ViewModels.ChumonJisseki Assembly Convenience.dll 注文実績検索ビューモデル public class ChumonJissekiViewModel : IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>, ISharedTools Inheritance object ChumonJissekiViewModel Implements IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass> ISharedTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChumonJissekiViewModel() コンストラクタ ソート・検索キーエリア管理用オブジェクト初期化 public ChumonJissekiViewModel() Properties DataArea データ表示管理用 public IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IDataAreaClass DataArea { get; set; } Property Value IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IDataAreaClass KeywordArea ソートキー・検索キーエリア管理用 public IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IKeywordAreaClass KeywordArea { get; set; } Property Value IRetrivalViewModel<ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass>.IKeywordAreaClass"
  },
  "api/Convenience.Models.ViewModels.ChumonJisseki.html": {
    "href": "api/Convenience.Models.ViewModels.ChumonJisseki.html",
    "title": "Namespace Convenience.Models.ViewModels.ChumonJisseki | Convenience",
    "keywords": "Namespace Convenience.Models.ViewModels.ChumonJisseki Classes ChumonJissekiViewModel 注文実績検索ビューモデル ChumonJissekiViewModel.DataAreaClass データ表示管理用クラス ChumonJissekiViewModel.DataAreaClass.ChumonJissekiLineClass データ表示用リストの１レコード定義 ChumonJissekiViewModel.KeywordAreaClass ソートキー・検索キーエリア管理用クラス ChumonJissekiViewModel.KeywordAreaClass.KeyAreaClass 検索キー管理用クラス ChumonJissekiViewModel.KeywordAreaClass.SortAreaClass ソートエリア管理用クラス"
  },
  "api/Convenience.Models.ViewModels.Kaikei.KaikeiJissekiForAdd.html": {
    "href": "api/Convenience.Models.ViewModels.Kaikei.KaikeiJissekiForAdd.html",
    "title": "Class KaikeiJissekiForAdd | Convenience",
    "keywords": "Class KaikeiJissekiForAdd Namespace Convenience.Models.ViewModels.Kaikei Assembly Convenience.dll public class KaikeiJissekiForAdd : IKaikeiJissekiForAdd Inheritance object KaikeiJissekiForAdd Implements IKaikeiJissekiForAdd Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KaikeiJissekiForAdd() public KaikeiJissekiForAdd() KaikeiJissekiForAdd(ConvenienceContext) public KaikeiJissekiForAdd(ConvenienceContext context) Parameters context ConvenienceContext Properties NaigaiClass public string NaigaiClass { get; set; } Property Value string NaigaiClassListItems public IEnumerable<SelectListItem> NaigaiClassListItems { get; set; } Property Value IEnumerable<SelectListItem> ShohinId [Column(\"shohin_code\")] public string? ShohinId { get; set; } Property Value string ShohinMaster public ShohinMaster? ShohinMaster { get; set; } Property Value ShohinMaster ShohinName public string? ShohinName { get; set; } Property Value string UriageDatetime public DateTime UriageDatetime { get; set; } Property Value DateTime UriageKingaku public decimal UriageKingaku { get; set; } Property Value decimal UriageSu public decimal UriageSu { get; set; } Property Value decimal Methods Initial() private void Initial()"
  },
  "api/Convenience.Models.ViewModels.Kaikei.KaikeiViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.Kaikei.KaikeiViewModel.html",
    "title": "Class KaikeiViewModel | Convenience",
    "keywords": "Class KaikeiViewModel Namespace Convenience.Models.ViewModels.Kaikei Assembly Convenience.dll 注文明細ビューモデル public class KaikeiViewModel Inheritance object KaikeiViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KaikeiViewModel() public KaikeiViewModel() KaikeiViewModel(ConvenienceContext) public KaikeiViewModel(ConvenienceContext context) Parameters context ConvenienceContext Properties IsNormal public bool? IsNormal { get; set; } Property Value bool? KaikeiDateAndId 店頭払出実績 public string KaikeiDateAndId { get; set; } Property Value string KaikeiHeader public KaikeiHeader KaikeiHeader { get; set; } Property Value KaikeiHeader KaikeiHeaderList public IList<SelectListItem> KaikeiHeaderList { get; set; } Property Value IList<SelectListItem> KaikeiJissekiforAdd public KaikeiJissekiForAdd KaikeiJissekiforAdd { get; set; } Property Value KaikeiJissekiForAdd Remark public string? Remark { get; set; } Property Value string ShohinList public IList<SelectListItem> ShohinList { get; set; } Property Value IList<SelectListItem>"
  },
  "api/Convenience.Models.ViewModels.Kaikei.UriageDateTimeAndIdMatching.html": {
    "href": "api/Convenience.Models.ViewModels.Kaikei.UriageDateTimeAndIdMatching.html",
    "title": "Class UriageDateTimeAndIdMatching | Convenience",
    "keywords": "Class UriageDateTimeAndIdMatching Namespace Convenience.Models.ViewModels.Kaikei Assembly Convenience.dll 店頭払出キー入力に使うリストの内容 public class UriageDateTimeAndIdMatching Inheritance object UriageDateTimeAndIdMatching Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UriageDateTimeAndIdMatching() public UriageDateTimeAndIdMatching() UriageDateTimeAndIdMatching(DateTime, string) public UriageDateTimeAndIdMatching(DateTime UriageDatetime, string UriageDatetimeId) Parameters UriageDatetime DateTime UriageDatetimeId string Properties UriageDatetime public DateTime UriageDatetime { get; set; } Property Value DateTime UriageDatetimeId public string? UriageDatetimeId { get; set; } Property Value string"
  },
  "api/Convenience.Models.ViewModels.Kaikei.html": {
    "href": "api/Convenience.Models.ViewModels.Kaikei.html",
    "title": "Namespace Convenience.Models.ViewModels.Kaikei | Convenience",
    "keywords": "Namespace Convenience.Models.ViewModels.Kaikei Classes KaikeiJissekiForAdd KaikeiViewModel 注文明細ビューモデル UriageDateTimeAndIdMatching 店頭払出キー入力に使うリストの内容"
  },
  "api/Convenience.Models.ViewModels.KaikeiJisseki.KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass.html": {
    "href": "api/Convenience.Models.ViewModels.KaikeiJisseki.KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass.html",
    "title": "Class KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass | Convenience",
    "keywords": "Class KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass Namespace Convenience.Models.ViewModels.KaikeiJisseki Assembly Convenience.dll データ表示用リストの１レコード定義 public class KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass : KaikeiJisseki, IKaikeiJissekiForAdd Inheritance object KaikeiJisseki KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass Implements IKaikeiJissekiForAdd Inherited Members KaikeiJisseki.UriageDatetimeId KaikeiJisseki.ShohinId KaikeiJisseki.UriageDatetime KaikeiJisseki.UriageSu KaikeiJisseki.UriageKingaku KaikeiJisseki.ZeikomiKingaku KaikeiJisseki.ShohinTanka KaikeiJisseki.ShohiZeiritsu KaikeiJisseki.NaigaiClass KaikeiJisseki.KaikeiSeq KaikeiJisseki.KaikeiHeader KaikeiJisseki.ShohinMaster KaikeiJisseki.NaigaiClassMaster KaikeiJisseki.TentoZaiko object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KaikeiJissekiLineClass() public KaikeiJissekiLineClass() Properties NaigaiClassName [Required] public string NaigaiClassName { get; set; } Property Value string ShohinName [Required] public string ShohinName { get; set; } Property Value string"
  },
  "api/Convenience.Models.ViewModels.KaikeiJisseki.KaikeiJissekiViewModel.DataAreaClass.html": {
    "href": "api/Convenience.Models.ViewModels.KaikeiJisseki.KaikeiJissekiViewModel.DataAreaClass.html",
    "title": "Class KaikeiJissekiViewModel.DataAreaClass | Convenience",
    "keywords": "Class KaikeiJissekiViewModel.DataAreaClass Namespace Convenience.Models.ViewModels.KaikeiJisseki Assembly Convenience.dll public class KaikeiJissekiViewModel.DataAreaClass : IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IDataAreaClass Inheritance object KaikeiJissekiViewModel.DataAreaClass Implements IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IDataAreaClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DataAreaClass() コンストラクタ データ表示用リストの初期化 public DataAreaClass() Properties Lines データ表示用リスト public IEnumerable<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass> Lines { get; set; } Property Value IEnumerable<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass> SummaryLine public KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass SummaryLine { get; set; } Property Value KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass"
  },
  "api/Convenience.Models.ViewModels.KaikeiJisseki.KaikeiJissekiViewModel.KeywordAreaClass.KeyAreaClass.html": {
    "href": "api/Convenience.Models.ViewModels.KaikeiJisseki.KaikeiJissekiViewModel.KeywordAreaClass.KeyAreaClass.html",
    "title": "Class KaikeiJissekiViewModel.KeywordAreaClass.KeyAreaClass | Convenience",
    "keywords": "Class KaikeiJissekiViewModel.KeywordAreaClass.KeyAreaClass Namespace Convenience.Models.ViewModels.KaikeiJisseki Assembly Convenience.dll public class KaikeiJissekiViewModel.KeywordAreaClass.KeyAreaClass : IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IKeywordAreaClass.IKeyAreaClass Inheritance object KaikeiJissekiViewModel.KeywordAreaClass.KeyAreaClass Implements IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IKeywordAreaClass.IKeyAreaClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KeyAreaClass() public KeyAreaClass() Properties ComparisonOperatorList 比較演算子選択用 [JsonIgnore] public SelectList ComparisonOperatorList { get; set; } Property Value SelectList LineCountForSelectorOfWhere Where入力行数 [JsonIgnore] public int LineCountForSelectorOfWhere { get; set; } Property Value int SelectWhereLeftSideList Where左辺用カラムセット用 [JsonIgnore] public SelectList SelectWhereLeftSideList { get; set; } Property Value SelectList SelecteWhereItemArray Where入力リスト初期化 [JsonIgnore] public IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem[] SelecteWhereItemArray { get; set; } Property Value SelecteWhereItem[] Methods GetDefaltSortForWhere(int) 検索キー指示データ初期データセット 注文日（6か月前以降）でセット public IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem GetDefaltSortForWhere(int index) Parameters index int Returns IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem"
  },
  "api/Convenience.Models.ViewModels.KaikeiJisseki.KaikeiJissekiViewModel.KeywordAreaClass.SortAreaClass.html": {
    "href": "api/Convenience.Models.ViewModels.KaikeiJisseki.KaikeiJissekiViewModel.KeywordAreaClass.SortAreaClass.html",
    "title": "Class KaikeiJissekiViewModel.KeywordAreaClass.SortAreaClass | Convenience",
    "keywords": "Class KaikeiJissekiViewModel.KeywordAreaClass.SortAreaClass Namespace Convenience.Models.ViewModels.KaikeiJisseki Assembly Convenience.dll コンストラクター ソートキーエリア・検索キーエリア管理用オブジェクト初期化 public class KaikeiJissekiViewModel.KeywordAreaClass.SortAreaClass : IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IKeywordAreaClass.ISortAreaClass Inheritance object KaikeiJissekiViewModel.KeywordAreaClass.SortAreaClass Implements IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IKeywordAreaClass.ISortAreaClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SortAreaClass() ソートキーエリア管理用クラス public SortAreaClass() Properties KeyEventList ソートキー指示データ管理用 public IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IKeywordAreaClass.ISortAreaClass.SortEventRec[] KeyEventList { get; set; } Property Value SortEventRec[] KeyList ソートキー一覧表示用 [JsonIgnore] public SelectList KeyList { get; set; } Property Value SelectList LineCountForSelectorOfOrder ソートキー入力最大行数 public int LineCountForSelectorOfOrder { get; set; } Property Value int Methods GetDefaltSortForSort(int) ソートキー指示データ初期データセット public IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IKeywordAreaClass.ISortAreaClass.SortEventRec GetDefaltSortForSort(int index) Parameters index int Returns IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IKeywordAreaClass.ISortAreaClass.SortEventRec"
  },
  "api/Convenience.Models.ViewModels.KaikeiJisseki.KaikeiJissekiViewModel.KeywordAreaClass.html": {
    "href": "api/Convenience.Models.ViewModels.KaikeiJisseki.KaikeiJissekiViewModel.KeywordAreaClass.html",
    "title": "Class KaikeiJissekiViewModel.KeywordAreaClass | Convenience",
    "keywords": "Class KaikeiJissekiViewModel.KeywordAreaClass Namespace Convenience.Models.ViewModels.KaikeiJisseki Assembly Convenience.dll ソートキー・検索キーエリア管理用クラス public class KaikeiJissekiViewModel.KeywordAreaClass : IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IKeywordAreaClass Inheritance object KaikeiJissekiViewModel.KeywordAreaClass Implements IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IKeywordAreaClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KeywordAreaClass() public KeywordAreaClass() Properties KeyArea 検索キーエリア管理用 public IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IKeywordAreaClass.IKeyAreaClass KeyArea { get; set; } Property Value IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IKeywordAreaClass.IKeyAreaClass SortArea ソートキーエリア管理用 public IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IKeywordAreaClass.ISortAreaClass SortArea { get; set; } Property Value IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IKeywordAreaClass.ISortAreaClass"
  },
  "api/Convenience.Models.ViewModels.KaikeiJisseki.KaikeiJissekiViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.KaikeiJisseki.KaikeiJissekiViewModel.html",
    "title": "Class KaikeiJissekiViewModel | Convenience",
    "keywords": "Class KaikeiJissekiViewModel Namespace Convenience.Models.ViewModels.KaikeiJisseki Assembly Convenience.dll 会計実績検索ビューモデル public class KaikeiJissekiViewModel : IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>, ISharedTools Inheritance object KaikeiJissekiViewModel Implements IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass> ISharedTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KaikeiJissekiViewModel() コンストラクタ ソート・検索キーエリア管理用オブジェクト初期化 public KaikeiJissekiViewModel() Properties DataArea データ表示管理用 public IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IDataAreaClass DataArea { get; set; } Property Value IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IDataAreaClass KeywordArea ソートキー・検索キーエリア管理用 public IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IKeywordAreaClass KeywordArea { get; set; } Property Value IRetrivalViewModel<KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass>.IKeywordAreaClass"
  },
  "api/Convenience.Models.ViewModels.KaikeiJisseki.html": {
    "href": "api/Convenience.Models.ViewModels.KaikeiJisseki.html",
    "title": "Namespace Convenience.Models.ViewModels.KaikeiJisseki | Convenience",
    "keywords": "Namespace Convenience.Models.ViewModels.KaikeiJisseki Classes KaikeiJissekiViewModel 会計実績検索ビューモデル KaikeiJissekiViewModel.DataAreaClass KaikeiJissekiViewModel.DataAreaClass.KaikeiJissekiLineClass データ表示用リストの１レコード定義 KaikeiJissekiViewModel.KeywordAreaClass ソートキー・検索キーエリア管理用クラス KaikeiJissekiViewModel.KeywordAreaClass.KeyAreaClass KaikeiJissekiViewModel.KeywordAreaClass.SortAreaClass コンストラクター ソートキーエリア・検索キーエリア管理用オブジェクト初期化"
  },
  "api/Convenience.Models.ViewModels.NaigaiClassMaster.NaigaiClassMasterViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.NaigaiClassMaster.NaigaiClassMasterViewModel.html",
    "title": "Class NaigaiClassMasterViewModel | Convenience",
    "keywords": "Class NaigaiClassMasterViewModel Namespace Convenience.Models.ViewModels.NaigaiClassMaster Assembly Convenience.dll 内外区分マスタのビューモデル public class NaigaiClassMasterViewModel : IMasterRegistrationViewModel<NaigaiClassMasterService.PostMasterData>, IMasterRegistrationService<NaigaiClassMaster, NaigaiClassMasterService.PostMasterData, NaigaiClassMasterViewModel>.IMasterRegistrationSelectList Inheritance object NaigaiClassMasterViewModel Implements IMasterRegistrationViewModel<NaigaiClassMasterService.PostMasterData> IMasterRegistrationService<NaigaiClassMaster, NaigaiClassMasterService.PostMasterData, NaigaiClassMasterViewModel>.IMasterRegistrationSelectList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NaigaiClassMasterViewModel() デフォルトコンストラクタ（初期化） public NaigaiClassMasterViewModel() NaigaiClassMasterViewModel(ConvenienceContext) 依存性注入に対応したコンストラクタ public NaigaiClassMasterViewModel(ConvenienceContext context) Parameters context ConvenienceContext データベースコンテキスト Fields my private readonly IMasterRegistrationService<NaigaiClassMaster, NaigaiClassMasterService.PostMasterData, NaigaiClassMasterViewModel>.IMasterRegistrationSelectList my Field Value IMasterRegistrationService<NaigaiClassMaster, NaigaiClassMasterService.PostMasterData, NaigaiClassMasterViewModel>.IMasterRegistrationSelectList Properties IsNormal 処理が正常かどうか（正常=true） public bool? IsNormal { get; set; } Property Value bool? PostMasterDatas 投稿されたマスタデータ public IList<NaigaiClassMasterService.PostMasterData> PostMasterDatas { get; set; } Property Value IList<NaigaiClassMasterService.PostMasterData> Remark 処理結果の表示内容（データベース反映結果） public string? Remark { get; set; } Property Value string _context データベースコンテキスト（注：JSONシリアライズ対象外） [JsonIgnore] public ConvenienceContext _context { get; set; } Property Value ConvenienceContext"
  },
  "api/Convenience.Models.ViewModels.NaigaiClassMaster.html": {
    "href": "api/Convenience.Models.ViewModels.NaigaiClassMaster.html",
    "title": "Namespace Convenience.Models.ViewModels.NaigaiClassMaster | Convenience",
    "keywords": "Namespace Convenience.Models.ViewModels.NaigaiClassMaster Classes NaigaiClassMasterViewModel 内外区分マスタのビューモデル"
  },
  "api/Convenience.Models.ViewModels.Shiire.ShiireKeysViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.Shiire.ShiireKeysViewModel.html",
    "title": "Class ShiireKeysViewModel | Convenience",
    "keywords": "Class ShiireKeysViewModel Namespace Convenience.Models.ViewModels.Shiire Assembly Convenience.dll 仕入キービューモデル public class ShiireKeysViewModel Inheritance object ShiireKeysViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonId [MaxLength(20)] [Required] public string? ChumonId { get; set; } Property Value string ChumonIdList 注文コードリスト（注文残が残っているリスト格納用） public IList<SelectListItem> ChumonIdList { get; set; } Property Value IList<SelectListItem>"
  },
  "api/Convenience.Models.ViewModels.Shiire.ShiireViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.Shiire.ShiireViewModel.html",
    "title": "Class ShiireViewModel | Convenience",
    "keywords": "Class ShiireViewModel Namespace Convenience.Models.ViewModels.Shiire Assembly Convenience.dll 仕入ビューモデル public class ShiireViewModel Inheritance object ShiireViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonDate public DateOnly ChumonDate { get; set; } Property Value DateOnly ChumonId [MaxLength(20)] public string ChumonId { get; set; } Property Value string IsNormal 処理が正常がどうか（正常=true) public bool? IsNormal { get; set; } Property Value bool? Remark 処理結果（ＤＢ反映結果）表示内容 public string Remark { get; set; } Property Value string SeqByShiireDate public uint SeqByShiireDate { get; set; } Property Value uint ShiireDate public DateOnly ShiireDate { get; set; } Property Value DateOnly ShiireJissekis 仕入実績 public IList<ShiireJisseki> ShiireJissekis { get; set; } Property Value IList<ShiireJisseki> ShiireSakiId [MaxLength(10)] public string ShiireSakiId { get; set; } Property Value string ShiireSakiKaisya [MaxLength(30)] public string ShiireSakiKaisya { get; set; } Property Value string"
  },
  "api/Convenience.Models.ViewModels.Shiire.html": {
    "href": "api/Convenience.Models.ViewModels.Shiire.html",
    "title": "Namespace Convenience.Models.ViewModels.Shiire | Convenience",
    "keywords": "Namespace Convenience.Models.ViewModels.Shiire Classes ShiireKeysViewModel 仕入キービューモデル ShiireViewModel 仕入ビューモデル"
  },
  "api/Convenience.Models.ViewModels.ShiireJisseki.ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass.html": {
    "href": "api/Convenience.Models.ViewModels.ShiireJisseki.ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass.html",
    "title": "Class ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass | Convenience",
    "keywords": "Class ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass Namespace Convenience.Models.ViewModels.ShiireJisseki Assembly Convenience.dll データ表示用リストの１レコード定義 public class ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass : ShiireJisseki Inheritance object ShiireJisseki ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass Inherited Members ShiireJisseki.ChumonId ShiireJisseki.ShiireDate ShiireJisseki.SeqByShiireDate ShiireJisseki.ShiireDateTime ShiireJisseki.ShiireSakiId ShiireJisseki.ShiirePrdId ShiireJisseki.ShohinId ShiireJisseki.NonyuSu ShiireJisseki.NonyuSubalance ShiireJisseki.ChumonJissekiMeisaii ShiireJisseki.SokoZaiko ShiireJisseki.Version object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShiireJissekiLineClass() public ShiireJissekiLineClass() Properties ShiirePrdName [Required] public string ShiirePrdName { get; set; } Property Value string ShiireSakiKaisya [Required] public string ShiireSakiKaisya { get; set; } Property Value string ShohinName [Required] public string ShohinName { get; set; } Property Value string"
  },
  "api/Convenience.Models.ViewModels.ShiireJisseki.ShiireJissekiViewModel.DataAreaClass.html": {
    "href": "api/Convenience.Models.ViewModels.ShiireJisseki.ShiireJissekiViewModel.DataAreaClass.html",
    "title": "Class ShiireJissekiViewModel.DataAreaClass | Convenience",
    "keywords": "Class ShiireJissekiViewModel.DataAreaClass Namespace Convenience.Models.ViewModels.ShiireJisseki Assembly Convenience.dll データ表示管理用クラス public class ShiireJissekiViewModel.DataAreaClass : IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IDataAreaClass Inheritance object ShiireJissekiViewModel.DataAreaClass Implements IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IDataAreaClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DataAreaClass() コンストラクタ データ表示用リストの初期化 public DataAreaClass() Properties Lines データ表示用リスト public IEnumerable<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass> Lines { get; set; } Property Value IEnumerable<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass> SummaryLine public ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass SummaryLine { get; set; } Property Value ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass"
  },
  "api/Convenience.Models.ViewModels.ShiireJisseki.ShiireJissekiViewModel.KeywordAreaClass.KeyAreaClass.html": {
    "href": "api/Convenience.Models.ViewModels.ShiireJisseki.ShiireJissekiViewModel.KeywordAreaClass.KeyAreaClass.html",
    "title": "Class ShiireJissekiViewModel.KeywordAreaClass.KeyAreaClass | Convenience",
    "keywords": "Class ShiireJissekiViewModel.KeywordAreaClass.KeyAreaClass Namespace Convenience.Models.ViewModels.ShiireJisseki Assembly Convenience.dll 検索キー管理用クラス public class ShiireJissekiViewModel.KeywordAreaClass.KeyAreaClass : IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IKeywordAreaClass.IKeyAreaClass Inheritance object ShiireJissekiViewModel.KeywordAreaClass.KeyAreaClass Implements IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IKeywordAreaClass.IKeyAreaClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KeyAreaClass() 検索キーエリア管理用クラス public KeyAreaClass() Properties ComparisonOperatorList 比較演算子選択用 [JsonIgnore] public SelectList ComparisonOperatorList { get; set; } Property Value SelectList LineCountForSelectorOfWhere 検索キー入力最大行数 [JsonIgnore] public int LineCountForSelectorOfWhere { get; set; } Property Value int SelectWhereLeftSideList Where左辺用カラムセット用 [JsonIgnore] public SelectList SelectWhereLeftSideList { get; set; } Property Value SelectList SelecteWhereItemArray Where入力リスト初期化 public IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem[] SelecteWhereItemArray { get; set; } Property Value SelecteWhereItem[] Methods GetDefaltSortForWhere(int) 検索キー指示データ初期データセット 仕入日（6か月前以降）でセット public IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem GetDefaltSortForWhere(int index) Parameters index int Returns IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem"
  },
  "api/Convenience.Models.ViewModels.ShiireJisseki.ShiireJissekiViewModel.KeywordAreaClass.SortAreaClass.html": {
    "href": "api/Convenience.Models.ViewModels.ShiireJisseki.ShiireJissekiViewModel.KeywordAreaClass.SortAreaClass.html",
    "title": "Class ShiireJissekiViewModel.KeywordAreaClass.SortAreaClass | Convenience",
    "keywords": "Class ShiireJissekiViewModel.KeywordAreaClass.SortAreaClass Namespace Convenience.Models.ViewModels.ShiireJisseki Assembly Convenience.dll ソートエリア管理用クラス public class ShiireJissekiViewModel.KeywordAreaClass.SortAreaClass : IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IKeywordAreaClass.ISortAreaClass Inheritance object ShiireJissekiViewModel.KeywordAreaClass.SortAreaClass Implements IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IKeywordAreaClass.ISortAreaClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SortAreaClass() ソートキーエリア管理用クラス public SortAreaClass() Properties KeyEventList ソートキー指示データ管理用 public IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IKeywordAreaClass.ISortAreaClass.SortEventRec[] KeyEventList { get; set; } Property Value SortEventRec[] KeyList ソートキー一覧表示用 [JsonIgnore] public SelectList KeyList { get; set; } Property Value SelectList LineCountForSelectorOfOrder ソートキー入力最大行数 public int LineCountForSelectorOfOrder { get; set; } Property Value int Methods GetDefaltSortForSort(int) ソートキー指示データ初期データセット 仕入日付（昇順）・仕入SEQ（昇順）でセット public IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IKeywordAreaClass.ISortAreaClass.SortEventRec GetDefaltSortForSort(int index) Parameters index int Returns IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IKeywordAreaClass.ISortAreaClass.SortEventRec"
  },
  "api/Convenience.Models.ViewModels.ShiireJisseki.ShiireJissekiViewModel.KeywordAreaClass.html": {
    "href": "api/Convenience.Models.ViewModels.ShiireJisseki.ShiireJissekiViewModel.KeywordAreaClass.html",
    "title": "Class ShiireJissekiViewModel.KeywordAreaClass | Convenience",
    "keywords": "Class ShiireJissekiViewModel.KeywordAreaClass Namespace Convenience.Models.ViewModels.ShiireJisseki Assembly Convenience.dll ソートキー・検索キーエリア管理用クラス public class ShiireJissekiViewModel.KeywordAreaClass : IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IKeywordAreaClass Inheritance object ShiireJissekiViewModel.KeywordAreaClass Implements IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IKeywordAreaClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KeywordAreaClass() コンストラクター ソートキーエリア・検索キーエリア管理用オブジェクト初期化 public KeywordAreaClass() Properties KeyArea 検索キーエリア管理用 public IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IKeywordAreaClass.IKeyAreaClass KeyArea { get; set; } Property Value IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IKeywordAreaClass.IKeyAreaClass SortArea ソートキーエリア管理用 public IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IKeywordAreaClass.ISortAreaClass SortArea { get; set; } Property Value IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IKeywordAreaClass.ISortAreaClass"
  },
  "api/Convenience.Models.ViewModels.ShiireJisseki.ShiireJissekiViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.ShiireJisseki.ShiireJissekiViewModel.html",
    "title": "Class ShiireJissekiViewModel | Convenience",
    "keywords": "Class ShiireJissekiViewModel Namespace Convenience.Models.ViewModels.ShiireJisseki Assembly Convenience.dll 仕入実績検索ビューモデル public class ShiireJissekiViewModel : IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>, ISharedTools Inheritance object ShiireJissekiViewModel Implements IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass> ISharedTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShiireJissekiViewModel() コンストラクタ ソート・検索キーエリア管理用オブジェクト初期化 public ShiireJissekiViewModel() Properties DataArea データ表示管理用 public IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IDataAreaClass DataArea { get; set; } Property Value IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IDataAreaClass KeywordArea ソートキー・検索キーエリア管理用 public IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IKeywordAreaClass KeywordArea { get; set; } Property Value IRetrivalViewModel<ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass>.IKeywordAreaClass"
  },
  "api/Convenience.Models.ViewModels.ShiireJisseki.html": {
    "href": "api/Convenience.Models.ViewModels.ShiireJisseki.html",
    "title": "Namespace Convenience.Models.ViewModels.ShiireJisseki | Convenience",
    "keywords": "Namespace Convenience.Models.ViewModels.ShiireJisseki Classes ShiireJissekiViewModel 仕入実績検索ビューモデル ShiireJissekiViewModel.DataAreaClass データ表示管理用クラス ShiireJissekiViewModel.DataAreaClass.ShiireJissekiLineClass データ表示用リストの１レコード定義 ShiireJissekiViewModel.KeywordAreaClass ソートキー・検索キーエリア管理用クラス ShiireJissekiViewModel.KeywordAreaClass.KeyAreaClass 検索キー管理用クラス ShiireJissekiViewModel.KeywordAreaClass.SortAreaClass ソートエリア管理用クラス"
  },
  "api/Convenience.Models.ViewModels.ShiireMaster.ShiireMasterViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.ShiireMaster.ShiireMasterViewModel.html",
    "title": "Class ShiireMasterViewModel | Convenience",
    "keywords": "Class ShiireMasterViewModel Namespace Convenience.Models.ViewModels.ShiireMaster Assembly Convenience.dll 仕入マスタのビューモデル public class ShiireMasterViewModel : IMasterRegistrationViewModel<ShiireMasterService.PostMasterData>, IMasterRegistrationService<ShiireMaster, ShiireMasterService.PostMasterData, ShiireMasterViewModel>.IMasterRegistrationSelectList Inheritance object ShiireMasterViewModel Implements IMasterRegistrationViewModel<ShiireMasterService.PostMasterData> IMasterRegistrationService<ShiireMaster, ShiireMasterService.PostMasterData, ShiireMasterViewModel>.IMasterRegistrationSelectList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShiireMasterViewModel() デフォルトコンストラクタ（初期化） public ShiireMasterViewModel() ShiireMasterViewModel(ConvenienceContext) 依存性注入に対応したコンストラクタ（データベースコンテキストを受け取る） public ShiireMasterViewModel(ConvenienceContext context) Parameters context ConvenienceContext データベースコンテキスト Fields my private readonly IMasterRegistrationService<ShiireMaster, ShiireMasterService.PostMasterData, ShiireMasterViewModel>.IMasterRegistrationSelectList my Field Value IMasterRegistrationService<ShiireMaster, ShiireMasterService.PostMasterData, ShiireMasterViewModel>.IMasterRegistrationSelectList Properties IsNormal 処理が正常かどうか（正常 = true） public bool? IsNormal { get; set; } Property Value bool? PostMasterDatas Postされたマスタデータ public IList<ShiireMasterService.PostMasterData> PostMasterDatas { get; set; } Property Value IList<ShiireMasterService.PostMasterData> Remark 処理結果（データベース反映結果）に関する表示内容 public string? Remark { get; set; } Property Value string ShiireSakiList 仕入先リスト（選択リストアイテム） public IList<SelectListItem> ShiireSakiList { get; set; } Property Value IList<SelectListItem> ShohinList 商品リスト（選択リストアイテム） public IList<SelectListItem> ShohinList { get; set; } Property Value IList<SelectListItem> _context データベースコンテキスト（注：JSONシリアライズ対象外） [JsonIgnore] public ConvenienceContext _context { get; set; } Property Value ConvenienceContext Methods InitialAsync() public Task InitialAsync() Returns Task"
  },
  "api/Convenience.Models.ViewModels.ShiireMaster.html": {
    "href": "api/Convenience.Models.ViewModels.ShiireMaster.html",
    "title": "Namespace Convenience.Models.ViewModels.ShiireMaster | Convenience",
    "keywords": "Namespace Convenience.Models.ViewModels.ShiireMaster Classes ShiireMasterViewModel 仕入マスタのビューモデル"
  },
  "api/Convenience.Models.ViewModels.ShiireSakiMaster.ShiireSakiMasterViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.ShiireSakiMaster.ShiireSakiMasterViewModel.html",
    "title": "Class ShiireSakiMasterViewModel | Convenience",
    "keywords": "Class ShiireSakiMasterViewModel Namespace Convenience.Models.ViewModels.ShiireSakiMaster Assembly Convenience.dll 仕入先マスタで使用されるビューモデル public class ShiireSakiMasterViewModel : IMasterRegistrationViewModel<ShiireSakiMasterService.PostMasterData>, IMasterRegistrationService<ShiireSakiMaster, ShiireSakiMasterService.PostMasterData, ShiireSakiMasterViewModel>.IMasterRegistrationSelectList Inheritance object ShiireSakiMasterViewModel Implements IMasterRegistrationViewModel<ShiireSakiMasterService.PostMasterData> IMasterRegistrationService<ShiireSakiMaster, ShiireSakiMasterService.PostMasterData, ShiireSakiMasterViewModel>.IMasterRegistrationSelectList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShiireSakiMasterViewModel() デフォルトコンストラクタ public ShiireSakiMasterViewModel() ShiireSakiMasterViewModel(ConvenienceContext) 依存性注入コンストラクタ（ConvenienceContext を受け取る） public ShiireSakiMasterViewModel(ConvenienceContext context) Parameters context ConvenienceContext コンテキストオブジェクト Fields my インターフェース型の自身を保持（ビューモデルインスタンス用） private readonly IMasterRegistrationService<ShiireSakiMaster, ShiireSakiMasterService.PostMasterData, ShiireSakiMasterViewModel>.IMasterRegistrationSelectList my Field Value IMasterRegistrationService<ShiireSakiMaster, ShiireSakiMasterService.PostMasterData, ShiireSakiMasterViewModel>.IMasterRegistrationSelectList Properties IsNormal 処理が正常かどうかを示すフラグ（正常 = true） public bool? IsNormal { get; set; } Property Value bool? PostMasterDatas 保持データのリスト（登録データ） public IList<ShiireSakiMasterService.PostMasterData> PostMasterDatas { get; set; } Property Value IList<ShiireSakiMasterService.PostMasterData> Remark 処理結果（DBに反映された結果）に関する表示内容 public string? Remark { get; set; } Property Value string _context データベースコンテキスト [JsonIgnore] public ConvenienceContext _context { get; } Property Value ConvenienceContext"
  },
  "api/Convenience.Models.ViewModels.ShiireSakiMaster.html": {
    "href": "api/Convenience.Models.ViewModels.ShiireSakiMaster.html",
    "title": "Namespace Convenience.Models.ViewModels.ShiireSakiMaster | Convenience",
    "keywords": "Namespace Convenience.Models.ViewModels.ShiireSakiMaster Classes ShiireSakiMasterViewModel 仕入先マスタで使用されるビューモデル"
  },
  "api/Convenience.Models.ViewModels.ShohinMaster.ShohinMasterViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.ShohinMaster.ShohinMasterViewModel.html",
    "title": "Class ShohinMasterViewModel | Convenience",
    "keywords": "Class ShohinMasterViewModel Namespace Convenience.Models.ViewModels.ShohinMaster Assembly Convenience.dll 商品マスタのビューモデル public class ShohinMasterViewModel : IMasterRegistrationViewModel<ShohinMasterService.PostMasterData> Inheritance object ShohinMasterViewModel Implements IMasterRegistrationViewModel<ShohinMasterService.PostMasterData> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShohinMasterViewModel() デフォルトコンストラクタ（初期化） public ShohinMasterViewModel() Properties IsNormal 処理が正常かどうか（正常 = true） public bool? IsNormal { get; set; } Property Value bool? PostMasterDatas Postされたマスタデータ public IList<ShohinMasterService.PostMasterData> PostMasterDatas { get; set; } Property Value IList<ShohinMasterService.PostMasterData> Remark 処理結果（データベース反映結果）に関する表示内容 public string? Remark { get; set; } Property Value string"
  },
  "api/Convenience.Models.ViewModels.ShohinMaster.html": {
    "href": "api/Convenience.Models.ViewModels.ShohinMaster.html",
    "title": "Namespace Convenience.Models.ViewModels.ShohinMaster | Convenience",
    "keywords": "Namespace Convenience.Models.ViewModels.ShohinMaster Classes ShohinMasterViewModel 商品マスタのビューモデル"
  },
  "api/Convenience.Models.ViewModels.TentoHaraidashi.HaraidashiDateTimeAndIdMatching.html": {
    "href": "api/Convenience.Models.ViewModels.TentoHaraidashi.HaraidashiDateTimeAndIdMatching.html",
    "title": "Class HaraidashiDateTimeAndIdMatching | Convenience",
    "keywords": "Class HaraidashiDateTimeAndIdMatching Namespace Convenience.Models.ViewModels.TentoHaraidashi Assembly Convenience.dll 店頭払出キー入力に使うリストの内容 public class HaraidashiDateTimeAndIdMatching Inheritance object HaraidashiDateTimeAndIdMatching Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HaraidashiDateTimeAndIdMatching() public HaraidashiDateTimeAndIdMatching() HaraidashiDateTimeAndIdMatching(DateTime, string) public HaraidashiDateTimeAndIdMatching(DateTime HaraidashiDateTime, string TentoHaraidashiId) Parameters HaraidashiDateTime DateTime TentoHaraidashiId string Properties HaraidashiDateTime public DateTime HaraidashiDateTime { get; set; } Property Value DateTime TentoHaraidashiId public string? TentoHaraidashiId { get; set; } Property Value string"
  },
  "api/Convenience.Models.ViewModels.TentoHaraidashi.TentoHaraidashiViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.TentoHaraidashi.TentoHaraidashiViewModel.html",
    "title": "Class TentoHaraidashiViewModel | Convenience",
    "keywords": "Class TentoHaraidashiViewModel Namespace Convenience.Models.ViewModels.TentoHaraidashi Assembly Convenience.dll 注文明細ビューモデル public class TentoHaraidashiViewModel Inheritance object TentoHaraidashiViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HaraidashiDateAndId 店頭払出実績 public string? HaraidashiDateAndId { get; set; } Property Value string IsNormal public bool? IsNormal { get; set; } Property Value bool? Remark public string? Remark { get; set; } Property Value string ShohinMasters public IList<ShohinMaster>? ShohinMasters { get; set; } Property Value IList<ShohinMaster> TentoHaraidashiIdList public IList<SelectListItem> TentoHaraidashiIdList { get; set; } Property Value IList<SelectListItem>"
  },
  "api/Convenience.Models.ViewModels.TentoHaraidashi.html": {
    "href": "api/Convenience.Models.ViewModels.TentoHaraidashi.html",
    "title": "Namespace Convenience.Models.ViewModels.TentoHaraidashi | Convenience",
    "keywords": "Namespace Convenience.Models.ViewModels.TentoHaraidashi Classes HaraidashiDateTimeAndIdMatching 店頭払出キー入力に使うリストの内容 TentoHaraidashiViewModel 注文明細ビューモデル"
  },
  "api/Convenience.Models.ViewModels.TentoZaiko.TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine.html": {
    "href": "api/Convenience.Models.ViewModels.TentoZaiko.TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine.html",
    "title": "Class TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine | Convenience",
    "keywords": "Class TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine Namespace Convenience.Models.ViewModels.TentoZaiko Assembly Convenience.dll データ表示用リストの１レコード定義 public class TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine Inheritance object TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LastHaraidashiDate [Column(\"last_haraidashi_datetime\")] [Required] [DataType(DataType.DateTime)] public DateTime? LastHaraidashiDate { get; set; } Property Value DateTime? LastShireDateTime [Column(\"last_shiire_datetime\")] [Required] [DataType(DataType.DateTime)] public DateOnly LastShireDateTime { get; set; } Property Value DateOnly LastUriageDatetime [Column(\"last_uriage_datetime\")] [DataType(DataType.DateTime)] public DateTime? LastUriageDatetime { get; set; } Property Value DateTime? ShohinId [MaxLength(10)] [Required] public string? ShohinId { get; set; } Property Value string ShohinName [MaxLength(10)] [Required] public string? ShohinName { get; set; } Property Value string ZaikoSu [Column(\"zaiko_su\")] [Precision(7, 2)] public decimal ZaikoSu { get; set; } Property Value decimal"
  },
  "api/Convenience.Models.ViewModels.TentoZaiko.TentoZaikoViewModel.DataAreaClass.html": {
    "href": "api/Convenience.Models.ViewModels.TentoZaiko.TentoZaikoViewModel.DataAreaClass.html",
    "title": "Class TentoZaikoViewModel.DataAreaClass | Convenience",
    "keywords": "Class TentoZaikoViewModel.DataAreaClass Namespace Convenience.Models.ViewModels.TentoZaiko Assembly Convenience.dll データ表示管理用クラス public class TentoZaikoViewModel.DataAreaClass : IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IDataAreaClass Inheritance object TentoZaikoViewModel.DataAreaClass Implements IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IDataAreaClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DataAreaClass() コンストラクタ データ表示用リストの初期化 public DataAreaClass() Properties Lines データ表示用リスト public IEnumerable<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine> Lines { get; set; } Property Value IEnumerable<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine> SummaryLine public TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine SummaryLine { get; set; } Property Value TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine"
  },
  "api/Convenience.Models.ViewModels.TentoZaiko.TentoZaikoViewModel.KeywordAreaClass.KeyAreaClass.html": {
    "href": "api/Convenience.Models.ViewModels.TentoZaiko.TentoZaikoViewModel.KeywordAreaClass.KeyAreaClass.html",
    "title": "Class TentoZaikoViewModel.KeywordAreaClass.KeyAreaClass | Convenience",
    "keywords": "Class TentoZaikoViewModel.KeywordAreaClass.KeyAreaClass Namespace Convenience.Models.ViewModels.TentoZaiko Assembly Convenience.dll 検索キー管理用クラス public class TentoZaikoViewModel.KeywordAreaClass.KeyAreaClass : IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IKeywordAreaClass.IKeyAreaClass Inheritance object TentoZaikoViewModel.KeywordAreaClass.KeyAreaClass Implements IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IKeywordAreaClass.IKeyAreaClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KeyAreaClass() public KeyAreaClass() Properties ComparisonOperatorList 比較演算子選択用 [JsonIgnore] public SelectList ComparisonOperatorList { get; set; } Property Value SelectList LineCountForSelectorOfWhere 検索キー入力最大行数 public int LineCountForSelectorOfWhere { get; set; } Property Value int SelectWhereLeftSideList Where左辺用カラムセット用 [JsonIgnore] public SelectList SelectWhereLeftSideList { get; set; } Property Value SelectList SelecteWhereItemArray Where入力リスト初期化 public IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem[] SelecteWhereItemArray { get; set; } Property Value SelecteWhereItem[] Methods GetDefaltSortForWhere(int) 検索キー指示データ初期データセット public IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem GetDefaltSortForWhere(int index) Parameters index int Returns IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IKeywordAreaClass.IKeyAreaClass.SelecteWhereItem"
  },
  "api/Convenience.Models.ViewModels.TentoZaiko.TentoZaikoViewModel.KeywordAreaClass.SortAreaClass.html": {
    "href": "api/Convenience.Models.ViewModels.TentoZaiko.TentoZaikoViewModel.KeywordAreaClass.SortAreaClass.html",
    "title": "Class TentoZaikoViewModel.KeywordAreaClass.SortAreaClass | Convenience",
    "keywords": "Class TentoZaikoViewModel.KeywordAreaClass.SortAreaClass Namespace Convenience.Models.ViewModels.TentoZaiko Assembly Convenience.dll ソートエリア管理用クラス public class TentoZaikoViewModel.KeywordAreaClass.SortAreaClass : IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IKeywordAreaClass.ISortAreaClass Inheritance object TentoZaikoViewModel.KeywordAreaClass.SortAreaClass Implements IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IKeywordAreaClass.ISortAreaClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SortAreaClass() ソートキーエリア管理用クラス public SortAreaClass() Properties KeyEventList ソートキー指示データ管理用 public IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IKeywordAreaClass.ISortAreaClass.SortEventRec[] KeyEventList { get; set; } Property Value SortEventRec[] KeyList ソートキー一覧表示用 [JsonIgnore] public SelectList KeyList { get; set; } Property Value SelectList LineCountForSelectorOfOrder ソートキー入力最大行数 public int LineCountForSelectorOfOrder { get; set; } Property Value int Methods GetDefaltSortForSort(int) ソートキー指示データ初期データセット public IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IKeywordAreaClass.ISortAreaClass.SortEventRec GetDefaltSortForSort(int index) Parameters index int Returns IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IKeywordAreaClass.ISortAreaClass.SortEventRec"
  },
  "api/Convenience.Models.ViewModels.TentoZaiko.TentoZaikoViewModel.KeywordAreaClass.html": {
    "href": "api/Convenience.Models.ViewModels.TentoZaiko.TentoZaikoViewModel.KeywordAreaClass.html",
    "title": "Class TentoZaikoViewModel.KeywordAreaClass | Convenience",
    "keywords": "Class TentoZaikoViewModel.KeywordAreaClass Namespace Convenience.Models.ViewModels.TentoZaiko Assembly Convenience.dll ソートキー・検索キーエリア管理用クラス public class TentoZaikoViewModel.KeywordAreaClass : IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IKeywordAreaClass Inheritance object TentoZaikoViewModel.KeywordAreaClass Implements IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IKeywordAreaClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KeywordAreaClass() コンストラクター ソートキーエリア・検索キーエリア管理用オブジェクト初期化 public KeywordAreaClass() Properties KeyArea 検索キーエリア管理用 public IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IKeywordAreaClass.IKeyAreaClass KeyArea { get; set; } Property Value IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IKeywordAreaClass.IKeyAreaClass SortArea ソートキーエリア管理用 public IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IKeywordAreaClass.ISortAreaClass SortArea { get; set; } Property Value IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IKeywordAreaClass.ISortAreaClass"
  },
  "api/Convenience.Models.ViewModels.TentoZaiko.TentoZaikoViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.TentoZaiko.TentoZaikoViewModel.html",
    "title": "Class TentoZaikoViewModel | Convenience",
    "keywords": "Class TentoZaikoViewModel Namespace Convenience.Models.ViewModels.TentoZaiko Assembly Convenience.dll 店頭在庫検索ビューモデル public class TentoZaikoViewModel : IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>, ISharedTools Inheritance object TentoZaikoViewModel Implements IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine> ISharedTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TentoZaikoViewModel() コンストラクタ ソート・検索キーエリア管理用オブジェクト初期化 public TentoZaikoViewModel() Properties DataArea データ表示管理用 public IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IDataAreaClass DataArea { get; set; } Property Value IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IDataAreaClass KeywordArea ソートキー・検索キーエリア管理用 public IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IKeywordAreaClass KeywordArea { get; set; } Property Value IRetrivalViewModel<TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine>.IKeywordAreaClass"
  },
  "api/Convenience.Models.ViewModels.TentoZaiko.html": {
    "href": "api/Convenience.Models.ViewModels.TentoZaiko.html",
    "title": "Namespace Convenience.Models.ViewModels.TentoZaiko | Convenience",
    "keywords": "Namespace Convenience.Models.ViewModels.TentoZaiko Classes TentoZaikoViewModel 店頭在庫検索ビューモデル TentoZaikoViewModel.DataAreaClass データ表示管理用クラス TentoZaikoViewModel.DataAreaClass.TentoZaIkoLine データ表示用リストの１レコード定義 TentoZaikoViewModel.KeywordAreaClass ソートキー・検索キーエリア管理用クラス TentoZaikoViewModel.KeywordAreaClass.KeyAreaClass 検索キー管理用クラス TentoZaikoViewModel.KeywordAreaClass.SortAreaClass ソートエリア管理用クラス"
  },
  "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.KeyEventRec.html": {
    "href": "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.KeyEventRec.html",
    "title": "Class ZaikoViewModel.KeyEventRec | Convenience",
    "keywords": "Class ZaikoViewModel.KeyEventRec Namespace Convenience.Models.ViewModels.Zaiko Assembly Convenience.dll ソートキー選択結果セット用 public class ZaikoViewModel.KeyEventRec Inheritance object ZaikoViewModel.KeyEventRec Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Descending public bool Descending { get; set; } Property Value bool KeyEventData public string? KeyEventData { get; set; } Property Value string"
  },
  "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.SelecteWhereItem.html": {
    "href": "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.SelecteWhereItem.html",
    "title": "Class ZaikoViewModel.SelecteWhereItem | Convenience",
    "keywords": "Class ZaikoViewModel.SelecteWhereItem Namespace Convenience.Models.ViewModels.Zaiko Assembly Convenience.dll Where指示選択結果セット用 public class ZaikoViewModel.SelecteWhereItem Inheritance object ZaikoViewModel.SelecteWhereItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ComparisonOperator [MaxLength(2)] public string? ComparisonOperator { get; set; } Property Value string LeftSide public string? LeftSide { get; set; } Property Value string RightSide public string? RightSide { get; set; } Property Value string"
  },
  "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.ZaikoListLine.html": {
    "href": "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.ZaikoListLine.html",
    "title": "Class ZaikoViewModel.ZaikoListLine | Convenience",
    "keywords": "Class ZaikoViewModel.ZaikoListLine Namespace Convenience.Models.ViewModels.Zaiko Assembly Convenience.dll 倉庫在庫・注文実績明細変策用レコード public class ZaikoViewModel.ZaikoListLine Inheritance object ZaikoViewModel.ZaikoListLine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonZan public decimal? ChumonZan { get; set; } Property Value decimal? LastDeliveryDate public DateOnly? LastDeliveryDate { get; set; } Property Value DateOnly? LastShiireDate public DateOnly LastShiireDate { get; set; } Property Value DateOnly ShiirePrdId public string ShiirePrdId { get; set; } Property Value string ShiireSakiId public string ShiireSakiId { get; set; } Property Value string ShohinId public string ShohinId { get; set; } Property Value string ShohinName public string? ShohinName { get; set; } Property Value string SokoZaikoCaseSu public decimal SokoZaikoCaseSu { get; set; } Property Value decimal SokoZaikoSu public decimal SokoZaikoSu { get; set; } Property Value decimal"
  },
  "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.html",
    "title": "Class ZaikoViewModel | Convenience",
    "keywords": "Class ZaikoViewModel Namespace Convenience.Models.ViewModels.Zaiko Assembly Convenience.dll 在庫検索用ビューモデル public class ZaikoViewModel Inheritance object ZaikoViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ZaikoViewModel() コンストラクタ（なし） public ZaikoViewModel() Fields ComparisonOperatorList 比較演算子選択用 public SelectList ComparisonOperatorList Field Value SelectList KeyList ソート指示選択用一覧（画面表示と選択用） public SelectList KeyList Field Value SelectList LineCountForSelectorOfOderBy ソート指示項目の最大値 private const int LineCountForSelectorOfOderBy = 3 Field Value int LineCountForSelectorOfWhere Where入力行数 private const int LineCountForSelectorOfWhere = 6 Field Value int SelectWhereLeftSideList Where左辺用カラムセット用 public SelectList SelectWhereLeftSideList Field Value SelectList Properties KeyEventList ソートキー選択結果セット用を使ってリストを初期化 public ZaikoViewModel.KeyEventRec[] KeyEventList { get; set; } Property Value KeyEventRec[] SelecteWhereItemArray Where入力リスト初期化 public ZaikoViewModel.SelecteWhereItem[] SelecteWhereItemArray { get; set; } Property Value SelecteWhereItem[] ZaikoLine public ZaikoViewModel.ZaikoListLine ZaikoLine { get; set; } Property Value ZaikoViewModel.ZaikoListLine ZaikoListLines 倉庫在庫・注文実績明細変策用レコードのリスト（検索結果がここに入る） public IList<ZaikoViewModel.ZaikoListLine> ZaikoListLines { get; set; } Property Value IList<ZaikoViewModel.ZaikoListLine>"
  },
  "api/Convenience.Models.ViewModels.Zaiko.html": {
    "href": "api/Convenience.Models.ViewModels.Zaiko.html",
    "title": "Namespace Convenience.Models.ViewModels.Zaiko | Convenience",
    "keywords": "Namespace Convenience.Models.ViewModels.Zaiko Classes ZaikoViewModel 在庫検索用ビューモデル ZaikoViewModel.KeyEventRec ソートキー選択結果セット用 ZaikoViewModel.SelecteWhereItem Where指示選択結果セット用 ZaikoViewModel.ZaikoListLine 倉庫在庫・注文実績明細変策用レコード"
  },
  "api/Convenience.Models.html": {
    "href": "api/Convenience.Models.html",
    "title": "Namespace Convenience.Models | Convenience",
    "keywords": "Namespace Convenience.Models Classes ErrorViewModel ƒGƒ‰\u0081[ƒy\u0081[ƒW—pƒrƒ…\u0081[ƒ‚ƒfƒ‹ Menu メニュークラス MenuItem メニューアイテムクラス"
  },
  "api/Convenience.Properties.Resources.html": {
    "href": "api/Convenience.Properties.Resources.html",
    "title": "Class Resources | Convenience",
    "keywords": "Class Resources Namespace Convenience.Properties Assembly Convenience.dll ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。 internal class Resources Inheritance object Resources Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Resources() internal Resources() Fields resourceCulture private static CultureInfo resourceCulture Field Value CultureInfo resourceMan private static ResourceManager resourceMan Field Value ResourceManager Properties Culture すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします 現在のスレッドの CurrentUICulture プロパティをオーバーライドします。 internal static CultureInfo Culture { get; set; } Property Value CultureInfo ResourceManager このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。 internal static ResourceManager ResourceManager { get; } Property Value ResourceManager"
  },
  "api/Convenience.Properties.html": {
    "href": "api/Convenience.Properties.html",
    "title": "Namespace Convenience.Properties | Convenience",
    "keywords": "Namespace Convenience.Properties Classes Resources ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。"
  },
  "api/Convenience.Views.Shiire.ShiireKeyInputModel.html": {
    "href": "api/Convenience.Views.Shiire.ShiireKeyInputModel.html",
    "title": "Class ShiireKeyInputModel | Convenience",
    "keywords": "Class ShiireKeyInputModel Namespace Convenience.Views.Shiire Assembly Convenience.dll public class ShiireKeyInputModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Inheritance object PageModel ShiireKeyInputModel Implements IAsyncPageFilter IPageFilter IFilterMetadata Inherited Members PageModel.TryUpdateModelAsync<TModel>(TModel) PageModel.TryUpdateModelAsync<TModel>(TModel, string) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) PageModel.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) PageModel.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) PageModel.TryUpdateModelAsync(object, Type, string) PageModel.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) PageModel.BadRequest() PageModel.BadRequest(object) PageModel.BadRequest(ModelStateDictionary) PageModel.Challenge() PageModel.Challenge(params string[]) PageModel.Challenge(AuthenticationProperties) PageModel.Challenge(AuthenticationProperties, params string[]) PageModel.Content(string) PageModel.Content(string, string) PageModel.Content(string, string, Encoding) PageModel.Content(string, MediaTypeHeaderValue) PageModel.Forbid() PageModel.Forbid(params string[]) PageModel.Forbid(AuthenticationProperties) PageModel.Forbid(AuthenticationProperties, params string[]) PageModel.File(byte[], string) PageModel.File(byte[], string, string) PageModel.File(Stream, string) PageModel.File(Stream, string, string) PageModel.File(string, string) PageModel.File(string, string, string) PageModel.LocalRedirect(string) PageModel.LocalRedirectPermanent(string) PageModel.LocalRedirectPreserveMethod(string) PageModel.LocalRedirectPermanentPreserveMethod(string) PageModel.NotFound() PageModel.NotFound(object) PageModel.Page() PageModel.PhysicalFile(string, string) PageModel.PhysicalFile(string, string, string) PageModel.Redirect(string) PageModel.RedirectPermanent(string) PageModel.RedirectPreserveMethod(string) PageModel.RedirectPermanentPreserveMethod(string) PageModel.RedirectToAction(string) PageModel.RedirectToAction(string, object) PageModel.RedirectToAction(string, string) PageModel.RedirectToAction(string, string, object) PageModel.RedirectToAction(string, string, string) PageModel.RedirectToAction(string, string, object, string) PageModel.RedirectToActionPreserveMethod(string, string, object, string) PageModel.RedirectToActionPermanent(string) PageModel.RedirectToActionPermanent(string, object) PageModel.RedirectToActionPermanent(string, string) PageModel.RedirectToActionPermanent(string, string, string) PageModel.RedirectToActionPermanent(string, string, object) PageModel.RedirectToActionPermanent(string, string, object, string) PageModel.RedirectToActionPermanentPreserveMethod(string, string, object, string) PageModel.RedirectToRoute(string) PageModel.RedirectToRoute(object) PageModel.RedirectToRoute(string, object) PageModel.RedirectToRoute(string, string) PageModel.RedirectToRoute(string, object, string) PageModel.RedirectToRoutePreserveMethod(string, object, string) PageModel.RedirectToRoutePermanent(string) PageModel.RedirectToRoutePermanent(object) PageModel.RedirectToRoutePermanent(string, object) PageModel.RedirectToRoutePermanent(string, string) PageModel.RedirectToRoutePermanent(string, object, string) PageModel.RedirectToRoutePermanentPreserveMethod(string, object, string) PageModel.RedirectToPage() PageModel.RedirectToPage(object) PageModel.RedirectToPage(string) PageModel.RedirectToPage(string, string) PageModel.RedirectToPage(string, string, object) PageModel.RedirectToPage(string, object) PageModel.RedirectToPage(string, string, string) PageModel.RedirectToPage(string, string, object, string) PageModel.RedirectToPagePermanent(string) PageModel.RedirectToPagePermanent(string, object) PageModel.RedirectToPagePermanent(string, string) PageModel.RedirectToPagePermanent(string, string, object) PageModel.RedirectToPagePermanent(string, string, string) PageModel.RedirectToPagePermanent(string, object, string) PageModel.RedirectToPagePermanent(string, string, object, string) PageModel.RedirectToPagePreserveMethod(string, string, object, string) PageModel.RedirectToPagePermanentPreserveMethod(string, string, object, string) PageModel.SignIn(ClaimsPrincipal, string) PageModel.SignIn(ClaimsPrincipal, AuthenticationProperties, string) PageModel.SignOut(params string[]) PageModel.SignOut(AuthenticationProperties, params string[]) PageModel.StatusCode(int) PageModel.StatusCode(int, object) PageModel.Unauthorized() PageModel.Partial(string) PageModel.Partial(string, object) PageModel.ViewComponent(string) PageModel.ViewComponent(Type) PageModel.ViewComponent(string, object) PageModel.ViewComponent(Type, object) PageModel.TryValidateModel(object) PageModel.TryValidateModel(object, string) PageModel.OnPageHandlerSelected(PageHandlerSelectedContext) PageModel.OnPageHandlerExecuting(PageHandlerExecutingContext) PageModel.OnPageHandlerExecuted(PageHandlerExecutedContext) PageModel.OnPageHandlerSelectionAsync(PageHandlerSelectedContext) PageModel.OnPageHandlerExecutionAsync(PageHandlerExecutingContext, PageHandlerExecutionDelegate) PageModel.PageContext PageModel.HttpContext PageModel.Request PageModel.Response PageModel.RouteData PageModel.ModelState PageModel.User PageModel.TempData PageModel.Url PageModel.MetadataProvider PageModel.ViewData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnGet() public void OnGet()"
  },
  "api/Convenience.Views.Shiire.html": {
    "href": "api/Convenience.Views.Shiire.html",
    "title": "Namespace Convenience.Views.Shiire | Convenience",
    "keywords": "Namespace Convenience.Views.Shiire Classes ShiireKeyInputModel"
  },
  "api/System.Text.RegularExpressions.Generated.ChumonRegex_0.RunnerFactory.Runner.html": {
    "href": "api/System.Text.RegularExpressions.Generated.ChumonRegex_0.RunnerFactory.Runner.html",
    "title": "Class ChumonRegex_0.RunnerFactory.Runner | Convenience",
    "keywords": "Class ChumonRegex_0.RunnerFactory.Runner Namespace System.Text.RegularExpressions.Generated Assembly Convenience.dll Provides the runner that contains the custom logic implementing the specified regular expression. private sealed class ChumonRegex_0.RunnerFactory.Runner : RegexRunner Inheritance object RegexRunner ChumonRegex_0.RunnerFactory.Runner Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Methods Scan(ReadOnlySpan<char>) Scan the inputSpan starting from base.runtextstart for the next match. protected override void Scan(ReadOnlySpan<char> inputSpan) Parameters inputSpan ReadOnlySpan<char> The text being scanned by the regular expression. TryFindNextPossibleStartingPosition(ReadOnlySpan<char>) Search inputSpan starting from base.runtextpos for the next location a match could possibly start. private bool TryFindNextPossibleStartingPosition(ReadOnlySpan<char> inputSpan) Parameters inputSpan ReadOnlySpan<char> The text being scanned by the regular expression. Returns bool true if a possible match was found; false if no more matches are possible. TryMatchAtCurrentPosition(ReadOnlySpan<char>) Determine whether inputSpan at base.runtextpos is a match for the regular expression. private bool TryMatchAtCurrentPosition(ReadOnlySpan<char> inputSpan) Parameters inputSpan ReadOnlySpan<char> The text being scanned by the regular expression. Returns bool true if the regular expression matches at the current position; otherwise, false."
  },
  "api/System.Text.RegularExpressions.Generated.ChumonRegex_0.RunnerFactory.html": {
    "href": "api/System.Text.RegularExpressions.Generated.ChumonRegex_0.RunnerFactory.html",
    "title": "Class ChumonRegex_0.RunnerFactory | Convenience",
    "keywords": "Class ChumonRegex_0.RunnerFactory Namespace System.Text.RegularExpressions.Generated Assembly Convenience.dll Provides a factory for creating RegexRunner instances to be used by methods on Regex. private sealed class ChumonRegex_0.RunnerFactory : RegexRunnerFactory Inheritance object RegexRunnerFactory ChumonRegex_0.RunnerFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Methods CreateInstance() Creates an instance of a RegexRunner used by methods on Regex. protected override RegexRunner CreateInstance() Returns RegexRunner"
  },
  "api/System.Text.RegularExpressions.Generated.ChumonRegex_0.html": {
    "href": "api/System.Text.RegularExpressions.Generated.ChumonRegex_0.html",
    "title": "Class ChumonRegex_0 | Convenience",
    "keywords": "Class ChumonRegex_0 Namespace System.Text.RegularExpressions.Generated Assembly Convenience.dll Custom Regex-derived type for the ChumonRegex method. internal sealed class ChumonRegex_0 : Regex, ISerializable Inheritance object Regex ChumonRegex_0 Implements ISerializable Inherited Members Regex.InfiniteMatchTimeout Regex.CompileToAssembly(RegexCompilationInfo[], AssemblyName) Regex.CompileToAssembly(RegexCompilationInfo[], AssemblyName, CustomAttributeBuilder[]) Regex.CompileToAssembly(RegexCompilationInfo[], AssemblyName, CustomAttributeBuilder[], string) Regex.Count(string) Regex.Count(ReadOnlySpan<char>) Regex.Count(ReadOnlySpan<char>, int) Regex.Count(string, string) Regex.Count(string, string, RegexOptions) Regex.Count(string, string, RegexOptions, TimeSpan) Regex.Count(ReadOnlySpan<char>, string) Regex.Count(ReadOnlySpan<char>, string, RegexOptions) Regex.Count(ReadOnlySpan<char>, string, RegexOptions, TimeSpan) Regex.Escape(string) Regex.EnumerateMatches(ReadOnlySpan<char>) Regex.EnumerateMatches(ReadOnlySpan<char>, int) Regex.EnumerateMatches(ReadOnlySpan<char>, string) Regex.EnumerateMatches(ReadOnlySpan<char>, string, RegexOptions) Regex.EnumerateMatches(ReadOnlySpan<char>, string, RegexOptions, TimeSpan) Regex.GetGroupNames() Regex.GetGroupNumbers() Regex.GroupNameFromNumber(int) Regex.GroupNumberFromName(string) Regex.IsMatch(ReadOnlySpan<char>) Regex.IsMatch(ReadOnlySpan<char>, int) Regex.IsMatch(ReadOnlySpan<char>, string) Regex.IsMatch(ReadOnlySpan<char>, string, RegexOptions) Regex.IsMatch(ReadOnlySpan<char>, string, RegexOptions, TimeSpan) Regex.IsMatch(string) Regex.IsMatch(string, int) Regex.IsMatch(string, string) Regex.IsMatch(string, string, RegexOptions) Regex.IsMatch(string, string, RegexOptions, TimeSpan) Regex.Match(string) Regex.Match(string, int) Regex.Match(string, int, int) Regex.Match(string, string) Regex.Match(string, string, RegexOptions) Regex.Match(string, string, RegexOptions, TimeSpan) Regex.Matches(string) Regex.Matches(string, int) Regex.Matches(string, string) Regex.Matches(string, string, RegexOptions) Regex.Matches(string, string, RegexOptions, TimeSpan) Regex.Replace(string, string) Regex.Replace(string, string, int) Regex.Replace(string, string, int, int) Regex.Replace(string, string, string) Regex.Replace(string, string, string, RegexOptions) Regex.Replace(string, string, string, RegexOptions, TimeSpan) Regex.Replace(string, string, MatchEvaluator) Regex.Replace(string, string, MatchEvaluator, RegexOptions) Regex.Replace(string, string, MatchEvaluator, RegexOptions, TimeSpan) Regex.Replace(string, MatchEvaluator) Regex.Replace(string, MatchEvaluator, int) Regex.Replace(string, MatchEvaluator, int, int) Regex.Split(string) Regex.Split(string, int) Regex.Split(string, int, int) Regex.Split(string, string) Regex.Split(string, string, RegexOptions) Regex.Split(string, string, RegexOptions, TimeSpan) Regex.ToString() Regex.Unescape(string) Regex.CacheSize Regex.MatchTimeout Regex.Options Regex.RightToLeft object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Constructors ChumonRegex_0() Initializes the instance. private ChumonRegex_0() Fields Instance Cached, thread-safe singleton instance. internal static readonly ChumonRegex_0 Instance Field Value ChumonRegex_0"
  },
  "api/System.Text.RegularExpressions.Generated.Utilities.html": {
    "href": "api/System.Text.RegularExpressions.Generated.Utilities.html",
    "title": "Class Utilities | Convenience",
    "keywords": "Class Utilities Namespace System.Text.RegularExpressions.Generated Assembly Convenience.dll Helper methods used by generated Regex-derived implementations. internal static class Utilities Inheritance object Utilities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields s_defaultTimeout Default timeout value set in AppContext, or InfiniteMatchTimeout if none was set. internal static readonly TimeSpan s_defaultTimeout Field Value TimeSpan s_hasTimeout Whether s_defaultTimeout is non-infinite. internal static readonly bool s_hasTimeout Field Value bool"
  },
  "api/System.Text.RegularExpressions.Generated.html": {
    "href": "api/System.Text.RegularExpressions.Generated.html",
    "title": "Namespace System.Text.RegularExpressions.Generated | Convenience",
    "keywords": "Namespace System.Text.RegularExpressions.Generated Classes ChumonRegex_0 Custom Regex-derived type for the ChumonRegex method. ChumonRegex_0.RunnerFactory Provides a factory for creating RegexRunner instances to be used by methods on Regex. ChumonRegex_0.RunnerFactory.Runner Provides the runner that contains the custom logic implementing the specified regular expression. Utilities Helper methods used by generated Regex-derived implementations."
  }
}