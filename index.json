{
  "api/AspNetCoreGeneratedDocument.Views_Chumon_ChumonMeisai.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Chumon_ChumonMeisai.html",
    "title": "Class Views_Chumon_ChumonMeisai | Convenience",
    "keywords": "Class Views_Chumon_ChumonMeisai Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Chumon/ChumonMeisai.cshtml\")] internal sealed class Views_Chumon_ChumonMeisai : RazorPage<ChumonViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ChumonViewModel> Views_Chumon_ChumonMeisai Implements IRazorPage Inherited Members RazorPage<ChumonViewModel>.Model RazorPage<ChumonViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper private ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper Field Value ValidationMessageTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_10 private static readonly TagHelperAttribute __tagHelperAttribute_10 Field Value TagHelperAttribute __tagHelperAttribute_11 private static readonly TagHelperAttribute __tagHelperAttribute_11 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperAttribute_9 private static readonly TagHelperAttribute __tagHelperAttribute_9 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ChumonViewModel> Html { get; private set; } Property Value IHtmlHelper<ChumonViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Chumon_KeyInput.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Chumon_KeyInput.html",
    "title": "Class Views_Chumon_KeyInput | Convenience",
    "keywords": "Class Views_Chumon_KeyInput Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Chumon/KeyInput.cshtml\")] internal sealed class Views_Chumon_KeyInput : RazorPage<ChumonKeysViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ChumonKeysViewModel> Views_Chumon_KeyInput Implements IRazorPage Inherited Members RazorPage<ChumonKeysViewModel>.Model RazorPage<ChumonKeysViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper private OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper Field Value OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper private SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper Field Value SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper private ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper Field Value ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper private ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper Field Value ValidationSummaryTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ChumonKeysViewModel> Html { get; private set; } Property Value IHtmlHelper<ChumonKeysViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Home_Index.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Home_Index.html",
    "title": "Class Views_Home_Index | Convenience",
    "keywords": "Class Views_Home_Index Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Home/Index.cshtml\")] internal sealed class Views_Home_Index : RazorPage<Menu>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<Menu> Views_Home_Index Implements IRazorPage Inherited Members RazorPage<Menu>.Model RazorPage<Menu>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<Menu> Html { get; private set; } Property Value IHtmlHelper<Menu> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Home_Privacy.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Home_Privacy.html",
    "title": "Class Views_Home_Privacy | Convenience",
    "keywords": "Class Views_Home_Privacy Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Home/Privacy.cshtml\")] internal sealed class Views_Home_Privacy : RazorPage<dynamic>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<dynamic> Views_Home_Privacy Implements IRazorPage Inherited Members RazorPage<dynamic>.Model RazorPage<dynamic>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<dynamic> Html { get; private set; } Property Value IHtmlHelper<dynamic> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Kaikei_Kaikei.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Kaikei_Kaikei.html",
    "title": "Class Views_Kaikei_Kaikei | Convenience",
    "keywords": "Class Views_Kaikei_Kaikei Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Kaikei/Kaikei.cshtml\")] internal sealed class Views_Kaikei_Kaikei : RazorPage<KaikeiViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<KaikeiViewModel> Views_Kaikei_Kaikei Implements IRazorPage Inherited Members RazorPage<KaikeiViewModel>.Model RazorPage<KaikeiViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper private FormActionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper Field Value FormActionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper private OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper Field Value OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper private SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper Field Value SelectTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_10 private static readonly TagHelperAttribute __tagHelperAttribute_10 Field Value TagHelperAttribute __tagHelperAttribute_11 private static readonly TagHelperAttribute __tagHelperAttribute_11 Field Value TagHelperAttribute __tagHelperAttribute_12 private static readonly TagHelperAttribute __tagHelperAttribute_12 Field Value TagHelperAttribute __tagHelperAttribute_13 private static readonly TagHelperAttribute __tagHelperAttribute_13 Field Value TagHelperAttribute __tagHelperAttribute_14 private static readonly TagHelperAttribute __tagHelperAttribute_14 Field Value TagHelperAttribute __tagHelperAttribute_15 private static readonly TagHelperAttribute __tagHelperAttribute_15 Field Value TagHelperAttribute __tagHelperAttribute_16 private static readonly TagHelperAttribute __tagHelperAttribute_16 Field Value TagHelperAttribute __tagHelperAttribute_17 private static readonly TagHelperAttribute __tagHelperAttribute_17 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperAttribute_9 private static readonly TagHelperAttribute __tagHelperAttribute_9 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<KaikeiViewModel> Html { get; private set; } Property Value IHtmlHelper<KaikeiViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Shared_Error.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Shared_Error.html",
    "title": "Class Views_Shared_Error | Convenience",
    "keywords": "Class Views_Shared_Error Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Shared/Error.cshtml\")] internal sealed class Views_Shared_Error : RazorPage<ErrorViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ErrorViewModel> Views_Shared_Error Implements IRazorPage Inherited Members RazorPage<ErrorViewModel>.Model RazorPage<ErrorViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper private HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper Field Value HeadTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ErrorViewModel> Html { get; private set; } Property Value IHtmlHelper<ErrorViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Shared__Layout.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Shared__Layout.html",
    "title": "Class Views_Shared__Layout | Convenience",
    "keywords": "Class Views_Shared__Layout Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Shared/_Layout.cshtml\")] internal sealed class Views_Shared__Layout : RazorPage<dynamic>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<dynamic> Views_Shared__Layout Implements IRazorPage Inherited Members RazorPage<dynamic>.Model RazorPage<dynamic>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper private BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper Field Value BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper private HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper Field Value HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper private AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper Field Value AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper private LinkTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper Field Value LinkTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_10 private static readonly TagHelperAttribute __tagHelperAttribute_10 Field Value TagHelperAttribute __tagHelperAttribute_11 private static readonly TagHelperAttribute __tagHelperAttribute_11 Field Value TagHelperAttribute __tagHelperAttribute_12 private static readonly TagHelperAttribute __tagHelperAttribute_12 Field Value TagHelperAttribute __tagHelperAttribute_13 private static readonly TagHelperAttribute __tagHelperAttribute_13 Field Value TagHelperAttribute __tagHelperAttribute_14 private static readonly TagHelperAttribute __tagHelperAttribute_14 Field Value TagHelperAttribute __tagHelperAttribute_15 private static readonly TagHelperAttribute __tagHelperAttribute_15 Field Value TagHelperAttribute __tagHelperAttribute_16 private static readonly TagHelperAttribute __tagHelperAttribute_16 Field Value TagHelperAttribute __tagHelperAttribute_17 private static readonly TagHelperAttribute __tagHelperAttribute_17 Field Value TagHelperAttribute __tagHelperAttribute_18 private static readonly TagHelperAttribute __tagHelperAttribute_18 Field Value TagHelperAttribute __tagHelperAttribute_19 private static readonly TagHelperAttribute __tagHelperAttribute_19 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperAttribute_9 private static readonly TagHelperAttribute __tagHelperAttribute_9 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<dynamic> Html { get; private set; } Property Value IHtmlHelper<dynamic> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Shared__ValidationScriptsPartial.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Shared__ValidationScriptsPartial.html",
    "title": "Class Views_Shared__ValidationScriptsPartial | Convenience",
    "keywords": "Class Views_Shared__ValidationScriptsPartial Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Shared/_ValidationScriptsPartial.cshtml\")] internal sealed class Views_Shared__ValidationScriptsPartial : RazorPage<dynamic>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<dynamic> Views_Shared__ValidationScriptsPartial Implements IRazorPage Inherited Members RazorPage<dynamic>.Model RazorPage<dynamic>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<dynamic> Html { get; private set; } Property Value IHtmlHelper<dynamic> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Shiire_Shiire.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Shiire_Shiire.html",
    "title": "Class Views_Shiire_Shiire | Convenience",
    "keywords": "Class Views_Shiire_Shiire Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Shiire/Shiire.cshtml\")] internal sealed class Views_Shiire_Shiire : RazorPage<ShiireViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ShiireViewModel> Views_Shiire_Shiire Implements IRazorPage Inherited Members RazorPage<ShiireViewModel>.Model RazorPage<ShiireViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper private ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper Field Value ValidationMessageTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperAttribute_9 private static readonly TagHelperAttribute __tagHelperAttribute_9 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ShiireViewModel> Html { get; private set; } Property Value IHtmlHelper<ShiireViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Shiire_ShiireKeyInput.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Shiire_ShiireKeyInput.html",
    "title": "Class Views_Shiire_ShiireKeyInput | Convenience",
    "keywords": "Class Views_Shiire_ShiireKeyInput Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Shiire/ShiireKeyInput.cshtml\")] internal sealed class Views_Shiire_ShiireKeyInput : RazorPage<ShiireKeysViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ShiireKeysViewModel> Views_Shiire_ShiireKeyInput Implements IRazorPage Inherited Members RazorPage<ShiireKeysViewModel>.Model RazorPage<ShiireKeysViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper private AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper Field Value AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper private OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper Field Value OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper private SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper Field Value SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper private ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper Field Value ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper private ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper Field Value ValidationSummaryTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ShiireKeysViewModel> Html { get; private set; } Property Value IHtmlHelper<ShiireKeysViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_TentoHaraidashi_TentoHaraidashi.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_TentoHaraidashi_TentoHaraidashi.html",
    "title": "Class Views_TentoHaraidashi_TentoHaraidashi | Convenience",
    "keywords": "Class Views_TentoHaraidashi_TentoHaraidashi Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/TentoHaraidashi/TentoHaraidashi.cshtml\")] internal sealed class Views_TentoHaraidashi_TentoHaraidashi : RazorPage<TentoHaraidashiViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<TentoHaraidashiViewModel> Views_TentoHaraidashi_TentoHaraidashi Implements IRazorPage Inherited Members RazorPage<TentoHaraidashiViewModel>.Model RazorPage<TentoHaraidashiViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper private SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper Field Value SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper private ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper Field Value ValidationMessageTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_10 private static readonly TagHelperAttribute __tagHelperAttribute_10 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperAttribute_9 private static readonly TagHelperAttribute __tagHelperAttribute_9 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<TentoHaraidashiViewModel> Html { get; private set; } Property Value IHtmlHelper<TentoHaraidashiViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Zaiko_Index.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Zaiko_Index.html",
    "title": "Class Views_Zaiko_Index | Convenience",
    "keywords": "Class Views_Zaiko_Index Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Zaiko/Index.cshtml\")] internal sealed class Views_Zaiko_Index : RazorPage<ZaikoViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ZaikoViewModel> Views_Zaiko_Index Implements IRazorPage Inherited Members RazorPage<ZaikoViewModel>.Model RazorPage<ZaikoViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper private OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper Field Value OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper private SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper Field Value SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper private ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper Field Value ValidationSummaryTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ZaikoViewModel> Html { get; private set; } Property Value IHtmlHelper<ZaikoViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views__ViewImports.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views__ViewImports.html",
    "title": "Class Views__ViewImports | Convenience",
    "keywords": "Class Views__ViewImports Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/_ViewImports.cshtml\")] internal sealed class Views__ViewImports : RazorPage<dynamic>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<dynamic> Views__ViewImports Implements IRazorPage Inherited Members RazorPage<dynamic>.Model RazorPage<dynamic>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<dynamic> Html { get; private set; } Property Value IHtmlHelper<dynamic> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views__ViewStart.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views__ViewStart.html",
    "title": "Class Views__ViewStart | Convenience",
    "keywords": "Class Views__ViewStart Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/_ViewStart.cshtml\")] internal sealed class Views__ViewStart : RazorPage<dynamic>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<dynamic> Views__ViewStart Implements IRazorPage Inherited Members RazorPage<dynamic>.Model RazorPage<dynamic>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<dynamic> Html { get; private set; } Property Value IHtmlHelper<dynamic> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.html": {
    "href": "api/AspNetCoreGeneratedDocument.html",
    "title": "Namespace AspNetCoreGeneratedDocument | Convenience",
    "keywords": "Namespace AspNetCoreGeneratedDocument Classes Views_Chumon_ChumonMeisai Views_Chumon_KeyInput Views_Home_Index Views_Home_Privacy Views_Kaikei_Kaikei Views_Shared_Error Views_Shared__Layout Views_Shared__ValidationScriptsPartial Views_Shiire_Shiire Views_Shiire_ShiireKeyInput Views_TentoHaraidashi_TentoHaraidashi Views_Zaiko_Index Views__ViewImports Views__ViewStart"
  },
  "api/Convenience.Controllers.Chumon2Controller.html": {
    "href": "api/Convenience.Controllers.Chumon2Controller.html",
    "title": "Class Chumon2Controller | Convenience",
    "keywords": "Class Chumon2Controller Namespace Convenience.Controllers Assembly Convenience.dll サービスを使わない注文コントローラ（演習対象外） public class Chumon2Controller : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller Chumon2Controller Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Chumon2Controller(ConvenienceContext) public Chumon2Controller(ConvenienceContext context) Parameters context ConvenienceContext Fields _context private readonly ConvenienceContext _context Field Value ConvenienceContext chumon private IChumon chumon Field Value IChumon Methods ChumonMeisai(ChumonViewModel) public Task<IActionResult> ChumonMeisai(ChumonViewModel inChumonViewModel) Parameters inChumonViewModel ChumonViewModel Returns Task<IActionResult> ChumonMeisai(int, ChumonViewModel) [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> ChumonMeisai(int id, ChumonViewModel ChumonViewModel) Parameters id int ChumonViewModel ChumonViewModel Returns Task<IActionResult> KeyInput() public Task<IActionResult> KeyInput() Returns Task<IActionResult> KeyInput(ChumonKeysViewModel) [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> KeyInput(ChumonKeysViewModel inChumonKeysViewModel) Parameters inChumonKeysViewModel ChumonKeysViewModel Returns Task<IActionResult> SetChumonKeysViewModel() public Task<ChumonKeysViewModel> SetChumonKeysViewModel() Returns Task<ChumonKeysViewModel>"
  },
  "api/Convenience.Controllers.ChumonController.html": {
    "href": "api/Convenience.Controllers.ChumonController.html",
    "title": "Class ChumonController | Convenience",
    "keywords": "Class ChumonController Namespace Convenience.Controllers Assembly Convenience.dll 注文コントローラ public class ChumonController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable, ISharedTools Inheritance object ControllerBase Controller ChumonController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable ISharedTools Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChumonController(ConvenienceContext, IChumonService) コンストラクター public ChumonController(ConvenienceContext context, IChumonService chumonService) Parameters context ConvenienceContext DBコンテキスト chumonService IChumonService 注文サービスクラスＤＩ注入用 Fields IndexName サービスクラス引継ぎ用キーワード private static readonly string IndexName Field Value string _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext chumonService 注文サービスクラス（ＤＩ用） private readonly IChumonService chumonService Field Value IChumonService Methods ChumonMeisai(ChumonViewModel) 商品注文２枚目の初期表示（表示データは、postを受けたKeyInputメソッドで行う） public Task<IActionResult> ChumonMeisai(ChumonViewModel inChumonViewModel) Parameters inChumonViewModel ChumonViewModel 初期表示する注文明細ビューデータ Returns Task<IActionResult> ChumonMeisai(int, ChumonViewModel) 商品注文２枚目のPost後の処理 [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> ChumonMeisai(int id, ChumonViewModel inChumonViewModel) Parameters id int inChumonViewModel ChumonViewModel 注文明細ビューモデル Returns Task<IActionResult> Exceptions Exception KeyInput() 商品注文１枚目の初期表示処理 public Task<IActionResult> KeyInput() Returns Task<IActionResult> KeyInput(ChumonKeysViewModel) 商品注文１枚目のPost受信後処理 [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> KeyInput(ChumonKeysViewModel inChumonKeysViewModel) Parameters inChumonKeysViewModel ChumonKeysViewModel 注文キービューモデル Returns Task<IActionResult> Exceptions InvalidOperationException Result() 商品注文２枚目のPostデータコミット後の再表示 [HttpGet] public Task<IActionResult> Result() Returns Task<IActionResult>"
  },
  "api/Convenience.Controllers.HomeController.html": {
    "href": "api/Convenience.Controllers.HomeController.html",
    "title": "Class HomeController | Convenience",
    "keywords": "Class HomeController Namespace Convenience.Controllers Assembly Convenience.dll Homeコントローラ（メニュー表示用） public class HomeController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller HomeController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HomeController(ILogger<HomeController>) public HomeController(ILogger<HomeController> logger) Parameters logger ILogger<HomeController> Fields _logger private readonly ILogger<HomeController> _logger Field Value ILogger<HomeController> Methods Error(int) [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)] [IgnoreAntiforgeryToken] public IActionResult Error(int id) Parameters id int Returns IActionResult Index() public IActionResult Index() Returns IActionResult Privacy() public IActionResult Privacy() Returns IActionResult"
  },
  "api/Convenience.Controllers.KaikeiController.html": {
    "href": "api/Convenience.Controllers.KaikeiController.html",
    "title": "Class KaikeiController | Convenience",
    "keywords": "Class KaikeiController Namespace Convenience.Controllers Assembly Convenience.dll 注文コントローラ public class KaikeiController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable, ISharedTools Inheritance object ControllerBase Controller KaikeiController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable ISharedTools Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KaikeiController(ConvenienceContext, IKaikeiService) コンストラクター public KaikeiController(ConvenienceContext context, IKaikeiService KaikeiService) Parameters context ConvenienceContext DBコンテキスト KaikeiService IKaikeiService Fields IndexName サービスクラス引継ぎ用キーワード private static readonly string IndexName Field Value string KaikeiViewModel ビュー・モデル private KaikeiViewModel KaikeiViewModel Field Value KaikeiViewModel _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext _kaikeiService 会計サービスクラス（ＤＩ用） private readonly IKaikeiService _kaikeiService Field Value IKaikeiService Methods Addkaikei(KaikeiViewModel) 商品注文２枚目のPost受信後処理 [HttpPost] [ValidateAntiForgeryToken] [ResponseCache(NoStore = true, Location = ResponseCacheLocation.None)] public Task<IActionResult> Addkaikei(KaikeiViewModel argKaikeiViewModel) Parameters argKaikeiViewModel KaikeiViewModel Returns Task<IActionResult> Exceptions InvalidOperationException GetShohinName(string) 商品名称問い合わせよう [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> GetShohinName(string ShohinId) Parameters ShohinId string Returns Task<IActionResult> Kaikei(KaikeiViewModel) [HttpPost] [ValidateAntiForgeryToken] [ResponseCache(NoStore = true, Location = ResponseCacheLocation.None)] public Task<IActionResult> Kaikei(KaikeiViewModel argKaikeiViewModel) Parameters argKaikeiViewModel KaikeiViewModel Returns Task<IActionResult> KeyInput() 商品注文１枚目の初期表示処理 public Task<IActionResult> KeyInput() Returns Task<IActionResult> KeyInput(KaikeiViewModel) 商品注文２枚目の初期表示 [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> KeyInput(KaikeiViewModel argKaikeiViewModel) Parameters argKaikeiViewModel KaikeiViewModel Returns Task<IActionResult> Result(string) PRG用 [HttpGet] public Task<IActionResult> Result(string id) Parameters id string getされるデータ（どこから来たかキーワード） Returns Task<IActionResult>"
  },
  "api/Convenience.Controllers.ShiireController.html": {
    "href": "api/Convenience.Controllers.ShiireController.html",
    "title": "Class ShiireController | Convenience",
    "keywords": "Class ShiireController Namespace Convenience.Controllers Assembly Convenience.dll 仕入サービスクラス public class ShiireController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable, ISharedTools Inheritance object ControllerBase Controller ShiireController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable ISharedTools Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShiireController(ConvenienceContext, IShiireService) コンストラクター public ShiireController(ConvenienceContext context, IShiireService shiireService) Parameters context ConvenienceContext DBコンテキスト shiireService IShiireService 仕入サービスクラスＤＩ注入用 Fields IndexName private static readonly string IndexName Field Value string _context private readonly ConvenienceContext _context Field Value ConvenienceContext shiireService private readonly IShiireService shiireService Field Value IShiireService shiireViewModel private ShiireViewModel shiireViewModel Field Value ShiireViewModel Methods Result() 仕入画面２枚目の初期表示（仕入画面２枚目のPost後処理よりredirect） [HttpGet] public Task<IActionResult> Result() Returns Task<IActionResult> Shiire(ShiireViewModel) 仕入画面２枚目のPost後処理 [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> Shiire(ShiireViewModel inShiireViewModel) Parameters inShiireViewModel ShiireViewModel Returns Task<IActionResult> ShiireKeyInput() 仕入画面１枚目の初期表示 public Task<IActionResult> ShiireKeyInput() Returns Task<IActionResult> ShiireKeysViewModel 仕入キービューモデル ShiireKeyInput(ShiireKeysViewModel) 仕入画面１枚目のPost後処理→仕入画面２枚目に遷移 [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> ShiireKeyInput(ShiireKeysViewModel inKeysModel) Parameters inKeysModel ShiireKeysViewModel 仕入画面１枚目のpostデータ Returns Task<IActionResult>"
  },
  "api/Convenience.Controllers.TentoHaraidashiController.html": {
    "href": "api/Convenience.Controllers.TentoHaraidashiController.html",
    "title": "Class TentoHaraidashiController | Convenience",
    "keywords": "Class TentoHaraidashiController Namespace Convenience.Controllers Assembly Convenience.dll 注文コントローラ public class TentoHaraidashiController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable, ISharedTools Inheritance object ControllerBase Controller TentoHaraidashiController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable ISharedTools Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TentoHaraidashiController(ConvenienceContext, ITentoHaraidashiService) コンストラクター public TentoHaraidashiController(ConvenienceContext context, ITentoHaraidashiService tentoHaraidashiService) Parameters context ConvenienceContext DBコンテキスト tentoHaraidashiService ITentoHaraidashiService Fields IndexName サービスクラス引継ぎ用キーワード private static readonly string IndexName Field Value string _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext _tentoHaraidashiService 注文サービスクラス（ＤＩ用） private readonly ITentoHaraidashiService _tentoHaraidashiService Field Value ITentoHaraidashiService tentoHaraidashiViewModel ビュー・モデル private TentoHaraidashiViewModel tentoHaraidashiViewModel Field Value TentoHaraidashiViewModel Methods KeyInput() 商品注文１枚目の初期表示処理 public Task<IActionResult> KeyInput() Returns Task<IActionResult> KeyInput(TentoHaraidashiViewModel) [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> KeyInput(TentoHaraidashiViewModel argTentoHaraidashiViewModel) Parameters argTentoHaraidashiViewModel TentoHaraidashiViewModel Returns Task<IActionResult> Result() 店頭払出画面２枚目の初期表示（店頭払出画面２枚目のPost後処理よりredirect） [HttpGet] public Task<IActionResult> Result() Returns Task<IActionResult> TentoHaraidashi(TentoHaraidashiViewModel) 商品注文２枚目のPost受信後処理 [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> TentoHaraidashi(TentoHaraidashiViewModel argTentoHaraidashiViewModel) Parameters argTentoHaraidashiViewModel TentoHaraidashiViewModel Returns Task<IActionResult> Exceptions InvalidOperationException"
  },
  "api/Convenience.Controllers.ZaikoController.html": {
    "href": "api/Convenience.Controllers.ZaikoController.html",
    "title": "Class ZaikoController | Convenience",
    "keywords": "Class ZaikoController Namespace Convenience.Controllers Assembly Convenience.dll 倉庫在庫検索コントローラ public class ZaikoController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller ZaikoController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ZaikoController(ConvenienceContext, IZaikoService) コンストラクター public ZaikoController(ConvenienceContext context, IZaikoService zaikoService) Parameters context ConvenienceContext DBコンテキスト zaikoService IZaikoService 在庫サービスクラスＤＩ注入用 Fields _context private readonly ConvenienceContext _context Field Value ConvenienceContext zaikoService private readonly IZaikoService zaikoService Field Value IZaikoService Methods Index() public Task<IActionResult> Index() Returns Task<IActionResult> Index(ZaikoViewModel) [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> Index(ZaikoViewModel inZaikoModel) Parameters inZaikoModel ZaikoViewModel Returns Task<IActionResult>"
  },
  "api/Convenience.Controllers.html": {
    "href": "api/Convenience.Controllers.html",
    "title": "Namespace Convenience.Controllers | Convenience",
    "keywords": "Namespace Convenience.Controllers Classes Chumon2Controller サービスを使わない注文コントローラ（演習対象外） ChumonController 注文コントローラ HomeController Homeコントローラ（メニュー表示用） KaikeiController 注文コントローラ ShiireController 仕入サービスクラス TentoHaraidashiController 注文コントローラ ZaikoController 倉庫在庫検索コントローラ"
  },
  "api/Convenience.Data.ConvenienceContext.html": {
    "href": "api/Convenience.Data.ConvenienceContext.html",
    "title": "Class ConvenienceContext | Convenience",
    "keywords": "Class ConvenienceContext Namespace Convenience.Data Assembly Convenience.dll DBコンテキスト public class ConvenienceContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext ConvenienceContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.IDbSetCache.GetOrAddSet(IDbSetSource, Type) DbContext.IDbSetCache.GetOrAddSet(IDbSetSource, string, Type) DbContext.IDbSetCache.GetSets() DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.IDbContextPoolable.ClearLease() DbContext.IDbContextPoolable.SetLease(DbContextLease) DbContext.IDbContextPoolable.SetLeaseAsync(DbContextLease, CancellationToken) DbContext.IDbContextPoolable.SnapshotConfiguration() DbContext.IResettableService.ResetState() DbContext.IResettableService.ResetStateAsync(CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.IDbContextDependencies.SetSource DbContext.IDbContextDependencies.EntityFinderFactory DbContext.IDbContextDependencies.QueryProvider DbContext.IDbContextDependencies.StateManager DbContext.IDbContextDependencies.ChangeDetector DbContext.IDbContextDependencies.EntityGraphAttacher DbContext.IDbContextDependencies.ExceptionDetector DbContext.IDbContextDependencies.UpdateLogger DbContext.IDbContextDependencies.InfrastructureLogger DbContext.IInfrastructure<IServiceProvider>.Instance DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConvenienceContext(DbContextOptions<ConvenienceContext>) コンストラクタ public ConvenienceContext(DbContextOptions<ConvenienceContext> options) Parameters options DbContextOptions<ConvenienceContext> Properties ChumonJisseki 注文実績 public DbSet<ChumonJisseki> ChumonJisseki { get; set; } Property Value DbSet<ChumonJisseki> ChumonJissekiMeisai 注文実績明細 public DbSet<ChumonJissekiMeisai> ChumonJissekiMeisai { get; set; } Property Value DbSet<ChumonJissekiMeisai> KaikeiHeader 会計実績 public DbSet<KaikeiHeader> KaikeiHeader { get; set; } Property Value DbSet<KaikeiHeader> KaikeiJisseki 会計実績 public DbSet<KaikeiJisseki> KaikeiJisseki { get; set; } Property Value DbSet<KaikeiJisseki> ShiireJisseki 仕入実績 public DbSet<ShiireJisseki> ShiireJisseki { get; set; } Property Value DbSet<ShiireJisseki> ShiireMaster 仕入マスタ public DbSet<ShiireMaster> ShiireMaster { get; set; } Property Value DbSet<ShiireMaster> ShiireSakiMaster 仕入先マスタ public DbSet<ShiireSakiMaster> ShiireSakiMaster { get; set; } Property Value DbSet<ShiireSakiMaster> ShohinMaster 商品マスタ public DbSet<ShohinMaster> ShohinMaster { get; set; } Property Value DbSet<ShohinMaster> SokoZaiko 倉庫在庫 public DbSet<SokoZaiko> SokoZaiko { get; set; } Property Value DbSet<SokoZaiko> TentoHaraidashiHearder 店頭払出ヘッダー public DbSet<TentoHaraidashiHeader> TentoHaraidashiHearder { get; set; } Property Value DbSet<TentoHaraidashiHeader> TentoHaraidashiJisseki 店頭払出実績 public DbSet<TentoHaraidashiJisseki> TentoHaraidashiJisseki { get; set; } Property Value DbSet<TentoHaraidashiJisseki> TentoZaiko 店頭在庫 public DbSet<TentoZaiko> TentoZaiko { get; set; } Property Value DbSet<TentoZaiko>"
  },
  "api/Convenience.Data.html": {
    "href": "api/Convenience.Data.html",
    "title": "Namespace Convenience.Data | Convenience",
    "keywords": "Namespace Convenience.Data Classes ConvenienceContext DBコンテキスト"
  },
  "api/Convenience.Migrations.ConvenienceContextModelSnapshot.html": {
    "href": "api/Convenience.Migrations.ConvenienceContextModelSnapshot.html",
    "title": "Class ConvenienceContextModelSnapshot | Convenience",
    "keywords": "Class ConvenienceContextModelSnapshot Namespace Convenience.Migrations Assembly Convenience.dll [DbContext(typeof(ConvenienceContext))] internal class ConvenienceContextModelSnapshot : ModelSnapshot Inheritance object ModelSnapshot ConvenienceContextModelSnapshot Inherited Members ModelSnapshot.Model object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildModel(ModelBuilder) Called lazily by Model to build the model snapshot the first time it is requested. protected override void BuildModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model."
  },
  "api/Convenience.Migrations.Init.html": {
    "href": "api/Convenience.Migrations.Init.html",
    "title": "Class Init | Convenience",
    "keywords": "Class Init Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20240527055358_Init\")] public class Init : Migration Inheritance object Migration Init Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Migrations.Kaikei.html": {
    "href": "api/Convenience.Migrations.Kaikei.html",
    "title": "Class Kaikei | Convenience",
    "keywords": "Class Kaikei Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20241007041437_Kaikei\")] public class Kaikei : Migration Inheritance object Migration Kaikei Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Migrations.changetonull.html": {
    "href": "api/Convenience.Migrations.changetonull.html",
    "title": "Class changetonull | Convenience",
    "keywords": "Class changetonull Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20241003073608_changetonull\")] public class changetonull : Migration Inheritance object Migration changetonull Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Migrations.haraidashi.html": {
    "href": "api/Convenience.Migrations.haraidashi.html",
    "title": "Class haraidashi | Convenience",
    "keywords": "Class haraidashi Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20240930012937_haraidashi\")] public class haraidashi : Migration Inheritance object Migration haraidashi Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Migrations.html": {
    "href": "api/Convenience.Migrations.html",
    "title": "Namespace Convenience.Migrations | Convenience",
    "keywords": "Namespace Convenience.Migrations Classes ConvenienceContextModelSnapshot Init A base class inherited by each EF Core migration. Kaikei A base class inherited by each EF Core migration. changetonull A base class inherited by each EF Core migration. haraidashi A base class inherited by each EF Core migration. shiireTimeStamp A base class inherited by each EF Core migration. shohintanka A base class inherited by each EF Core migration. shohintanka2 A base class inherited by each EF Core migration. tentozaiko A base class inherited by each EF Core migration."
  },
  "api/Convenience.Migrations.shiireTimeStamp.html": {
    "href": "api/Convenience.Migrations.shiireTimeStamp.html",
    "title": "Class shiireTimeStamp | Convenience",
    "keywords": "Class shiireTimeStamp Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20240530005521_shiireTimeStamp\")] public class shiireTimeStamp : Migration Inheritance object Migration shiireTimeStamp Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Migrations.shohintanka.html": {
    "href": "api/Convenience.Migrations.shohintanka.html",
    "title": "Class shohintanka | Convenience",
    "keywords": "Class shohintanka Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20241008042959_shohintanka\")] public class shohintanka : Migration Inheritance object Migration shohintanka Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Migrations.shohintanka2.html": {
    "href": "api/Convenience.Migrations.shohintanka2.html",
    "title": "Class shohintanka2 | Convenience",
    "keywords": "Class shohintanka2 Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20241008043627_shohintanka2\")] public class shohintanka2 : Migration Inheritance object Migration shohintanka2 Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Migrations.tentozaiko.html": {
    "href": "api/Convenience.Migrations.tentozaiko.html",
    "title": "Class tentozaiko | Convenience",
    "keywords": "Class tentozaiko Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20240930025410_tentozaiko\")] public class tentozaiko : Migration Inheritance object Migration tentozaiko Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Models.DataModels.ChumonJisseki.html": {
    "href": "api/Convenience.Models.DataModels.ChumonJisseki.html",
    "title": "Class ChumonJisseki | Convenience",
    "keywords": "Class ChumonJisseki Namespace Convenience.Models.DataModels Assembly Convenience.dll 注文実績DTO [Table(\"chumon_jisseki\")] [PrimaryKey(\"ChumonId\", new string[] { })] public class ChumonJisseki Inheritance object ChumonJisseki Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonDate [Column(\"chumon_date\")] [Required] public DateOnly ChumonDate { get; set; } Property Value DateOnly ChumonId [Column(\"chumon_code\")] [MaxLength(20)] [Required] public string ChumonId { get; set; } Property Value string ChumonJissekiMeisais public virtual IList<ChumonJissekiMeisai>? ChumonJissekiMeisais { get; set; } Property Value IList<ChumonJissekiMeisai> ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] public string ShiireSakiId { get; set; } Property Value string ShiireSakiMaster [ForeignKey(\"ShiireSakiId\")] public virtual ShiireSakiMaster? ShiireSakiMaster { get; set; } Property Value ShiireSakiMaster Version [Timestamp] public uint Version { get; set; } Property Value uint"
  },
  "api/Convenience.Models.DataModels.ChumonJissekiMeisai.html": {
    "href": "api/Convenience.Models.DataModels.ChumonJissekiMeisai.html",
    "title": "Class ChumonJissekiMeisai | Convenience",
    "keywords": "Class ChumonJissekiMeisai Namespace Convenience.Models.DataModels Assembly Convenience.dll 注文実績明細DTO [Table(\"chumon_jisseki_meisai\")] [PrimaryKey(\"ChumonId\", new string[] { \"ShiireSakiId\", \"ShiirePrdId\", \"ShohinId\" })] public class ChumonJissekiMeisai Inheritance object ChumonJissekiMeisai Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonId [Column(\"chumon_code\")] [MaxLength(20)] [Required] public string ChumonId { get; set; } Property Value string ChumonJisseki [ForeignKey(\"ChumonId\")] public virtual ChumonJisseki? ChumonJisseki { get; set; } Property Value ChumonJisseki ChumonSu [Column(\"chumon_su\")] [Precision(10, 2)] [RegularExpression(\"^-?\\\\d+(\\\\.\\\\d+)?$\", ErrorMessage = \"{0}は数値で入力してください\")] [Range(0, 999, ErrorMessage = \"{0}は、{1}～{2}の範囲で入力してください\")] [Required(ErrorMessage = \"{0}は、必須入力項目です\")] public decimal ChumonSu { get; set; } Property Value decimal ChumonZan [Column(\"chumon_zan\")] [Precision(10, 2)] public decimal ChumonZan { get; set; } Property Value decimal LastChumonSu [NotMapped] [Precision(10, 2)] public decimal? LastChumonSu { get; set; } Property Value decimal? ShiireJisseki public virtual ICollection<ShiireJisseki>? ShiireJisseki { get; set; } Property Value ICollection<ShiireJisseki> ShiireMaster [ForeignKey(\"ShiireSakiId,ShiirePrdId,ShohinId\")] public virtual ShiireMaster? ShiireMaster { get; set; } Property Value ShiireMaster ShiirePrdId [Column(\"shiire_prd_code\")] [MaxLength(10)] [Required] public string ShiirePrdId { get; set; } Property Value string ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] public string ShiireSakiId { get; set; } Property Value string ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] public string ShohinId { get; set; } Property Value string Version [Timestamp] public uint Version { get; set; } Property Value uint"
  },
  "api/Convenience.Models.DataModels.KaikeiHeader.html": {
    "href": "api/Convenience.Models.DataModels.KaikeiHeader.html",
    "title": "Class KaikeiHeader | Convenience",
    "keywords": "Class KaikeiHeader Namespace Convenience.Models.DataModels Assembly Convenience.dll 会計ヘッダーDTO [Table(\"kaikei_header\")] [PrimaryKey(\"UriageDatetimeId\", new string[] { })] public class KaikeiHeader Inheritance object KaikeiHeader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties KaikeiJissekis public virtual IList<KaikeiJisseki> KaikeiJissekis { get; set; } Property Value IList<KaikeiJisseki> UriageDatetime [Column(\"uriage_datetime\")] [DataType(DataType.DateTime)] [Required] public DateTime UriageDatetime { get; set; } Property Value DateTime UriageDatetimeId [Column(\"uriage_datetimeid\")] [MaxLength(20)] [Required] public string UriageDatetimeId { get; set; } Property Value string"
  },
  "api/Convenience.Models.DataModels.KaikeiJisseki.html": {
    "href": "api/Convenience.Models.DataModels.KaikeiJisseki.html",
    "title": "Class KaikeiJisseki | Convenience",
    "keywords": "Class KaikeiJisseki Namespace Convenience.Models.DataModels Assembly Convenience.dll 会計実績DTO [Table(\"kaikei_jisseki\")] [PrimaryKey(\"UriageDatetimeId\", new string[] { \"ShohinId\", \"UriageDatetime\" })] public class KaikeiJisseki Inheritance object KaikeiJisseki Derived KaikeiJissekiforAdd Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties KaikeiHeader [ForeignKey(\"UriageDatetimeId\")] public virtual KaikeiHeader KaikeiHeader { get; set; } Property Value KaikeiHeader ShohiZeiritsu [Column(\"shohi_zeiritsu\")] [Required] [Precision(15, 2)] public decimal ShohiZeiritsu { get; set; } Property Value decimal ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] public string ShohinId { get; set; } Property Value string ShohinMaster [ForeignKey(\"ShohinId\")] public virtual ShohinMaster ShohinMaster { get; set; } Property Value ShohinMaster ShohinTanka [Column(\"shohin_tanka\")] [Required] [Precision(15, 2)] public decimal ShohinTanka { get; set; } Property Value decimal TentoZaiko public TentoZaiko TentoZaiko { get; set; } Property Value TentoZaiko UriageDatetime [Column(\"uriage_datetime\")] [DataType(DataType.DateTime)] [Required] public DateTime UriageDatetime { get; set; } Property Value DateTime UriageDatetimeId [Column(\"uriage_datetimeid\")] [MaxLength(20)] [Required] public string UriageDatetimeId { get; set; } Property Value string UriageKingaku [Column(\"uriage_kingaku\")] [Required] [Precision(15, 2)] public decimal UriageKingaku { get; set; } Property Value decimal UriageSu [Column(\"uriage_su\")] [Required] [Precision(10, 2)] public decimal UriageSu { get; set; } Property Value decimal ZeikomiKingaku [Column(\"zeikomi_kingaku\")] [Required] [Precision(15, 2)] public decimal ZeikomiKingaku { get; set; } Property Value decimal"
  },
  "api/Convenience.Models.DataModels.ShiireJisseki.html": {
    "href": "api/Convenience.Models.DataModels.ShiireJisseki.html",
    "title": "Class ShiireJisseki | Convenience",
    "keywords": "Class ShiireJisseki Namespace Convenience.Models.DataModels Assembly Convenience.dll 仕入実績実績DTO [Table(\"shiire_jisseki\")] [PrimaryKey(\"ChumonId\", new string[] { \"ShiireDate\", \"SeqByShiireDate\", \"ShiireSakiId\", \"ShiirePrdId\" })] public class ShiireJisseki Inheritance object ShiireJisseki Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonId [Column(\"chumon_code\")] [MaxLength(20)] [Required] public string ChumonId { get; set; } Property Value string ChumonJissekiMeisaii [ForeignKey(\"ChumonId,ShiireSakiId,ShiirePrdId,ShohinId\")] public ChumonJissekiMeisai ChumonJissekiMeisaii { get; set; } Property Value ChumonJissekiMeisai NonyuSu [Column(\"nonyu_su\")] [Precision(10, 2)] public decimal NonyuSu { get; set; } Property Value decimal NonyuSubalance [NotMapped] [Precision(10, 2)] public decimal? NonyuSubalance { get; set; } Property Value decimal? SeqByShiireDate [Column(\"seq_by_shiiredate\")] [Required] public uint SeqByShiireDate { get; set; } Property Value uint ShiireDate [Column(\"shiire_date\")] [Required] public DateOnly ShiireDate { get; set; } Property Value DateOnly ShiireDateTime [Column(\"shiire_datetime\")] [Required] public DateTime ShiireDateTime { get; set; } Property Value DateTime ShiirePrdId [Column(\"shiire_prd_code\")] [MaxLength(10)] [Required] public string ShiirePrdId { get; set; } Property Value string ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] public string ShiireSakiId { get; set; } Property Value string ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] public string ShohinId { get; set; } Property Value string SokoZaiko [NotMapped] [ForeignKey(\"ShiireSakiId,ShiirePrdId,ShohinId\")] public virtual SokoZaiko? SokoZaiko { get; set; } Property Value SokoZaiko Version [Timestamp] public uint Version { get; set; } Property Value uint"
  },
  "api/Convenience.Models.DataModels.ShiireMaster.html": {
    "href": "api/Convenience.Models.DataModels.ShiireMaster.html",
    "title": "Class ShiireMaster | Convenience",
    "keywords": "Class ShiireMaster Namespace Convenience.Models.DataModels Assembly Convenience.dll 仕入マスタDTO [Table(\"shiire_master\")] [PrimaryKey(\"ShiireSakiId\", new string[] { \"ShiirePrdId\", \"ShohinId\" })] public class ShiireMaster Inheritance object ShiireMaster Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonJissekiMeisaiis public virtual ICollection<ChumonJissekiMeisai>? ChumonJissekiMeisaiis { get; set; } Property Value ICollection<ChumonJissekiMeisai> ShiirePcsPerUnit [Column(\"shiire_pcs_unit\")] [Required] [Precision(7, 2)] public decimal ShiirePcsPerUnit { get; set; } Property Value decimal ShiirePrdId [Column(\"shiire_prd_code\")] [MaxLength(10)] [Required] public string ShiirePrdId { get; set; } Property Value string ShiirePrdName [Column(\"shiire_prd_name\")] [MaxLength(30)] [Required] public string ShiirePrdName { get; set; } Property Value string ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] public string ShiireSakiId { get; set; } Property Value string ShiireSakiMaster [ForeignKey(\"ShiireSakiId\")] public virtual ShiireSakiMaster? ShiireSakiMaster { get; set; } Property Value ShiireSakiMaster ShiireUnit [Column(\"shiire_unit\")] [MaxLength(10)] [Required] public string ShiireUnit { get; set; } Property Value string ShireTanka [Column(\"shiire_tanka\")] [Required] [Precision(7, 2)] public decimal ShireTanka { get; set; } Property Value decimal ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] public string ShohinId { get; set; } Property Value string ShohinMaster [ForeignKey(\"ShohinId\")] public virtual ShohinMaster? ShohinMaster { get; set; } Property Value ShohinMaster SokoZaiko public virtual SokoZaiko? SokoZaiko { get; set; } Property Value SokoZaiko TentoHaraidashiJissekis public virtual IList<TentoHaraidashiJisseki>? TentoHaraidashiJissekis { get; set; } Property Value IList<TentoHaraidashiJisseki>"
  },
  "api/Convenience.Models.DataModels.ShiireSakiMaster.html": {
    "href": "api/Convenience.Models.DataModels.ShiireSakiMaster.html",
    "title": "Class ShiireSakiMaster | Convenience",
    "keywords": "Class ShiireSakiMaster Namespace Convenience.Models.DataModels Assembly Convenience.dll 仕入先マスタDTO [Table(\"shiire_saki_master\")] public class ShiireSakiMaster Inheritance object ShiireSakiMaster Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Banchi [Column(\"banchi\")] [MaxLength(10)] [Required] public string Banchi { get; set; } Property Value string ChumonJissekis public virtual ICollection<ChumonJisseki>? ChumonJissekis { get; set; } Property Value ICollection<ChumonJisseki> ShiireSakiBusho [Column(\"shiire_saki_busho\")] [MaxLength(30)] [Required] public string ShiireSakiBusho { get; set; } Property Value string ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] [Key] public string ShiireSakiId { get; set; } Property Value string ShiireSakiKaisya [Column(\"shiire_saki_kaisya\")] [MaxLength(30)] [Required] public string ShiireSakiKaisya { get; set; } Property Value string Shikuchoson [Column(\"shikuchoson\")] [MaxLength(10)] [Required] public string Shikuchoson { get; set; } Property Value string ShireMasters public virtual ICollection<ShiireMaster>? ShireMasters { get; set; } Property Value ICollection<ShiireMaster> Tatemonomei [Column(\"tatemonomei\")] [MaxLength(10)] [Required] public string Tatemonomei { get; set; } Property Value string Todoufuken [Column(\"todoufuken\")] [MaxLength(10)] [Required] public string Todoufuken { get; set; } Property Value string YubinBango [Column(\"yubin_bango\")] [MaxLength(30)] [Required] [DataType(DataType.PostalCode)] public string YubinBango { get; set; } Property Value string"
  },
  "api/Convenience.Models.DataModels.ShohinMaster.html": {
    "href": "api/Convenience.Models.DataModels.ShohinMaster.html",
    "title": "Class ShohinMaster | Convenience",
    "keywords": "Class ShohinMaster Namespace Convenience.Models.DataModels Assembly Convenience.dll 商品マスタDTO [Table(\"shohin_master\")] public class ShohinMaster Inheritance object ShohinMaster Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ShiireMasters public virtual IList<ShiireMaster>? ShiireMasters { get; set; } Property Value IList<ShiireMaster> ShohiZeiritsu [Column(\"shohi_zeiritsu\")] [Required] [Precision(15, 2)] public decimal ShohiZeiritsu { get; set; } Property Value decimal ShohiZeiritsuGaishoku [Column(\"shohi_zeiritsu_gaisyoku\")] [Required] [Precision(15, 2)] public decimal ShohiZeiritsuGaishoku { get; set; } Property Value decimal ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] [Key] public string ShohinId { get; set; } Property Value string ShohinName [Column(\"shohin_name\")] [MaxLength(50)] [Required] public string ShohinName { get; set; } Property Value string ShohinTanka [Column(\"shohin_tanka\")] [Required] [Precision(15, 2)] public decimal ShohinTanka { get; set; } Property Value decimal TentoZaiko public virtual TentoZaiko? TentoZaiko { get; set; } Property Value TentoZaiko"
  },
  "api/Convenience.Models.DataModels.SokoZaiko.html": {
    "href": "api/Convenience.Models.DataModels.SokoZaiko.html",
    "title": "Class SokoZaiko | Convenience",
    "keywords": "Class SokoZaiko Namespace Convenience.Models.DataModels Assembly Convenience.dll 倉庫在庫DTO [Table(\"soko_zaiko\")] [PrimaryKey(\"ShiireSakiId\", new string[] { \"ShiirePrdId\", \"ShohinId\" })] public class SokoZaiko Inheritance object SokoZaiko Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LastDeliveryDate [Column(\"last_delivery_date\")] public DateOnly? LastDeliveryDate { get; set; } Property Value DateOnly? LastShiireDate [Column(\"last_shiire_date\")] [Required] public DateOnly LastShiireDate { get; set; } Property Value DateOnly ShiireJissekis [NotMapped] public virtual IList<ShiireJisseki>? ShiireJissekis { get; set; } Property Value IList<ShiireJisseki> ShiireMaster [ForeignKey(\"ShiireSakiId,ShiirePrdId,ShohinId\")] public virtual ShiireMaster? ShiireMaster { get; set; } Property Value ShiireMaster ShiirePrdId [Column(\"shiire_prd_code\")] [MaxLength(10)] [Required] public string ShiirePrdId { get; set; } Property Value string ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] public string ShiireSakiId { get; set; } Property Value string ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] public string ShohinId { get; set; } Property Value string SokoZaikoCaseSu [Column(\"soko_zaiko_case_su\")] [Precision(10, 2)] public decimal SokoZaikoCaseSu { get; set; } Property Value decimal SokoZaikoSu [Column(\"soko_zaiko_su\")] [Precision(10, 2)] public decimal SokoZaikoSu { get; set; } Property Value decimal Version [Timestamp] public uint Version { get; set; } Property Value uint"
  },
  "api/Convenience.Models.DataModels.TentoHaraidashiHeader.html": {
    "href": "api/Convenience.Models.DataModels.TentoHaraidashiHeader.html",
    "title": "Class TentoHaraidashiHeader | Convenience",
    "keywords": "Class TentoHaraidashiHeader Namespace Convenience.Models.DataModels Assembly Convenience.dll 店頭払出ヘッダー実績DTO [Table(\"tento_haraidashi_header\")] [PrimaryKey(\"TentoHaraidashiId\", new string[] { })] public class TentoHaraidashiHeader Inheritance object TentoHaraidashiHeader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HaraidashiDateTime [Column(\"haraidashi_datetime\")] [Required] [DataType(DataType.DateTime)] public DateTime HaraidashiDateTime { get; set; } Property Value DateTime TentoHaraidashiId [Column(\"tento_haraidashi_code\")] [MaxLength(20)] [Required] public string TentoHaraidashiId { get; set; } Property Value string TentoHaraidashiJissekis public virtual IList<TentoHaraidashiJisseki> TentoHaraidashiJissekis { get; set; } Property Value IList<TentoHaraidashiJisseki>"
  },
  "api/Convenience.Models.DataModels.TentoHaraidashiJisseki.html": {
    "href": "api/Convenience.Models.DataModels.TentoHaraidashiJisseki.html",
    "title": "Class TentoHaraidashiJisseki | Convenience",
    "keywords": "Class TentoHaraidashiJisseki Namespace Convenience.Models.DataModels Assembly Convenience.dll 店頭払出実績DTO [Table(\"tento_haraidashi_jisseki\")] [PrimaryKey(\"TentoHaraidashiId\", new string[] { \"ShiireSakiId\", \"ShiirePrdId\", \"ShohinId\" })] public class TentoHaraidashiJisseki Inheritance object TentoHaraidashiJisseki Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HaraidashiCaseSu [Column(\"haraidashi_case_su\")] [Range(0, 100, ErrorMessage = \"0から100の間の値を入力してください\")] public int HaraidashiCaseSu { get; set; } Property Value int HaraidashiDate [Column(\"haraidashi_date\")] [Required] [DataType(DataType.DateTime)] public DateTime HaraidashiDate { get; set; } Property Value DateTime HaraidashiSu [Column(\"haraidashi_su\")] [Precision(7, 2)] public decimal HaraidashiSu { get; set; } Property Value decimal ShiireMaster [ForeignKey(\"ShiireSakiId,ShiirePrdId,ShohinId\")] public virtual ShiireMaster? ShiireMaster { get; set; } Property Value ShiireMaster ShiirePrdId [Column(\"shiire_prd_code\")] [MaxLength(10)] [Required] public string ShiirePrdId { get; set; } Property Value string ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] public string ShiireSakiId { get; set; } Property Value string ShireDateTime [Column(\"shiire_datetime\")] [Required] [DataType(DataType.DateTime)] public DateOnly ShireDateTime { get; set; } Property Value DateOnly ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] [Key] public string ShohinId { get; set; } Property Value string TentoHaraidashiHeader [ForeignKey(\"TentoHaraidashiId\")] public virtual TentoHaraidashiHeader? TentoHaraidashiHeader { get; set; } Property Value TentoHaraidashiHeader TentoHaraidashiId [Column(\"tento_haraidashi_code\")] [MaxLength(20)] [Required] public string TentoHaraidashiId { get; set; } Property Value string"
  },
  "api/Convenience.Models.DataModels.TentoZaiko.html": {
    "href": "api/Convenience.Models.DataModels.TentoZaiko.html",
    "title": "Class TentoZaiko | Convenience",
    "keywords": "Class TentoZaiko Namespace Convenience.Models.DataModels Assembly Convenience.dll 店頭在庫 [Table(\"tento_zaiko\")] [PrimaryKey(\"ShohinId\", new string[] { })] public class TentoZaiko Inheritance object TentoZaiko Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LastHaraidashiDate [Column(\"last_haraidashi_datetime\")] [Required] [DataType(DataType.DateTime)] public DateTime? LastHaraidashiDate { get; set; } Property Value DateTime? LastShireDateTime [Column(\"last_shiire_datetime\")] [Required] [DataType(DataType.DateTime)] public DateOnly LastShireDateTime { get; set; } Property Value DateOnly LastUriageDatetime [Column(\"last_uriage_datetime\")] [DataType(DataType.DateTime)] public DateTime? LastUriageDatetime { get; set; } Property Value DateTime? ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] [Key] public string ShohinId { get; set; } Property Value string ShohinMaster [ForeignKey(\"ShohinId\")] public virtual ShohinMaster? ShohinMaster { get; set; } Property Value ShohinMaster ZaikoSu [Column(\"zaiko_su\")] [Precision(7, 2)] public decimal ZaikoSu { get; set; } Property Value decimal"
  },
  "api/Convenience.Models.DataModels.html": {
    "href": "api/Convenience.Models.DataModels.html",
    "title": "Namespace Convenience.Models.DataModels | Convenience",
    "keywords": "Namespace Convenience.Models.DataModels Classes ChumonJisseki 注文実績DTO ChumonJissekiMeisai 注文実績明細DTO KaikeiHeader 会計ヘッダーDTO KaikeiJisseki 会計実績DTO ShiireJisseki 仕入実績実績DTO ShiireMaster 仕入マスタDTO ShiireSakiMaster 仕入先マスタDTO ShohinMaster 商品マスタDTO SokoZaiko 倉庫在庫DTO TentoHaraidashiHeader 店頭払出ヘッダー実績DTO TentoHaraidashiJisseki 店頭払出実績DTO TentoZaiko 店頭在庫"
  },
  "api/Convenience.Models.ErrorViewModel.html": {
    "href": "api/Convenience.Models.ErrorViewModel.html",
    "title": "Class ErrorViewModel | Convenience",
    "keywords": "Class ErrorViewModel Namespace Convenience.Models Assembly Convenience.dll ƒGƒ‰[ƒy[ƒW—pƒrƒ…[ƒ‚ƒfƒ‹ public class ErrorViewModel Inheritance object ErrorViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ExceptionHandlerPathFeature ƒGƒ‰[”­¶Žž‚ÌÚ×î•ñ —áŠO‚ª”­¶‚µ‚½ƒpƒX‚â—áŠOŽ©‘Ì‚È‚Ç‚Ìî•ñ public IExceptionHandlerPathFeature? ExceptionHandlerPathFeature Field Value IExceptionHandlerPathFeature StatusCodeReExecuteFeature ƒGƒ‰[ƒnƒ“ƒhƒŠƒ“ƒO‚ÉŠÖ˜A‚·‚é‹@”\\‚ð’ñ‹Ÿ‚·‚éƒCƒ“ƒ^[ƒtƒF[ƒX “Á‚ÉA404 Not Found ‚â 500 Internal Server Error ‚È‚Ç‚ÌƒXƒe[ƒ^ƒXƒR[ƒh‚ª”­¶‚µ‚½ê‡‚ÉA ÄŽÀs‚³‚ê‚éƒŠƒNƒGƒXƒg‚Ìî•ñ‚ðŽæ“¾‚·‚é‚½‚ß‚ÉŽg—p public IStatusCodeReExecuteFeature? StatusCodeReExecuteFeature Field Value IStatusCodeReExecuteFeature Properties EventAt ƒGƒ‰[ƒCƒxƒ“ƒg”­¶“úŽž public DateTime? EventAt { get; set; } Property Value DateTime? RequestId ƒŠƒNƒGƒXƒgID public string? RequestId { get; set; } Property Value string ShowRequestId ã‹LƒŠƒNƒGƒXƒgID‚ðo‚·‚©o‚³‚È‚¢‚© public bool ShowRequestId { get; } Property Value bool StatusCode ƒXƒe[ƒ^ƒXƒR[ƒh public int? StatusCode { get; set; } Property Value int?"
  },
  "api/Convenience.Models.Interfaces.IChumon.html": {
    "href": "api/Convenience.Models.Interfaces.IChumon.html",
    "title": "Interface IChumon | Convenience",
    "keywords": "Interface IChumon Namespace Convenience.Models.Interfaces Assembly Convenience.dll 注文クラスインターフェース public interface IChumon Properties ChumonJisseki 注文実績プロパティ ChumonJisseki ChumonJisseki { get; set; } Property Value ChumonJisseki Methods ChumonSakusei(string, DateOnly) 注文作成 Task<ChumonJisseki> ChumonSakusei(string inShireSakiId, DateOnly inChumonDate) Parameters inShireSakiId string 仕入先コード inChumonDate DateOnly 注文日 Returns Task<ChumonJisseki> 新規作成された注文実績 Remarks 仕入先より注文実績データ（親）を生成する 注文実績明細データ（子）を仕入マスタを元に作成する 注文実績データ（親）と注文実績明細データ（子）を連結する 注文実績（プラス注文実績明細）を戻り値とする Exceptions Exception ChumonToiawase(string, DateOnly) 注文更新用問い合わせ Task<ChumonJisseki> ChumonToiawase(string inShireSakiId, DateOnly inChumonDate) Parameters inShireSakiId string 仕入先コード inChumonDate DateOnly 注文日 Returns Task<ChumonJisseki> 既存の注文実績 Remarks ①注文実績＋注文実績＋仕入マスタ＋商品マスタ検索 ②戻り値を注文実績＋注文実績明細とする ChumonUpdate(ChumonJisseki) 注文実績＋注文明細更新 Task<ChumonJisseki> ChumonUpdate(ChumonJisseki postedChumonJisseki) Parameters postedChumonJisseki ChumonJisseki postされた注文実績 Returns Task<ChumonJisseki> postされた注文実績を上書きされた注文実績"
  },
  "api/Convenience.Models.Interfaces.IChumonService.html": {
    "href": "api/Convenience.Models.Interfaces.IChumonService.html",
    "title": "Interface IChumonService | Convenience",
    "keywords": "Interface IChumonService Namespace Convenience.Models.Interfaces Assembly Convenience.dll 注文サービスクラス用インターフェース public interface IChumonService Properties chumon 注文クラス用オブジェクト変数 IChumon chumon { get; } Property Value IChumon Methods ChumonCommit(ChumonViewModel) 注文データをDBに書き込む Task<ChumonViewModel> ChumonCommit(ChumonViewModel inChumonViewModel) Parameters inChumonViewModel ChumonViewModel Returns Task<ChumonViewModel> ChumonViewModel 注文明細ビューモデル Exceptions Exception 排他制御の例外が起きたらスローする ChumonSetting(ChumonKeysViewModel) 注文セッティング Task<ChumonViewModel> ChumonSetting(ChumonKeysViewModel inChumonKeysViewModel) Parameters inChumonKeysViewModel ChumonKeysViewModel Returns Task<ChumonViewModel> ChumonKeysViewModel 注文明細ビューモデル SetChumonKeysViewModel() 注文キービューモデル初期設定 Task<ChumonKeysViewModel> SetChumonKeysViewModel() Returns Task<ChumonKeysViewModel> ChumonKeysViewModel 注文キービューモデル"
  },
  "api/Convenience.Models.Interfaces.IDbContext.html": {
    "href": "api/Convenience.Models.Interfaces.IDbContext.html",
    "title": "Interface IDbContext | Convenience",
    "keywords": "Interface IDbContext Namespace Convenience.Models.Interfaces Assembly Convenience.dll DB接続用インターフェース（c#コンソールデバッグ用） public interface IDbContext Fields ConfigrationFileName private const string ConfigrationFileName = \"appsettings.json\" Field Value string KeyWordInAppConfig private const string KeyWordInAppConfig = \"ConnectionStrings:ConvenienceContext\" Field Value string Methods DbOpen() PostgreSQL DBオープン protected static ConvenienceContext DbOpen() Returns ConvenienceContext"
  },
  "api/Convenience.Models.Interfaces.IKaikei.html": {
    "href": "api/Convenience.Models.Interfaces.IKaikei.html",
    "title": "Interface IKaikei | Convenience",
    "keywords": "Interface IKaikei Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface IKaikei Properties KaikeiHeader 会計ヘッダープロパティ KaikeiHeader KaikeiHeader { get; set; } Property Value KaikeiHeader Methods KaikeiAddcommodity(KaikeiJisseki) 会計実績の品目追加 Task<IList<KaikeiJisseki>> KaikeiAddcommodity(KaikeiJisseki argKaikeiJisseki) Parameters argKaikeiJisseki KaikeiJisseki Returns Task<IList<KaikeiJisseki>> KaikeiJisseki 品目を追加された会計実績 KaikeiSakusei(DateTime) 会計作成（新規会計用） 新規会計ヘッダーと実績を作成する Task<KaikeiHeader> KaikeiSakusei(DateTime argCurrentDateTime) Parameters argCurrentDateTime DateTime 適用日時 Returns Task<KaikeiHeader> KaikeiHeader 会計ヘッダー＋実績 Remarks ①会計ヘッダーの作成 ②会計実績の作成 KaikeiToiawase(string) Task<KaikeiHeader?> KaikeiToiawase(string argTentoHaraidashiId) Parameters argTentoHaraidashiId string Returns Task<KaikeiHeader> KaikeiUpdate(KaikeiHeader) 会計ヘッダー＋実績のＤＢ更新 Task<KaikeiHeader?> KaikeiUpdate(KaikeiHeader argpostedKaikeiHeader) Parameters argpostedKaikeiHeader KaikeiHeader 反映する会計ヘッダ＋実績 Returns Task<KaikeiHeader> KaikeiHeader DB更新された会計ヘッダ＋実績"
  },
  "api/Convenience.Models.Interfaces.IKaikeiService.html": {
    "href": "api/Convenience.Models.Interfaces.IKaikeiService.html",
    "title": "Interface IKaikeiService | Convenience",
    "keywords": "Interface IKaikeiService Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface IKaikeiService Methods GetShohinName(string) 商品コードを引数に、商品名称を回答する Task<string> GetShohinName(string argShohinId) Parameters argShohinId string 商品コード Returns Task<string> 商品名称 KaikeiAdd(KaikeiViewModel) 会計データの画面上の追加 Task<KaikeiViewModel> KaikeiAdd(KaikeiViewModel argKaikeiViewModel) Parameters argKaikeiViewModel KaikeiViewModel 会計ビューモデル Returns Task<KaikeiViewModel> KaikeiViewModel 会計品目が追加追加された会計ビュー KaikeiCommit(KaikeiViewModel) 会計Commit Task<KaikeiViewModel> KaikeiCommit(KaikeiViewModel argKaikeiViewModel) Parameters argKaikeiViewModel KaikeiViewModel 会計ビューモデル Returns Task<KaikeiViewModel> KaikeiViewModel 会計ビューモデル KaikeiSetting(KaikeiViewModel) 会計セッティング Task<KaikeiViewModel> KaikeiSetting(KaikeiViewModel argKaikeiViewModel) Parameters argKaikeiViewModel KaikeiViewModel 会計ビューモデル Returns Task<KaikeiViewModel> KaikeiViewModel 会計ビューモデル SetKaikeiViewModel() 会計ビューモデル設定 Task<KaikeiViewModel> SetKaikeiViewModel() Returns Task<KaikeiViewModel> KaikeiViewModel 会計ビューモデル"
  },
  "api/Convenience.Models.Interfaces.ISharedTools.html": {
    "href": "api/Convenience.Models.Interfaces.ISharedTools.html",
    "title": "Interface ISharedTools | Convenience",
    "keywords": "Interface ISharedTools Namespace Convenience.Models.Interfaces Assembly Convenience.dll シリアライズ・デシリアライズ化 public interface ISharedTools Methods ConvertFromSerial<T>(string) デシリアライズ化 protected static T ConvertFromSerial<T>(string serial) Parameters serial string シリアルデータ Returns T Type Parameters T デシリアライズ化対象オブジェクトのタイプ設定 ConvertToSerial<T>(T) シリアライズ化 protected static string ConvertToSerial<T>(T obj) Parameters obj T シリアル化する対象オブジェクト Returns string Type Parameters T シリアル対象オブジェクトのタイプ設定"
  },
  "api/Convenience.Models.Interfaces.IShiire.html": {
    "href": "api/Convenience.Models.Interfaces.IShiire.html",
    "title": "Interface IShiire | Convenience",
    "keywords": "Interface IShiire Namespace Convenience.Models.Interfaces Assembly Convenience.dll 仕入クラスインターフェース public interface IShiire Properties Shiirejissekis 仕入実績プロパティ Include ChuumonJissekiMeisai IList<ShiireJisseki> Shiirejissekis { get; set; } Property Value IList<ShiireJisseki> SokoZaikos 倉庫在庫プロパティ IList<SokoZaiko> SokoZaikos { get; set; } Property Value IList<SokoZaiko> Methods ChumonToShiireJisseki(string, DateOnly, uint) 仕入実績作成 Task<IList<ShiireJisseki>> ChumonToShiireJisseki(string inChumonId, DateOnly inShiireDate, uint inSeqByShiireDate) Parameters inChumonId string 注文コード（注文実績問い合わせキー） inShiireDate DateOnly 仕入日付（仕入実績にセットされる） inSeqByShiireDate uint 仕入日付内のシーケンス（仕入実績にセットされる） Returns Task<IList<ShiireJisseki>> 注文実績から新規作成された仕入実績 ChuumonIdOnShiireJissekiExistingCheck(string, DateOnly, uint) Task<bool> ChuumonIdOnShiireJissekiExistingCheck(string inChumonId, DateOnly inShiireDate, uint inSeqByShiireDate) Parameters inChumonId string inShiireDate DateOnly inSeqByShiireDate uint Returns Task<bool> ChuumonZanZaikoSuChousei(string, IList<ShiireJisseki>) 注文残・在庫数量調整 Task<Shiire.ShiireUkeireReturnSet> ChuumonZanZaikoSuChousei(string inChumonId, IList<ShiireJisseki> inShiireJissekis) Parameters inChumonId string 注文コード inShiireJissekis IList<ShiireJisseki> 仕入実績（注文実績がインクルードされていること） Returns Task<Shiire.ShiireUkeireReturnSet> 注文残・倉庫在庫が調整された注文残・倉庫在庫調整用モデル NextSeq(string, DateOnly) 注文コード、仕入日を元に、次の仕入SEQを求める 仕入実績の主キーは注文コード、仕入日、仕入SEQなので、仕入日に数回仕入れる場合は、 仕入SEQをインクリメントして利用する Task<uint> NextSeq(string inChumonId, DateOnly inShiireDate) Parameters inChumonId string 仕入実績検索キー：注文コード inShiireDate DateOnly 仕入実績検索キー：仕入日 Returns Task<uint> 次の仕入SEQ（次に仕入実績を登録する仕入SEQ） ShiireSokoConnection(IList<ShiireJisseki>, IEnumerable<SokoZaiko>) 倉庫在庫を仕入データに接続する（表示前に利用する） NotMappedは外部キーが使えないから、includeできないため IList<ShiireJisseki> ShiireSokoConnection(IList<ShiireJisseki> inShiireJissekis, IEnumerable<SokoZaiko> indata) Parameters inShiireJissekis IList<ShiireJisseki> 仕入実績 indata IEnumerable<SokoZaiko> 仕入実績に結合する倉庫在庫 Returns IList<ShiireJisseki> ShiireToShiireJisseki(string, DateOnly, uint) 注文実績から仕入実績プロパティに反映 Task<IList<ShiireJisseki>> ShiireToShiireJisseki(string inChumonId, DateOnly inShiireDate, uint inSeqByShiireDate) Parameters inChumonId string 注文コード inShiireDate DateOnly 仕入日付 inSeqByShiireDate uint 仕入SEQ Returns Task<IList<ShiireJisseki>> ShiireUpdate(IList<ShiireJisseki>) 仕入データPost内容の反映 IList<ShiireJisseki> ShiireUpdate(IList<ShiireJisseki> inShiireJissekis) Parameters inShiireJissekis IList<ShiireJisseki> Postされた仕入実績 Returns IList<ShiireJisseki> Postされた注仕入実績がオーバライドされた仕入実績プロパティ ZanAriChumonList() 注文残がある注文のリスト化 Task<IList<Shiire.ChumonList>> ZanAriChumonList() Returns Task<IList<Shiire.ChumonList>> 注文残のある注文コード一覧"
  },
  "api/Convenience.Models.Interfaces.IShiireService.html": {
    "href": "api/Convenience.Models.Interfaces.IShiireService.html",
    "title": "Interface IShiireService | Convenience",
    "keywords": "Interface IShiireService Namespace Convenience.Models.Interfaces Assembly Convenience.dll 仕入サービス用インターフェース public interface IShiireService Properties shiire 仕入クラス用オブジェクト変数 IShiire shiire { get; } Property Value IShiire Methods SetShiireKeysModel() 仕入キーモデル設定（仕入画面１枚目用） Task<ShiireKeysViewModel> SetShiireKeysModel() Returns Task<ShiireKeysViewModel> ShiireKeysViewModel 仕入キービューモデル ShiireCommit(ShiireViewModel) 仕入データをDBに書き込む・注文残の調整・倉庫在庫への反映（Post後処理・再表示用） 仕入実績データPost後の後の再表示用 Task<ShiireViewModel> ShiireCommit(ShiireViewModel inShiireViewModel) Parameters inShiireViewModel ShiireViewModel 仕入ビューモデル（注文コード・仕入日・仕入SEQ、Postされた仕入実績データ） Returns Task<ShiireViewModel> 仕入ビューモデル（更新エンティティ数・DB更新された仕入実績） Remarks ①仕入実績がある場合は、仕入実績取り込み、ない場合は注文実績から作成 ② ①の内容に対し、ポストデータを反映 ③注文実績の注文残と倉庫在庫の在庫数を仕入数にあわせ過不足する ④仕入実績DB更新 ⑤仕入実績に倉庫在庫を接続しインクルードできるようにする（表示用） ShiireSetting(ShiireKeysViewModel) 仕入セッティング 仕入実績データの画面初期表示用（DB更新後の再表示も含む） Task<ShiireViewModel> ShiireSetting(ShiireKeysViewModel inShiireKeysViewModel) Parameters inShiireKeysViewModel ShiireKeysViewModel 注文キービューモデル Returns Task<ShiireViewModel> ShiireViewModel 仕入ビューモデル（仕入実績・インクルードされた注文実績・インクルードされた倉庫在庫） Remarks ①現在時間により仕入日セット ②仕入は毎回新規なので、仕入SEQを発番・注文実績から仕入実績を作る ③関係する倉庫在庫を接続（表示用）"
  },
  "api/Convenience.Models.Interfaces.ITentoHaraidashi.html": {
    "href": "api/Convenience.Models.Interfaces.ITentoHaraidashi.html",
    "title": "Interface ITentoHaraidashi | Convenience",
    "keywords": "Interface ITentoHaraidashi Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface ITentoHaraidashi Properties TentoHaraidashiHeader プロパティ 店頭払出ヘッダー TentoHaraidashiHeader TentoHaraidashiHeader { get; set; } Property Value TentoHaraidashiHeader Methods TentoHaraidashiSakusei(DateTime) 倉庫在庫から店頭払出実績（ヘッダー＋実績）を作成する ①店頭払出ヘッダーを作成する ②倉庫在庫より、店頭払出実績（ヘッダー＋実績）を作成する ③データ表示用に＋倉庫在庫＋仕入マスタもリンク接続する 4️⃣店頭在庫をリンク接続する Task<TentoHaraidashiHeader> TentoHaraidashiSakusei(DateTime argCurrentDateTime) Parameters argCurrentDateTime DateTime Returns Task<TentoHaraidashiHeader> TentoHaraidashiHeader 店頭払出ヘッダー＋店頭払出実績 TentoHaraidashiToiawase(string) 店頭払出問い合わせ ①店頭払出ヘッダー＋実績を問い合わせる ②実績に倉庫在庫をくっつける ②実績に仕入マスタ＋商品マスタをくっつける ③実績に店頭在庫をくっつける Task<TentoHaraidashiHeader?> TentoHaraidashiToiawase(string argTentoHaraidashiId) Parameters argTentoHaraidashiId string 店頭払出コード Returns Task<TentoHaraidashiHeader> TentoHaraidashiHeader 店頭払出ヘッダ"
  },
  "api/Convenience.Models.Interfaces.ITentoHaraidashiService.html": {
    "href": "api/Convenience.Models.Interfaces.ITentoHaraidashiService.html",
    "title": "Interface ITentoHaraidashiService | Convenience",
    "keywords": "Interface ITentoHaraidashiService Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface ITentoHaraidashiService Methods SetTentoHaraidashiViewModel() 店頭払出ビューモデル設定 Task<TentoHaraidashiViewModel> SetTentoHaraidashiViewModel() Returns Task<TentoHaraidashiViewModel> TentoHaraidashiViewModel 店頭払出ビューモデル TentoHaraidashiCommit(TentoHaraidashiViewModel) 店頭払出Commit Task<TentoHaraidashiViewModel> TentoHaraidashiCommit(TentoHaraidashiViewModel argTentoHaraidashiViewModel) Parameters argTentoHaraidashiViewModel TentoHaraidashiViewModel 店頭払出ビューモデル Returns Task<TentoHaraidashiViewModel> TentoHaraidashiViewModel 店頭払出ビューモデル TentoHaraidashiSetting(TentoHaraidashiViewModel) 店頭払出セッティング Task<TentoHaraidashiViewModel> TentoHaraidashiSetting(TentoHaraidashiViewModel argTentoHaraidashiViewModel) Parameters argTentoHaraidashiViewModel TentoHaraidashiViewModel 店頭払出ビューモデル Returns Task<TentoHaraidashiViewModel> TentoHaraidashiViewModel 店頭払出ビューモデル"
  },
  "api/Convenience.Models.Interfaces.IZaiko.html": {
    "href": "api/Convenience.Models.Interfaces.IZaiko.html",
    "title": "Interface IZaiko | Convenience",
    "keywords": "Interface IZaiko Namespace Convenience.Models.Interfaces Assembly Convenience.dll 在庫クラスインターフェース public interface IZaiko Properties SoKoZaikoQueryable 生成される問い合わせ（遅延実行用） IQueryable<ZaikoViewModel.ZaikoListLine>? SoKoZaikoQueryable { get; set; } Property Value IQueryable<ZaikoViewModel.ZaikoListLine> Methods AddOrderby(string, bool) 機能：注文実績明細検索＆倉庫在庫（遅延実行）＋Where内容の状態から、ソート順の追加セットを行う IQueryable<ZaikoViewModel.ZaikoListLine> AddOrderby(string sortKey, bool descending) Parameters sortKey string ソートキー descending bool 降順・昇順区分 Returns IQueryable<ZaikoViewModel.ZaikoListLine> 倉庫在庫 ＆ 注文実績明細(変数:SoKoZaikoQueryable) ソート指示付き ISoKoZaikoQueryable型にして遅延実行化 CreateSokoZaikoList(string) 注文実績明細検索＆倉庫在庫（遅延実行） IQueryable<ZaikoViewModel.ZaikoListLine> CreateSokoZaikoList(string searchKey) Parameters searchKey string Returns IQueryable<ZaikoViewModel.ZaikoListLine> 倉庫在庫 ＆ 注文実績明細(変数:SoKoZaikoQueryable) Where指示付き ISoKoZaikoQueryable型にして遅延実行化"
  },
  "api/Convenience.Models.Interfaces.IZaikoService.html": {
    "href": "api/Convenience.Models.Interfaces.IZaikoService.html",
    "title": "Interface IZaikoService | Convenience",
    "keywords": "Interface IZaikoService Namespace Convenience.Models.Interfaces Assembly Convenience.dll 倉庫在庫検索（サービス）インターフェース public interface IZaikoService Methods KeyInput(KeyEventRec[], SelecteWhereItem[]) 検索キー画面の情報取得 Task<IList<ZaikoViewModel.ZaikoListLine>> KeyInput(ZaikoViewModel.KeyEventRec[] keydata, ZaikoViewModel.SelecteWhereItem[] selecteWhereItemArray) Parameters keydata KeyEventRec[] selecteWhereItemArray SelecteWhereItem[] Returns Task<IList<ZaikoViewModel.ZaikoListLine>>"
  },
  "api/Convenience.Models.Interfaces.html": {
    "href": "api/Convenience.Models.Interfaces.html",
    "title": "Namespace Convenience.Models.Interfaces | Convenience",
    "keywords": "Namespace Convenience.Models.Interfaces Interfaces IChumon 注文クラスインターフェース IChumonService 注文サービスクラス用インターフェース IDbContext DB接続用インターフェース（c#コンソールデバッグ用） IKaikei IKaikeiService ISharedTools シリアライズ・デシリアライズ化 IShiire 仕入クラスインターフェース IShiireService 仕入サービス用インターフェース ITentoHaraidashi ITentoHaraidashiService IZaiko 在庫クラスインターフェース IZaikoService 倉庫在庫検索（サービス）インターフェース"
  },
  "api/Convenience.Models.Menu.html": {
    "href": "api/Convenience.Models.Menu.html",
    "title": "Class Menu | Convenience",
    "keywords": "Class Menu Namespace Convenience.Models Assembly Convenience.dll メニュークラス public class Menu Inheritance object Menu Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MenuList メニュー表示用リスト（メニューアイテムリスト） public List<MenuItem> MenuList { get; set; } Property Value List<MenuItem>"
  },
  "api/Convenience.Models.MenuItem.html": {
    "href": "api/Convenience.Models.MenuItem.html",
    "title": "Class MenuItem | Convenience",
    "keywords": "Class MenuItem Namespace Convenience.Models Assembly Convenience.dll メニューアイテムクラス public class MenuItem Inheritance object MenuItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description 説明 public string Description { get; set; } Property Value string Name メニュー名 public string Name { get; set; } Property Value string Url 起動ＵＲＬ public string Url { get; set; } Property Value string"
  },
  "api/Convenience.Models.Properties.Chumon.DelegateOverrideProc.html": {
    "href": "api/Convenience.Models.Properties.Chumon.DelegateOverrideProc.html",
    "title": "Delegate Chumon.DelegateOverrideProc | Convenience",
    "keywords": "Delegate Chumon.DelegateOverrideProc Namespace Convenience.Models.Properties Assembly Convenience.dll private delegate ChumonJisseki Chumon.DelegateOverrideProc(ChumonJisseki postedChumonJisseki, ChumonJisseki existedChumonJisseki) Parameters postedChumonJisseki ChumonJisseki existedChumonJisseki ChumonJisseki Returns ChumonJisseki"
  },
  "api/Convenience.Models.Properties.Chumon.html": {
    "href": "api/Convenience.Models.Properties.Chumon.html",
    "title": "Class Chumon | Convenience",
    "keywords": "Class Chumon Namespace Convenience.Models.Properties Assembly Convenience.dll 注文クラス public class Chumon : IChumon, IDbContext Inheritance object Chumon Implements IChumon IDbContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Chumon() 注文クラスデバッグ用 public Chumon() Chumon(ConvenienceContext) コンストラクタ public Chumon(ConvenienceContext context) Parameters context ConvenienceContext DBコンテキスト Fields OverrideProc private readonly Chumon.DelegateOverrideProc OverrideProc Field Value Chumon.DelegateOverrideProc _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext Properties ChumonJisseki 注文実績プロパティ public ChumonJisseki ChumonJisseki { get; set; } Property Value ChumonJisseki Methods ChumonIdHatsuban(DateOnly) 注文コード発番 private Task<string> ChumonIdHatsuban(DateOnly InTheDate) Parameters InTheDate DateOnly 注文日付 Returns Task<string> 発番された注文コード Remarks 注文コード書式例）：20240129-001(yyyyMMdd-001～999） ChumonSakusei(string, DateOnly) 注文作成 public Task<ChumonJisseki> ChumonSakusei(string inShireSakiId, DateOnly inChumonDate) Parameters inShireSakiId string 仕入先コード inChumonDate DateOnly 注文日 Returns Task<ChumonJisseki> 新規作成された注文実績 Remarks 仕入先より注文実績データ（親）を生成する 注文実績明細データ（子）を仕入マスタを元に作成する 注文実績データ（親）と注文実績明細データ（子）を連結する 注文実績（プラス注文実績明細）を戻り値とする Exceptions Exception ChumonToiawase(string, DateOnly) 注文更新用問い合わせ public Task<ChumonJisseki?> ChumonToiawase(string inShireSakiId, DateOnly inChumonDate) Parameters inShireSakiId string 仕入先コード inChumonDate DateOnly 注文日 Returns Task<ChumonJisseki> 既存の注文実績 Remarks ①注文実績＋注文実績明細＋仕入マスタ＋商品マスタ検索 ②戻り値を注文実績＋注文実績明細とする ChumonUpdate(ChumonJisseki) 注文実績＋注文明細更新 public Task<ChumonJisseki> ChumonUpdate(ChumonJisseki postedChumonJisseki) Parameters postedChumonJisseki ChumonJisseki postされた注文実績 Returns Task<ChumonJisseki> postされた注文実績を上書きされた注文実績 ChumonUpdateWithAutoMapper(ChumonJisseki, ChumonJisseki) Postデータの上乗せ処理（AutoMapper利用) private static ChumonJisseki ChumonUpdateWithAutoMapper(ChumonJisseki postedChumonJisseki, ChumonJisseki existedChumonJisseki) Parameters postedChumonJisseki ChumonJisseki 注文実績＋明細のPostデータ existedChumonJisseki ChumonJisseki 注文実績＋明細のDBデータ Returns ChumonJisseki 上乗せされた注文実績＋明細データ Remarks private readonly DelegateOverrideProc OverrideProc = ChumonUpdateWithAutoMapper;の設定の時にコールされる ３つの回答例の説明用の為、研修生は気にしなくて良い ChumonUpdateWithHandMade(ChumonJisseki, ChumonJisseki) Postデータの上乗せ処理（Linq使った手書き対応) private static ChumonJisseki ChumonUpdateWithHandMade(ChumonJisseki postedChumonJisseki, ChumonJisseki existedChumonJisseki) Parameters postedChumonJisseki ChumonJisseki 注文実績＋明細のPostデータ existedChumonJisseki ChumonJisseki 注文実績＋明細のDBデータ Returns ChumonJisseki 上乗せされた注文実績＋明細データ Remarks private readonly DelegateOverrideProc OverrideProc = ChumonUpdateWithHandMade;の設定の時にコールされる ３つの回答例の説明用の為、研修生は気にしなくて良い ChumonUpdateWithIndex(ChumonJisseki, ChumonJisseki) Postデータの上乗せ処理（For+Index使った手書き対応) private static ChumonJisseki ChumonUpdateWithIndex(ChumonJisseki postedChumonJisseki, ChumonJisseki existedChumonJisseki) Parameters postedChumonJisseki ChumonJisseki 注文実績＋明細のPostデータ existedChumonJisseki ChumonJisseki 注文実績＋明細のDBデータ Returns ChumonJisseki 上乗せされた注文実績＋明細データ Remarks private readonly DelegateOverrideProc OverrideProc = ChumonUpdateWithIndex;の設定の時にコールされる ３つの回答例の説明用の為、研修生は気にしなくて良い"
  },
  "api/Convenience.Models.Properties.ChumonJissekiSetupException.html": {
    "href": "api/Convenience.Models.Properties.ChumonJissekiSetupException.html",
    "title": "Class ChumonJissekiSetupException | Convenience",
    "keywords": "Class ChumonJissekiSetupException Namespace Convenience.Models.Properties Assembly Convenience.dll 注文クラスのセッティングエラー public class ChumonJissekiSetupException : Exception, ISerializable Inheritance object Exception ChumonJissekiSetupException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ChumonJissekiSetupException(string) public ChumonJissekiSetupException(string message) Parameters message string"
  },
  "api/Convenience.Models.Properties.DataCountMismatchException.html": {
    "href": "api/Convenience.Models.Properties.DataCountMismatchException.html",
    "title": "Class DataCountMismatchException | Convenience",
    "keywords": "Class DataCountMismatchException Namespace Convenience.Models.Properties Assembly Convenience.dll ０件データ public class DataCountMismatchException : Exception, ISerializable Inheritance object Exception DataCountMismatchException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DataCountMismatchException(string) public DataCountMismatchException(string message) Parameters message string"
  },
  "api/Convenience.Models.Properties.DataPositionMismatchException.html": {
    "href": "api/Convenience.Models.Properties.DataPositionMismatchException.html",
    "title": "Class DataPositionMismatchException | Convenience",
    "keywords": "Class DataPositionMismatchException Namespace Convenience.Models.Properties Assembly Convenience.dll データ上乗せ時のindex位置エラー public class DataPositionMismatchException : Exception, ISerializable Inheritance object Exception DataPositionMismatchException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DataPositionMismatchException(string) public DataPositionMismatchException(string message) Parameters message string"
  },
  "api/Convenience.Models.Properties.Kaikei.html": {
    "href": "api/Convenience.Models.Properties.Kaikei.html",
    "title": "Class Kaikei | Convenience",
    "keywords": "Class Kaikei Namespace Convenience.Models.Properties Assembly Convenience.dll 店頭払出クラス public class Kaikei : IKaikei Inheritance object Kaikei Implements IKaikei Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Kaikei(ConvenienceContext) コンストラクタ（ASP用） public Kaikei(ConvenienceContext context) Parameters context ConvenienceContext Fields _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext Properties KaikeiHeader プロパティ 店頭払出ヘッダー public KaikeiHeader? KaikeiHeader { get; set; } Property Value KaikeiHeader Methods KaikeiAddcommodity(KaikeiJisseki) 会計実績の品目追加 public Task<IList<KaikeiJisseki>> KaikeiAddcommodity(KaikeiJisseki argKaikeiJisseki) Parameters argKaikeiJisseki KaikeiJisseki Returns Task<IList<KaikeiJisseki>> KaikeiJisseki 品目を追加された会計実績 KaikeiSakusei(DateTime) 会計作成（新規会計用） 新規会計ヘッダーと実績を作成する public Task<KaikeiHeader> KaikeiSakusei(DateTime argCurrentDateTime) Parameters argCurrentDateTime DateTime 適用日時 Returns Task<KaikeiHeader> KaikeiHeader 会計ヘッダー＋実績 Remarks ①会計ヘッダーの作成 ②会計実績の作成 KaikeiToiawase(string) public Task<KaikeiHeader?> KaikeiToiawase(string argTentoHaraidashiId) Parameters argTentoHaraidashiId string Returns Task<KaikeiHeader> KaikeiUpdate(KaikeiHeader) 会計ヘッダー＋実績のＤＢ更新 public Task<KaikeiHeader?> KaikeiUpdate(KaikeiHeader argpostedKaikeiHeader) Parameters argpostedKaikeiHeader KaikeiHeader 反映する会計ヘッダ＋実績 Returns Task<KaikeiHeader> KaikeiHeader DB更新された会計ヘッダ＋実績 UriageDatetimeIdHatsuban(DateTime) 会計コード発番 private string UriageDatetimeIdHatsuban(DateTime argCurrentDateTime) Parameters argCurrentDateTime DateTime 会計日時 Returns string 会計コード(yyyyMMdd-HH-001～999、HHは店頭払出日時の時間部分 ZaikoConnection(string, DateTime, decimal, TentoZaiko?) public Task<TentoZaiko> ZaikoConnection(string argShohinId, DateTime argUriageDateTime, decimal argDiffUriageSu, TentoZaiko? argTentoZaiko) Parameters argShohinId string argUriageDateTime DateTime argDiffUriageSu decimal argTentoZaiko TentoZaiko Returns Task<TentoZaiko>"
  },
  "api/Convenience.Models.Properties.Message.ErrDef.html": {
    "href": "api/Convenience.Models.Properties.Message.ErrDef.html",
    "title": "Enum Message.ErrDef | Convenience",
    "keywords": "Enum Message.ErrDef Namespace Convenience.Models.Properties Assembly Convenience.dll エラーコードenum設定（0から付与） public enum Message.ErrDef Fields CanNotlUpdate = 2 ChumonDateError = 4 ChumonIdError = 3 ChumonIdRelationError = 5 ChumonSuBadRange = 7 ChumonSuIsNull = 6 ChumonZanIsNull = 8 DataValid = 0 NormalUpdate = 1 OtherError = 10 SuErrorBetChumonSuAndZan = 9"
  },
  "api/Convenience.Models.Properties.Message.MessageData.html": {
    "href": "api/Convenience.Models.Properties.Message.MessageData.html",
    "title": "Class Message.MessageData | Convenience",
    "keywords": "Class Message.MessageData Namespace Convenience.Models.Properties Assembly Convenience.dll メッセ―ジ表示用データクラス public class Message.MessageData Inheritance object Message.MessageData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MessageNo メッセージ番号 public Message.ErrDef MessageNo { get; set; } Property Value Message.ErrDef MessageText 表示メッセージ public string? MessageText { get; set; } Property Value string"
  },
  "api/Convenience.Models.Properties.Message.html": {
    "href": "api/Convenience.Models.Properties.Message.html",
    "title": "Class Message | Convenience",
    "keywords": "Class Message Namespace Convenience.Models.Properties Assembly Convenience.dll 正常・エラーメッセージ用クラス public class Message Inheritance object Message Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MessageList エラー番号とメッセージ表示のリンク private static readonly ICollection<Message.MessageData> MessageList Field Value ICollection<Message.MessageData> Properties messageData メッセ―ジ表示用データクラスのオブジェクト変数 public static Message.MessageData? messageData { get; set; } Property Value Message.MessageData Remarks NULL許容 Methods SetMessage(ErrDef) エラーメッセージのセット public Message.MessageData? SetMessage(Message.ErrDef inErrCd) Parameters inErrCd Message.ErrDef 表示したいメッセージ内容に対応したエラーコード Returns Message.MessageData メッセ―ジ表示用データクラスがセットされたオブジェクト変数 Remarks NULL返却あり"
  },
  "api/Convenience.Models.Properties.NoDataFoundException.html": {
    "href": "api/Convenience.Models.Properties.NoDataFoundException.html",
    "title": "Class NoDataFoundException | Convenience",
    "keywords": "Class NoDataFoundException Namespace Convenience.Models.Properties Assembly Convenience.dll エンティティからのデータがなかったとき public class NoDataFoundException : Exception, ISerializable Inheritance object Exception NoDataFoundException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NoDataFoundException(string) public NoDataFoundException(string message) Parameters message string"
  },
  "api/Convenience.Models.Properties.OrderCodeGenerationException.html": {
    "href": "api/Convenience.Models.Properties.OrderCodeGenerationException.html",
    "title": "Class OrderCodeGenerationException | Convenience",
    "keywords": "Class OrderCodeGenerationException Namespace Convenience.Models.Properties Assembly Convenience.dll 注文コード発番時のエラー public class OrderCodeGenerationException : Exception, ISerializable Inheritance object Exception OrderCodeGenerationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OrderCodeGenerationException(string) public OrderCodeGenerationException(string message) Parameters message string"
  },
  "api/Convenience.Models.Properties.PostDataInValidException.html": {
    "href": "api/Convenience.Models.Properties.PostDataInValidException.html",
    "title": "Class PostDataInValidException | Convenience",
    "keywords": "Class PostDataInValidException Namespace Convenience.Models.Properties Assembly Convenience.dll ポストデータチェックエラー public class PostDataInValidException : Exception, ISerializable Inheritance object Exception PostDataInValidException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PostDataInValidException(string) public PostDataInValidException(string message) Parameters message string"
  },
  "api/Convenience.Models.Properties.Shiire.ChumonList.html": {
    "href": "api/Convenience.Models.Properties.Shiire.ChumonList.html",
    "title": "Class Shiire.ChumonList | Convenience",
    "keywords": "Class Shiire.ChumonList Namespace Convenience.Models.Properties Assembly Convenience.dll 仕入画面のキー入力の注文コード一覧用 public class Shiire.ChumonList Inheritance object Shiire.ChumonList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonId public string ChumonId { get; set; } Property Value string ChumonZan public decimal ChumonZan { get; set; } Property Value decimal"
  },
  "api/Convenience.Models.Properties.Shiire.ShiireUkeireReturnSet.html": {
    "href": "api/Convenience.Models.Properties.Shiire.ShiireUkeireReturnSet.html",
    "title": "Class Shiire.ShiireUkeireReturnSet | Convenience",
    "keywords": "Class Shiire.ShiireUkeireReturnSet Namespace Convenience.Models.Properties Assembly Convenience.dll 注文残・倉庫在庫調整用モデル public class Shiire.ShiireUkeireReturnSet Inheritance object Shiire.ShiireUkeireReturnSet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ShiireJissekis 仕入実績 Include注文実績 public IList<ShiireJisseki> ShiireJissekis { get; set; } Property Value IList<ShiireJisseki> SokoZaikos 倉庫在庫 public IList<SokoZaiko> SokoZaikos { get; set; } Property Value IList<SokoZaiko>"
  },
  "api/Convenience.Models.Properties.Shiire.html": {
    "href": "api/Convenience.Models.Properties.Shiire.html",
    "title": "Class Shiire | Convenience",
    "keywords": "Class Shiire Namespace Convenience.Models.Properties Assembly Convenience.dll 仕入クラス public class Shiire : IShiire, IDbContext Inheritance object Shiire Implements IShiire IDbContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Shiire() 仕入クラスデバッグ用 public Shiire() Shiire(ConvenienceContext) コンストラクタ 通常の場合はＤＢコンテキストを引き継ぐ public Shiire(ConvenienceContext context) Parameters context ConvenienceContext ASPから引き継ぐDBコンテキスト Fields _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext Properties Shiirejissekis 仕入実績プロパティ Include ChuumonJissekiMeisai public IList<ShiireJisseki> Shiirejissekis { get; set; } Property Value IList<ShiireJisseki> SokoZaikos 倉庫在庫プロパティ public IList<SokoZaiko> SokoZaikos { get; set; } Property Value IList<SokoZaiko> Methods ChumonToShiireJisseki(string, DateOnly, uint) 仕入実績作成 public Task<IList<ShiireJisseki>> ChumonToShiireJisseki(string inChumonId, DateOnly inShiireDate, uint inSeqByShiireDate) Parameters inChumonId string 注文コード（注文実績問い合わせキー） inShiireDate DateOnly 仕入日付（仕入実績にセットされる） inSeqByShiireDate uint 仕入日付内のシーケンス（仕入実績にセットされる） Returns Task<IList<ShiireJisseki>> 注文実績から新規作成された仕入実績 ChuumonIdOnShiireJissekiExistingCheck(string, DateOnly, uint) public Task<bool> ChuumonIdOnShiireJissekiExistingCheck(string inChumonId, DateOnly inShiireDate, uint inSeqByShiireDate) Parameters inChumonId string inShiireDate DateOnly inSeqByShiireDate uint Returns Task<bool> ChuumonZanZaikoSuChousei(string, IList<ShiireJisseki>) 注文残・在庫数量調整 public Task<Shiire.ShiireUkeireReturnSet> ChuumonZanZaikoSuChousei(string inChumonId, IList<ShiireJisseki> inShiireJissekis) Parameters inChumonId string 注文コード inShiireJissekis IList<ShiireJisseki> 仕入実績（注文実績がインクルードされていること） Returns Task<Shiire.ShiireUkeireReturnSet> 注文残・倉庫在庫が調整された注文残・倉庫在庫調整用モデル NextSeq(string, DateOnly) 注文コード、仕入日を元に、次の仕入SEQを求める 仕入実績の主キーは注文コード、仕入日、仕入SEQなので、仕入日に数回仕入れる場合は、 仕入SEQをインクリメントして利用する public Task<uint> NextSeq(string inChumonId, DateOnly inShiireDate) Parameters inChumonId string 仕入実績検索キー：注文コード inShiireDate DateOnly 仕入実績検索キー：仕入日 Returns Task<uint> 次の仕入SEQ（次に仕入実績を登録する仕入SEQ） ShiireSokoConnection(IList<ShiireJisseki>, IEnumerable<SokoZaiko>) 倉庫在庫を仕入データに接続する（表示前に利用する） NotMappedは外部キーが使えないから、includeできないため public IList<ShiireJisseki> ShiireSokoConnection(IList<ShiireJisseki> inShiireJissekis, IEnumerable<SokoZaiko> inSokoZaiko) Parameters inShiireJissekis IList<ShiireJisseki> 仕入実績 inSokoZaiko IEnumerable<SokoZaiko> Returns IList<ShiireJisseki> ShiireToShiireJisseki(string, DateOnly, uint) 仕入実績から仕入実績プロパティに反映 public Task<IList<ShiireJisseki>> ShiireToShiireJisseki(string inChumonId, DateOnly inShiireDate, uint inSeqByShiireDate) Parameters inChumonId string 注文コード inShiireDate DateOnly 仕入日付 inSeqByShiireDate uint 仕入SEQ Returns Task<IList<ShiireJisseki>> ShiireUpdate(IList<ShiireJisseki>) 仕入データPost内容の反映 public IList<ShiireJisseki> ShiireUpdate(IList<ShiireJisseki> inShiireJissekis) Parameters inShiireJissekis IList<ShiireJisseki> Postされた仕入実績 Returns IList<ShiireJisseki> Postされた注仕入実績がオーバライドされた仕入実績プロパティ ZaikoSet(IEnumerable<ShiireJisseki>) 倉庫在庫登録 private Task<IList<SokoZaiko>> ZaikoSet(IEnumerable<ShiireJisseki> shiireJissekis) Parameters shiireJissekis IEnumerable<ShiireJisseki> Postされたデータでオーバーライドされた仕入実績 Returns Task<IList<SokoZaiko>> 仕入実績から仕入差を使って在庫数を調整された倉庫在庫 ZanAriChumonList() 注文残がある注文のリスト化 public Task<IList<Shiire.ChumonList>> ZanAriChumonList() Returns Task<IList<Shiire.ChumonList>> 注文残のある注文コード一覧"
  },
  "api/Convenience.Models.Properties.TentoHaraidashi.html": {
    "href": "api/Convenience.Models.Properties.TentoHaraidashi.html",
    "title": "Class TentoHaraidashi | Convenience",
    "keywords": "Class TentoHaraidashi Namespace Convenience.Models.Properties Assembly Convenience.dll 店頭払出クラス public class TentoHaraidashi : ITentoHaraidashi Inheritance object TentoHaraidashi Implements ITentoHaraidashi Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TentoHaraidashi(ConvenienceContext) コンストラクタ（ASP用） public TentoHaraidashi(ConvenienceContext context) Parameters context ConvenienceContext Fields _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext Properties TentoHaraidashiHeader プロパティ 店頭払出ヘッダー public TentoHaraidashiHeader? TentoHaraidashiHeader { get; set; } Property Value TentoHaraidashiHeader Methods TentoHaraidashiHatsuban(DateTime) 店頭払出コード発番 private string TentoHaraidashiHatsuban(DateTime argCurrentDateTime) Parameters argCurrentDateTime DateTime 店頭払出日時 Returns string 店頭払出コード(yyyyMMdd-HH-001～999、HHは店頭払出日時の時間部分 TentoHaraidashiSakusei(DateTime) 倉庫在庫から店頭払出実績（ヘッダー＋実績）を作成する ①店頭払出ヘッダーを作成する ②倉庫在庫より、店頭払出実績（ヘッダー＋実績）を作成する ③データ表示用に＋倉庫在庫＋仕入マスタもリンク接続する 4️⃣店頭在庫をリンク接続する public Task<TentoHaraidashiHeader> TentoHaraidashiSakusei(DateTime argCurrentDateTime) Parameters argCurrentDateTime DateTime Returns Task<TentoHaraidashiHeader> TentoHaraidashiHeader 店頭払出ヘッダー＋店頭払出実績 TentoHaraidashiToiawase(string) 店頭払出問い合わせ ①店頭払出ヘッダー＋実績を問い合わせる ②実績に倉庫在庫をくっつける ②実績に仕入マスタ＋商品マスタをくっつける ③実績に店頭在庫をくっつける public Task<TentoHaraidashiHeader?> TentoHaraidashiToiawase(string argTentoHaraidashiId) Parameters argTentoHaraidashiId string 店頭払出コード Returns Task<TentoHaraidashiHeader> TentoHaraidashiHeader 店頭払出ヘッダ"
  },
  "api/Convenience.Models.Properties.Zaiko.html": {
    "href": "api/Convenience.Models.Properties.Zaiko.html",
    "title": "Class Zaiko | Convenience",
    "keywords": "Class Zaiko Namespace Convenience.Models.Properties Assembly Convenience.dll 注文実績明細検索＆倉庫在庫（遅延実行） public class Zaiko : IZaiko Inheritance object Zaiko Implements IZaiko Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Zaiko() コンストラクター（コンソール実行＝デバッグ用） public Zaiko() Zaiko(ConvenienceContext) ＤＢコンテキスト設定（ＡＳＰ実行用） public Zaiko(ConvenienceContext context) Parameters context ConvenienceContext Fields _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext isFirstCalled OrderByかThenByか切り替えるフラグ private bool isFirstCalled Field Value bool Properties SoKoZaikoQueryable 生成される問い合わせ（遅延実行用） public IQueryable<ZaikoViewModel.ZaikoListLine>? SoKoZaikoQueryable { get; set; } Property Value IQueryable<ZaikoViewModel.ZaikoListLine> Methods AddOrderby(string, bool) 機能：注文実績明細検索＆倉庫在庫（遅延実行）＋Where内容の状態から、ソート順の追加セットを行う public IQueryable<ZaikoViewModel.ZaikoListLine> AddOrderby(string sortKey, bool descending) Parameters sortKey string ソートキー descending bool 降順・昇順区分 Returns IQueryable<ZaikoViewModel.ZaikoListLine> 倉庫在庫 ＆ 注文実績明細(変数:SoKoZaikoQueryable) ソート指示付き ISoKoZaikoQueryable型にして遅延実行化 CreateSokoZaikoList(string) 注文実績明細検索＆倉庫在庫（遅延実行） public IQueryable<ZaikoViewModel.ZaikoListLine> CreateSokoZaikoList(string inSearchKey) Parameters inSearchKey string 検索キー Returns IQueryable<ZaikoViewModel.ZaikoListLine> 倉庫在庫 ＆ 注文実績明細(変数:SoKoZaikoQueryable) Where指示付き ISoKoZaikoQueryable型にして遅延実行化"
  },
  "api/Convenience.Models.Properties.html": {
    "href": "api/Convenience.Models.Properties.html",
    "title": "Namespace Convenience.Models.Properties | Convenience",
    "keywords": "Namespace Convenience.Models.Properties Classes Chumon 注文クラス ChumonJissekiSetupException 注文クラスのセッティングエラー DataCountMismatchException ０件データ DataPositionMismatchException データ上乗せ時のindex位置エラー Kaikei 店頭払出クラス Message 正常・エラーメッセージ用クラス Message.MessageData メッセ―ジ表示用データクラス NoDataFoundException エンティティからのデータがなかったとき OrderCodeGenerationException 注文コード発番時のエラー PostDataInValidException ポストデータチェックエラー Shiire 仕入クラス Shiire.ChumonList 仕入画面のキー入力の注文コード一覧用 Shiire.ShiireUkeireReturnSet 注文残・倉庫在庫調整用モデル TentoHaraidashi 店頭払出クラス Zaiko 注文実績明細検索＆倉庫在庫（遅延実行） Enums Message.ErrDef エラーコードenum設定（0から付与） Delegates Chumon.DelegateOverrideProc"
  },
  "api/Convenience.Models.Services.ChumonService.html": {
    "href": "api/Convenience.Models.Services.ChumonService.html",
    "title": "Class ChumonService | Convenience",
    "keywords": "Class ChumonService Namespace Convenience.Models.Services Assembly Convenience.dll 注文サービスクラス public class ChumonService : IChumonService, IDbContext Inheritance object ChumonService Implements IChumonService IDbContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChumonService() デバッグ用 public ChumonService() ChumonService(ConvenienceContext, IChumon) コンストラクター 通常用 public ChumonService(ConvenienceContext context, IChumon chumon) Parameters context ConvenienceContext DBコンテキスト chumon IChumon 注文クラスＤＩ注入用 Fields CreateChumonInstance コンストラクタ 注文オブジェクト用記述 private Func<ConvenienceContext, IChumon> CreateChumonInstance Field Value Func<ConvenienceContext, IChumon> _context DBコンテクスト private readonly ConvenienceContext _context Field Value ConvenienceContext Properties ChumonKeysViewModel 注文キービューモデル（１枚目の画面用） public ChumonKeysViewModel ChumonKeysViewModel { get; set; } Property Value ChumonKeysViewModel ChumonViewModel 注文明細ビューモデル（２枚目の画面用） public ChumonViewModel ChumonViewModel { get; set; } Property Value ChumonViewModel chumon 注文オブジェクト用 public IChumon chumon { get; set; } Property Value IChumon Methods ChumonCommit(ChumonViewModel) 注文データをDBに書き込む public Task<ChumonViewModel> ChumonCommit(ChumonViewModel inChumonViewModel) Parameters inChumonViewModel ChumonViewModel Returns Task<ChumonViewModel> ChumonViewModel 注文明細ビューモデル Exceptions Exception 排他制御の例外が起きたらスローする ChumonJissekiIsValid(ChumonJisseki) Postされた注文実績のデータチェック private (bool, Message.ErrDef) ChumonJissekiIsValid(ChumonJisseki inChumonJisseki) Parameters inChumonJisseki ChumonJisseki postされた注文実績 Returns (bool, Message.ErrDef) 正常=true、異常=false、エラーコード ChumonSetting(ChumonKeysViewModel) 注文セッティング public Task<ChumonViewModel> ChumonSetting(ChumonKeysViewModel inChumonKeysViewModel) Parameters inChumonKeysViewModel ChumonKeysViewModel 注文キー入力画面仕入先コード（画面より） Returns Task<ChumonViewModel> 注文明細ビューモデル SetChumonKeysViewModel() 注文キービューモデル初期設定 public Task<ChumonKeysViewModel> SetChumonKeysViewModel() Returns Task<ChumonKeysViewModel> ChumonKeysViewModel 注文キービューモデル"
  },
  "api/Convenience.Models.Services.KaikeiService.html": {
    "href": "api/Convenience.Models.Services.KaikeiService.html",
    "title": "Class KaikeiService | Convenience",
    "keywords": "Class KaikeiService Namespace Convenience.Models.Services Assembly Convenience.dll 会計サービスクラス public class KaikeiService : IKaikeiService Inheritance object KaikeiService Implements IKaikeiService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KaikeiService(ConvenienceContext, IKaikei, ITempDataDictionaryFactory, IActionContextAccessor) コンストラクタ public KaikeiService(ConvenienceContext context, IKaikei kaikei, ITempDataDictionaryFactory tempDataFactory, IActionContextAccessor actionContextAccessor) Parameters context ConvenienceContext kaikei IKaikei tempDataFactory ITempDataDictionaryFactory actionContextAccessor IActionContextAccessor Remarks DBコンテキスト 会計クラスのＤＩ コントローラ以外でtempdata扱いが出来ようにするＤＩ（２つ） Fields _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext _tempData TempData用 private readonly ITempDataDictionary _tempData Field Value ITempDataDictionary Properties KaikeiViewModel 会計ビュー・モデル（プロパティ） public KaikeiViewModel KaikeiViewModel { get; set; } Property Value KaikeiViewModel _kaikei 会計クラス用 private IKaikei _kaikei { get; set; } Property Value IKaikei Methods GetShohinName(string) 商品名称を返す public Task<string> GetShohinName(string argShohinId) Parameters argShohinId string 商品コード Returns Task<string> string 商品名称 Remarks 画面からajaxで、商品コードを投げてくるから、商品名称を返す GetViewModelToTempData() tempデータからビューモデルへ復帰 private KaikeiViewModel GetViewModelToTempData() Returns KaikeiViewModel KaikeiAdd(KaikeiViewModel) 会計Add public Task<KaikeiViewModel> KaikeiAdd(KaikeiViewModel argKaikeiViewModel) Parameters argKaikeiViewModel KaikeiViewModel 会計ビューモデル Returns Task<KaikeiViewModel> KaikeiViewModel 会計ビューモデル KaikeiCommit(KaikeiViewModel) 会計Commit public Task<KaikeiViewModel> KaikeiCommit(KaikeiViewModel argKaikeiViewModel) Parameters argKaikeiViewModel KaikeiViewModel 会計ビューモデル Returns Task<KaikeiViewModel> KaikeiViewModel 会計ビューモデル KaikeiSetting(KaikeiViewModel) 会計セッティング public Task<KaikeiViewModel> KaikeiSetting(KaikeiViewModel argKaikeiViewModel) Parameters argKaikeiViewModel KaikeiViewModel 会計ビューモデル Returns Task<KaikeiViewModel> KaikeiViewModel 会計ビューモデル SetKaikeiViewModel() 会計ビューモデル設定（初期画面用） public Task<KaikeiViewModel> SetKaikeiViewModel() Returns Task<KaikeiViewModel> KaikeiViewModel 会計ビューモデル SetKeyInputList(UriageDateTimeAndIdMatching) private IList<SelectListItem> SetKeyInputList(UriageDateTimeAndIdMatching argUriageDateTimeAndIdMatching) Parameters argUriageDateTimeAndIdMatching UriageDateTimeAndIdMatching Returns IList<SelectListItem> SetKeyInputList(int, DateTime) private IList<SelectListItem> SetKeyInputList(int argDaysAgo, DateTime argCurrentDateTime) Parameters argDaysAgo int argCurrentDateTime DateTime Returns IList<SelectListItem> SetSelectListItem(IList<UriageDateTimeAndIdMatching>) private IList<SelectListItem> SetSelectListItem(IList<UriageDateTimeAndIdMatching> argUriageDateTimeAndIdMatchings) Parameters argUriageDateTimeAndIdMatchings IList<UriageDateTimeAndIdMatching> Returns IList<SelectListItem> SetViewModelToTempData(KaikeiViewModel) ビューモデルをtempデータに退避 private void SetViewModelToTempData(KaikeiViewModel argKaikeiViewModel) Parameters argKaikeiViewModel KaikeiViewModel ビューモデル"
  },
  "api/Convenience.Models.Services.ShiireService.html": {
    "href": "api/Convenience.Models.Services.ShiireService.html",
    "title": "Class ShiireService | Convenience",
    "keywords": "Class ShiireService Namespace Convenience.Models.Services Assembly Convenience.dll 仕入サービスクラス public class ShiireService : IShiireService, IDbContext Inheritance object ShiireService Implements IShiireService IDbContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShiireService() C#コンソールデバッグ用 public ShiireService() ShiireService(ConvenienceContext, IShiire) コンストラクター 通常用 public ShiireService(ConvenienceContext context, IShiire shiire) Parameters context ConvenienceContext DBコンテキスト shiire IShiire 仕入クラスＤＩ注入用 Fields _context private readonly ConvenienceContext _context Field Value ConvenienceContext Properties ShiireKeysViewModel 仕入キービューモデル（１枚目の画面用） public ShiireKeysViewModel ShiireKeysViewModel { get; set; } Property Value ShiireKeysViewModel ShiireViewModel 仕入ビューモデル（２枚目の画面用） public ShiireViewModel ShiireViewModel { get; set; } Property Value ShiireViewModel shiire 仕入クラス用オブジェクト変数 public IShiire shiire { get; set; } Property Value IShiire Methods SetShiireKeysModel() 仕入キーモデル設定（仕入画面１枚目用） public Task<ShiireKeysViewModel> SetShiireKeysModel() Returns Task<ShiireKeysViewModel> ShiireKeysViewModel 仕入キービューモデル SetShiireModel(int, IList<ShiireJisseki>) 仕入ビューモデル設定 private ShiireViewModel SetShiireModel(int entities, IList<ShiireJisseki> inshiireJissekis) Parameters entities int inshiireJissekis IList<ShiireJisseki> Returns ShiireViewModel ShiireCommit(ShiireViewModel) 仕入データをDBに書き込む・注文残の調整・倉庫在庫への反映（Post後処理・再表示用） 仕入実績データPost後の後の再表示用 public Task<ShiireViewModel> ShiireCommit(ShiireViewModel inShiireViewModel) Parameters inShiireViewModel ShiireViewModel 仕入ビューモデル（注文コード・仕入日・仕入SEQ、Postされた仕入実績データ） Returns Task<ShiireViewModel> 仕入ビューモデル（更新エンティティ数・DB更新された仕入実績） Remarks ①仕入実績がある場合は、仕入実績取り込み、ない場合は注文実績から作成 ② ①の内容に対し、ポストデータを反映 ③注文実績の注文残と倉庫在庫の在庫数を仕入数にあわせ過不足する ④仕入実績DB更新 ⑤仕入実績に倉庫在庫を接続しインクルードできるようにする（表示用） ShiireSetting(ShiireKeysViewModel) 仕入セッティング 仕入実績データの画面初期表示用（DB更新後の再表示も含む） public Task<ShiireViewModel> ShiireSetting(ShiireKeysViewModel inShiireKeysViewModel) Parameters inShiireKeysViewModel ShiireKeysViewModel 注文キービューモデル Returns Task<ShiireViewModel> ShiireViewModel 仕入ビューモデル（仕入実績・インクルードされた注文実績・インクルードされた倉庫在庫） Remarks ①現在時間により仕入日セット ②仕入は毎回新規なので、仕入SEQを発番・注文実績から仕入実績を作る ③関係する倉庫在庫を接続（表示用）"
  },
  "api/Convenience.Models.Services.TentoHaraidashiService.html": {
    "href": "api/Convenience.Models.Services.TentoHaraidashiService.html",
    "title": "Class TentoHaraidashiService | Convenience",
    "keywords": "Class TentoHaraidashiService Namespace Convenience.Models.Services Assembly Convenience.dll 店頭払出サービスクラス public class TentoHaraidashiService : ITentoHaraidashiService Inheritance object TentoHaraidashiService Implements ITentoHaraidashiService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TentoHaraidashiService(ConvenienceContext, ITentoHaraidashi) 店頭払出ビューモデル設定 public TentoHaraidashiService(ConvenienceContext context, ITentoHaraidashi tentoHaraidashi) Parameters context ConvenienceContext tentoHaraidashi ITentoHaraidashi Fields _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext Properties TentoHaraidashiViewModel 店頭払出ビュー・モデル（プロパティ） public TentoHaraidashiViewModel TentoHaraidashiViewModel { get; set; } Property Value TentoHaraidashiViewModel _tentoHaraidashi private ITentoHaraidashi _tentoHaraidashi { get; set; } Property Value ITentoHaraidashi Methods CreateListWithTentoHaraidashiId(int) 引数（マイナス値）を使用して、その引数分の日数をさかのぼり、店頭払出日付と店頭払出コード一覧を作る private Task<IList<HaraidashiDateTimeAndIdMatching>> CreateListWithTentoHaraidashiId(int argReverseDaysWithMinus) Parameters argReverseDaysWithMinus int さかのぼる日数（マイナスでいれる） Returns Task<IList<HaraidashiDateTimeAndIdMatching>> 店頭払出日時・店頭払出コード MakeListWithTentoHaraidashiIdToSelectListItem(IEnumerable<HaraidashiDateTimeAndIdMatching>) Ｖｉｅｗのselect項目のために店頭払出日付＋コードのリストを作成する private IList<SelectListItem> MakeListWithTentoHaraidashiIdToSelectListItem(IEnumerable<HaraidashiDateTimeAndIdMatching> argHaraidashiDateTimeAndIdMatching) Parameters argHaraidashiDateTimeAndIdMatching IEnumerable<HaraidashiDateTimeAndIdMatching> Returns IList<SelectListItem> SetTentoHaraidashiViewModel() 初期表示用 public Task<TentoHaraidashiViewModel> SetTentoHaraidashiViewModel() Returns Task<TentoHaraidashiViewModel> TentoHaraidashiCommit(TentoHaraidashiViewModel) 店頭払出Commit public Task<TentoHaraidashiViewModel> TentoHaraidashiCommit(TentoHaraidashiViewModel argTentoHaraidashiViewModel) Parameters argTentoHaraidashiViewModel TentoHaraidashiViewModel 店頭払出ビューモデル Returns Task<TentoHaraidashiViewModel> TentoHaraidashiViewModel 店頭払出ビューモデル TentoHaraidashiSetting(TentoHaraidashiViewModel) 店頭払出セッティング public Task<TentoHaraidashiViewModel> TentoHaraidashiSetting(TentoHaraidashiViewModel argTentoHaraidashiViewModel) Parameters argTentoHaraidashiViewModel TentoHaraidashiViewModel 店頭払出ビューモデル Returns Task<TentoHaraidashiViewModel> TentoHaraidashiViewModel 店頭払出ビューモデル TransferToDisplayModel(TentoHaraidashiHeader) 商品マスタを軸に一覧構造をコンバート private IEnumerable<ShohinMaster> TransferToDisplayModel(TentoHaraidashiHeader argTentoHaraidashiHeader) Parameters argTentoHaraidashiHeader TentoHaraidashiHeader Returns IEnumerable<ShohinMaster>"
  },
  "api/Convenience.Models.Services.ZaikoService.html": {
    "href": "api/Convenience.Models.Services.ZaikoService.html",
    "title": "Class ZaikoService | Convenience",
    "keywords": "Class ZaikoService Namespace Convenience.Models.Services Assembly Convenience.dll 倉庫在庫検索（サービス） public class ZaikoService : IZaikoService Inheritance object ZaikoService Implements IZaikoService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ZaikoService() public ZaikoService() ZaikoService(ConvenienceContext, IZaiko) コンストラクター（ＡＳＰ用） public ZaikoService(ConvenienceContext context, IZaiko zaiko) Parameters context ConvenienceContext DBコンテキスト zaiko IZaiko 在庫クラスＤＩ注入用 Fields Zaiko private readonly IZaiko Zaiko Field Value IZaiko _context private readonly ConvenienceContext _context Field Value ConvenienceContext Methods KeyInput(KeyEventRec[], SelecteWhereItem[]) 検索キー画面の情報取得 public Task<IList<ZaikoViewModel.ZaikoListLine>> KeyInput(ZaikoViewModel.KeyEventRec[] inKeySetOrderArray, ZaikoViewModel.SelecteWhereItem[] inSelectWhereItemArray) Parameters inKeySetOrderArray KeyEventRec[] inSelectWhereItemArray SelecteWhereItem[] Returns Task<IList<ZaikoViewModel.ZaikoListLine>>"
  },
  "api/Convenience.Models.Services.html": {
    "href": "api/Convenience.Models.Services.html",
    "title": "Namespace Convenience.Models.Services | Convenience",
    "keywords": "Namespace Convenience.Models.Services Classes ChumonService 注文サービスクラス KaikeiService 会計サービスクラス ShiireService 仕入サービスクラス TentoHaraidashiService 店頭払出サービスクラス ZaikoService 倉庫在庫検索（サービス）"
  },
  "api/Convenience.Models.ViewModels.Chumon.ChumonKeysViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.Chumon.ChumonKeysViewModel.html",
    "title": "Class ChumonKeysViewModel | Convenience",
    "keywords": "Class ChumonKeysViewModel Namespace Convenience.Models.ViewModels.Chumon Assembly Convenience.dll 注文キービューモデル public class ChumonKeysViewModel Inheritance object ChumonKeysViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonDate [Column(\"chumon_date\")] public DateOnly ChumonDate { get; set; } Property Value DateOnly ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] public string ShiireSakiId { get; set; } Property Value string ShiireSakiList 仕入先一覧 public List<SelectListItem>? ShiireSakiList { get; set; } Property Value List<SelectListItem>"
  },
  "api/Convenience.Models.ViewModels.Chumon.ChumonViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.Chumon.ChumonViewModel.html",
    "title": "Class ChumonViewModel | Convenience",
    "keywords": "Class ChumonViewModel Namespace Convenience.Models.ViewModels.Chumon Assembly Convenience.dll 注文明細ビューモデル public class ChumonViewModel Inheritance object ChumonViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonJisseki 注文実績 public ChumonJisseki ChumonJisseki { get; set; } Property Value ChumonJisseki IsNormal 処理が正常がどうか（正常=true) public bool? IsNormal { get; set; } Property Value bool? Remark 処理結果（ＤＢ反映結果）表示内容 public string? Remark { get; set; } Property Value string"
  },
  "api/Convenience.Models.ViewModels.Chumon.html": {
    "href": "api/Convenience.Models.ViewModels.Chumon.html",
    "title": "Namespace Convenience.Models.ViewModels.Chumon | Convenience",
    "keywords": "Namespace Convenience.Models.ViewModels.Chumon Classes ChumonKeysViewModel 注文キービューモデル ChumonViewModel 注文明細ビューモデル"
  },
  "api/Convenience.Models.ViewModels.Kaikei.KaikeiJissekiforAdd.html": {
    "href": "api/Convenience.Models.ViewModels.Kaikei.KaikeiJissekiforAdd.html",
    "title": "Class KaikeiJissekiforAdd | Convenience",
    "keywords": "Class KaikeiJissekiforAdd Namespace Convenience.Models.ViewModels.Kaikei Assembly Convenience.dll public class KaikeiJissekiforAdd : KaikeiJisseki Inheritance object KaikeiJisseki KaikeiJissekiforAdd Inherited Members KaikeiJisseki.UriageDatetimeId KaikeiJisseki.ShohinId KaikeiJisseki.UriageDatetime KaikeiJisseki.UriageSu KaikeiJisseki.UriageKingaku KaikeiJisseki.ZeikomiKingaku KaikeiJisseki.ShohinTanka KaikeiJisseki.ShohiZeiritsu KaikeiJisseki.KaikeiHeader KaikeiJisseki.ShohinMaster KaikeiJisseki.TentoZaiko object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ShohinName public string ShohinName { get; set; } Property Value string"
  },
  "api/Convenience.Models.ViewModels.Kaikei.KaikeiViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.Kaikei.KaikeiViewModel.html",
    "title": "Class KaikeiViewModel | Convenience",
    "keywords": "Class KaikeiViewModel Namespace Convenience.Models.ViewModels.Kaikei Assembly Convenience.dll 注文明細ビューモデル public class KaikeiViewModel Inheritance object KaikeiViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KaikeiViewModel() public KaikeiViewModel() Properties IsNormal public bool? IsNormal { get; set; } Property Value bool? KaikeiDateAndId 店頭払出実績 public string KaikeiDateAndId { get; set; } Property Value string KaikeiHeader public KaikeiHeader KaikeiHeader { get; set; } Property Value KaikeiHeader KaikeiHeaderList public IList<SelectListItem> KaikeiHeaderList { get; set; } Property Value IList<SelectListItem> KaikeiJissekiforAdd public KaikeiJissekiforAdd KaikeiJissekiforAdd { get; set; } Property Value KaikeiJissekiforAdd Remark public string? Remark { get; set; } Property Value string ShohinList public IList<SelectListItem> ShohinList { get; set; } Property Value IList<SelectListItem>"
  },
  "api/Convenience.Models.ViewModels.Kaikei.UriageDateTimeAndIdMatching.html": {
    "href": "api/Convenience.Models.ViewModels.Kaikei.UriageDateTimeAndIdMatching.html",
    "title": "Class UriageDateTimeAndIdMatching | Convenience",
    "keywords": "Class UriageDateTimeAndIdMatching Namespace Convenience.Models.ViewModels.Kaikei Assembly Convenience.dll 店頭払出キー入力に使うリストの内容 public class UriageDateTimeAndIdMatching Inheritance object UriageDateTimeAndIdMatching Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UriageDateTimeAndIdMatching() public UriageDateTimeAndIdMatching() UriageDateTimeAndIdMatching(DateTime, string) public UriageDateTimeAndIdMatching(DateTime UriageDatetime, string UriageDatetimeId) Parameters UriageDatetime DateTime UriageDatetimeId string Properties UriageDatetime public DateTime UriageDatetime { get; set; } Property Value DateTime UriageDatetimeId public string UriageDatetimeId { get; set; } Property Value string"
  },
  "api/Convenience.Models.ViewModels.Kaikei.html": {
    "href": "api/Convenience.Models.ViewModels.Kaikei.html",
    "title": "Namespace Convenience.Models.ViewModels.Kaikei | Convenience",
    "keywords": "Namespace Convenience.Models.ViewModels.Kaikei Classes KaikeiJissekiforAdd KaikeiViewModel 注文明細ビューモデル UriageDateTimeAndIdMatching 店頭払出キー入力に使うリストの内容"
  },
  "api/Convenience.Models.ViewModels.Shiire.ShiireKeysViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.Shiire.ShiireKeysViewModel.html",
    "title": "Class ShiireKeysViewModel | Convenience",
    "keywords": "Class ShiireKeysViewModel Namespace Convenience.Models.ViewModels.Shiire Assembly Convenience.dll 仕入キービューモデル public class ShiireKeysViewModel Inheritance object ShiireKeysViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonId [MaxLength(20)] [Required] public string ChumonId { get; set; } Property Value string ChumonIdList 注文コードリスト（注文残が残っているリスト格納用） public IList<SelectListItem> ChumonIdList { get; set; } Property Value IList<SelectListItem>"
  },
  "api/Convenience.Models.ViewModels.Shiire.ShiireViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.Shiire.ShiireViewModel.html",
    "title": "Class ShiireViewModel | Convenience",
    "keywords": "Class ShiireViewModel Namespace Convenience.Models.ViewModels.Shiire Assembly Convenience.dll 仕入ビューモデル public class ShiireViewModel Inheritance object ShiireViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonDate public DateOnly ChumonDate { get; set; } Property Value DateOnly ChumonId [MaxLength(20)] public string ChumonId { get; set; } Property Value string IsNormal 処理が正常がどうか（正常=true) public bool? IsNormal { get; set; } Property Value bool? Remark 処理結果（ＤＢ反映結果）表示内容 public string Remark { get; set; } Property Value string SeqByShiireDate public uint SeqByShiireDate { get; set; } Property Value uint ShiireDate public DateOnly ShiireDate { get; set; } Property Value DateOnly ShiireJissekis 仕入実績 public IList<ShiireJisseki> ShiireJissekis { get; set; } Property Value IList<ShiireJisseki> ShiireSakiId [MaxLength(10)] public string ShiireSakiId { get; set; } Property Value string ShiireSakiKaisya [MaxLength(30)] public string ShiireSakiKaisya { get; set; } Property Value string"
  },
  "api/Convenience.Models.ViewModels.Shiire.html": {
    "href": "api/Convenience.Models.ViewModels.Shiire.html",
    "title": "Namespace Convenience.Models.ViewModels.Shiire | Convenience",
    "keywords": "Namespace Convenience.Models.ViewModels.Shiire Classes ShiireKeysViewModel 仕入キービューモデル ShiireViewModel 仕入ビューモデル"
  },
  "api/Convenience.Models.ViewModels.TentoHaraidashi.HaraidashiDateTimeAndIdMatching.html": {
    "href": "api/Convenience.Models.ViewModels.TentoHaraidashi.HaraidashiDateTimeAndIdMatching.html",
    "title": "Class HaraidashiDateTimeAndIdMatching | Convenience",
    "keywords": "Class HaraidashiDateTimeAndIdMatching Namespace Convenience.Models.ViewModels.TentoHaraidashi Assembly Convenience.dll 店頭払出キー入力に使うリストの内容 public class HaraidashiDateTimeAndIdMatching Inheritance object HaraidashiDateTimeAndIdMatching Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HaraidashiDateTimeAndIdMatching() public HaraidashiDateTimeAndIdMatching() HaraidashiDateTimeAndIdMatching(DateTime, string) public HaraidashiDateTimeAndIdMatching(DateTime HaraidashiDateTime, string TentoHaraidashiId) Parameters HaraidashiDateTime DateTime TentoHaraidashiId string Properties HaraidashiDateTime public DateTime HaraidashiDateTime { get; set; } Property Value DateTime TentoHaraidashiId public string TentoHaraidashiId { get; set; } Property Value string"
  },
  "api/Convenience.Models.ViewModels.TentoHaraidashi.TentoHaraidashiViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.TentoHaraidashi.TentoHaraidashiViewModel.html",
    "title": "Class TentoHaraidashiViewModel | Convenience",
    "keywords": "Class TentoHaraidashiViewModel Namespace Convenience.Models.ViewModels.TentoHaraidashi Assembly Convenience.dll 注文明細ビューモデル public class TentoHaraidashiViewModel Inheritance object TentoHaraidashiViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HaraidashiDateAndId 店頭払出実績 public string HaraidashiDateAndId { get; set; } Property Value string IsNormal public bool? IsNormal { get; set; } Property Value bool? Remark public string? Remark { get; set; } Property Value string ShohinMasters public IList<ShohinMaster>? ShohinMasters { get; set; } Property Value IList<ShohinMaster> TentoHaraidashiIdList public IList<SelectListItem> TentoHaraidashiIdList { get; set; } Property Value IList<SelectListItem>"
  },
  "api/Convenience.Models.ViewModels.TentoHaraidashi.html": {
    "href": "api/Convenience.Models.ViewModels.TentoHaraidashi.html",
    "title": "Namespace Convenience.Models.ViewModels.TentoHaraidashi | Convenience",
    "keywords": "Namespace Convenience.Models.ViewModels.TentoHaraidashi Classes HaraidashiDateTimeAndIdMatching 店頭払出キー入力に使うリストの内容 TentoHaraidashiViewModel 注文明細ビューモデル"
  },
  "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.KeyEventRec.html": {
    "href": "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.KeyEventRec.html",
    "title": "Class ZaikoViewModel.KeyEventRec | Convenience",
    "keywords": "Class ZaikoViewModel.KeyEventRec Namespace Convenience.Models.ViewModels.Zaiko Assembly Convenience.dll ソートキー選択結果セット用 public class ZaikoViewModel.KeyEventRec Inheritance object ZaikoViewModel.KeyEventRec Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Descending public bool Descending { get; set; } Property Value bool KeyEventData public string? KeyEventData { get; set; } Property Value string"
  },
  "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.SelecteWhereItem.html": {
    "href": "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.SelecteWhereItem.html",
    "title": "Class ZaikoViewModel.SelecteWhereItem | Convenience",
    "keywords": "Class ZaikoViewModel.SelecteWhereItem Namespace Convenience.Models.ViewModels.Zaiko Assembly Convenience.dll Where指示選択結果セット用 public class ZaikoViewModel.SelecteWhereItem Inheritance object ZaikoViewModel.SelecteWhereItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ComparisonOperator [MaxLength(2)] public string? ComparisonOperator { get; set; } Property Value string LeftSide public string? LeftSide { get; set; } Property Value string RightSide public string? RightSide { get; set; } Property Value string"
  },
  "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.ZaikoListLine.html": {
    "href": "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.ZaikoListLine.html",
    "title": "Class ZaikoViewModel.ZaikoListLine | Convenience",
    "keywords": "Class ZaikoViewModel.ZaikoListLine Namespace Convenience.Models.ViewModels.Zaiko Assembly Convenience.dll 倉庫在庫・注文実績明細変策用レコード public class ZaikoViewModel.ZaikoListLine Inheritance object ZaikoViewModel.ZaikoListLine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonZan public decimal ChumonZan { get; set; } Property Value decimal LastDeliveryDate public DateOnly? LastDeliveryDate { get; set; } Property Value DateOnly? LastShiireDate public DateOnly LastShiireDate { get; set; } Property Value DateOnly ShiirePrdId public string ShiirePrdId { get; set; } Property Value string ShiireSakiId public string ShiireSakiId { get; set; } Property Value string ShohinId public string ShohinId { get; set; } Property Value string ShohinName public string ShohinName { get; set; } Property Value string SokoZaikoCaseSu public decimal SokoZaikoCaseSu { get; set; } Property Value decimal SokoZaikoSu public decimal SokoZaikoSu { get; set; } Property Value decimal"
  },
  "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.html",
    "title": "Class ZaikoViewModel | Convenience",
    "keywords": "Class ZaikoViewModel Namespace Convenience.Models.ViewModels.Zaiko Assembly Convenience.dll 在庫検索用ビューモデル public class ZaikoViewModel Inheritance object ZaikoViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ZaikoViewModel() コンストラクタ（なし） public ZaikoViewModel() Fields ComparisonOperatorList 比較演算子選択用 public SelectList ComparisonOperatorList Field Value SelectList KeyList ソート指示選択用一覧（画面表示と選択用） public SelectList KeyList Field Value SelectList LineCountForSelectorOfOderBy ソート指示項目の最大値 private const int LineCountForSelectorOfOderBy = 3 Field Value int LineCountForSelectorOfWhere Where入力行数 private const int LineCountForSelectorOfWhere = 6 Field Value int SelectWhereLeftSideList Where左辺用カラムセット用 public SelectList SelectWhereLeftSideList Field Value SelectList Properties KeyEventList ソートキー選択結果セット用を使ってリストを初期化 public ZaikoViewModel.KeyEventRec[] KeyEventList { get; set; } Property Value KeyEventRec[] SelecteWhereItemArray Where入力リスト初期化 public ZaikoViewModel.SelecteWhereItem[] SelecteWhereItemArray { get; set; } Property Value SelecteWhereItem[] zaikoListLine 倉庫在庫・注文実績明細変策用レコードのリスト（検索結果がここに入る） public IList<ZaikoViewModel.ZaikoListLine> zaikoListLine { get; set; } Property Value IList<ZaikoViewModel.ZaikoListLine>"
  },
  "api/Convenience.Models.ViewModels.Zaiko.html": {
    "href": "api/Convenience.Models.ViewModels.Zaiko.html",
    "title": "Namespace Convenience.Models.ViewModels.Zaiko | Convenience",
    "keywords": "Namespace Convenience.Models.ViewModels.Zaiko Classes ZaikoViewModel 在庫検索用ビューモデル ZaikoViewModel.KeyEventRec ソートキー選択結果セット用 ZaikoViewModel.SelecteWhereItem Where指示選択結果セット用 ZaikoViewModel.ZaikoListLine 倉庫在庫・注文実績明細変策用レコード"
  },
  "api/Convenience.Models.html": {
    "href": "api/Convenience.Models.html",
    "title": "Namespace Convenience.Models | Convenience",
    "keywords": "Namespace Convenience.Models Classes ErrorViewModel ƒGƒ‰[ƒy[ƒW—pƒrƒ…[ƒ‚ƒfƒ‹ Menu メニュークラス MenuItem メニューアイテムクラス"
  },
  "api/Convenience.Properties.Resources.html": {
    "href": "api/Convenience.Properties.Resources.html",
    "title": "Class Resources | Convenience",
    "keywords": "Class Resources Namespace Convenience.Properties Assembly Convenience.dll ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。 internal class Resources Inheritance object Resources Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Resources() internal Resources() Fields resourceCulture private static CultureInfo resourceCulture Field Value CultureInfo resourceMan private static ResourceManager resourceMan Field Value ResourceManager Properties Culture すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします 現在のスレッドの CurrentUICulture プロパティをオーバーライドします。 internal static CultureInfo Culture { get; set; } Property Value CultureInfo ResourceManager このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。 internal static ResourceManager ResourceManager { get; } Property Value ResourceManager"
  },
  "api/Convenience.Properties.html": {
    "href": "api/Convenience.Properties.html",
    "title": "Namespace Convenience.Properties | Convenience",
    "keywords": "Namespace Convenience.Properties Classes Resources ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。"
  },
  "api/Convenience.Views.Shiire.ShiireKeyInputModel.html": {
    "href": "api/Convenience.Views.Shiire.ShiireKeyInputModel.html",
    "title": "Class ShiireKeyInputModel | Convenience",
    "keywords": "Class ShiireKeyInputModel Namespace Convenience.Views.Shiire Assembly Convenience.dll public class ShiireKeyInputModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Inheritance object PageModel ShiireKeyInputModel Implements IAsyncPageFilter IPageFilter IFilterMetadata Inherited Members PageModel.TryUpdateModelAsync<TModel>(TModel) PageModel.TryUpdateModelAsync<TModel>(TModel, string) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) PageModel.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) PageModel.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) PageModel.TryUpdateModelAsync(object, Type, string) PageModel.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) PageModel.BadRequest() PageModel.BadRequest(object) PageModel.BadRequest(ModelStateDictionary) PageModel.Challenge() PageModel.Challenge(params string[]) PageModel.Challenge(AuthenticationProperties) PageModel.Challenge(AuthenticationProperties, params string[]) PageModel.Content(string) PageModel.Content(string, string) PageModel.Content(string, string, Encoding) PageModel.Content(string, MediaTypeHeaderValue) PageModel.Forbid() PageModel.Forbid(params string[]) PageModel.Forbid(AuthenticationProperties) PageModel.Forbid(AuthenticationProperties, params string[]) PageModel.File(byte[], string) PageModel.File(byte[], string, string) PageModel.File(Stream, string) PageModel.File(Stream, string, string) PageModel.File(string, string) PageModel.File(string, string, string) PageModel.LocalRedirect(string) PageModel.LocalRedirectPermanent(string) PageModel.LocalRedirectPreserveMethod(string) PageModel.LocalRedirectPermanentPreserveMethod(string) PageModel.NotFound() PageModel.NotFound(object) PageModel.Page() PageModel.PhysicalFile(string, string) PageModel.PhysicalFile(string, string, string) PageModel.Redirect(string) PageModel.RedirectPermanent(string) PageModel.RedirectPreserveMethod(string) PageModel.RedirectPermanentPreserveMethod(string) PageModel.RedirectToAction(string) PageModel.RedirectToAction(string, object) PageModel.RedirectToAction(string, string) PageModel.RedirectToAction(string, string, object) PageModel.RedirectToAction(string, string, string) PageModel.RedirectToAction(string, string, object, string) PageModel.RedirectToActionPreserveMethod(string, string, object, string) PageModel.RedirectToActionPermanent(string) PageModel.RedirectToActionPermanent(string, object) PageModel.RedirectToActionPermanent(string, string) PageModel.RedirectToActionPermanent(string, string, string) PageModel.RedirectToActionPermanent(string, string, object) PageModel.RedirectToActionPermanent(string, string, object, string) PageModel.RedirectToActionPermanentPreserveMethod(string, string, object, string) PageModel.RedirectToRoute(string) PageModel.RedirectToRoute(object) PageModel.RedirectToRoute(string, object) PageModel.RedirectToRoute(string, string) PageModel.RedirectToRoute(string, object, string) PageModel.RedirectToRoutePreserveMethod(string, object, string) PageModel.RedirectToRoutePermanent(string) PageModel.RedirectToRoutePermanent(object) PageModel.RedirectToRoutePermanent(string, object) PageModel.RedirectToRoutePermanent(string, string) PageModel.RedirectToRoutePermanent(string, object, string) PageModel.RedirectToRoutePermanentPreserveMethod(string, object, string) PageModel.RedirectToPage() PageModel.RedirectToPage(object) PageModel.RedirectToPage(string) PageModel.RedirectToPage(string, string) PageModel.RedirectToPage(string, string, object) PageModel.RedirectToPage(string, object) PageModel.RedirectToPage(string, string, string) PageModel.RedirectToPage(string, string, object, string) PageModel.RedirectToPagePermanent(string) PageModel.RedirectToPagePermanent(string, object) PageModel.RedirectToPagePermanent(string, string) PageModel.RedirectToPagePermanent(string, string, object) PageModel.RedirectToPagePermanent(string, string, string) PageModel.RedirectToPagePermanent(string, object, string) PageModel.RedirectToPagePermanent(string, string, object, string) PageModel.RedirectToPagePreserveMethod(string, string, object, string) PageModel.RedirectToPagePermanentPreserveMethod(string, string, object, string) PageModel.SignIn(ClaimsPrincipal, string) PageModel.SignIn(ClaimsPrincipal, AuthenticationProperties, string) PageModel.SignOut(params string[]) PageModel.SignOut(AuthenticationProperties, params string[]) PageModel.StatusCode(int) PageModel.StatusCode(int, object) PageModel.Unauthorized() PageModel.Partial(string) PageModel.Partial(string, object) PageModel.ViewComponent(string) PageModel.ViewComponent(Type) PageModel.ViewComponent(string, object) PageModel.ViewComponent(Type, object) PageModel.TryValidateModel(object) PageModel.TryValidateModel(object, string) PageModel.OnPageHandlerSelected(PageHandlerSelectedContext) PageModel.OnPageHandlerExecuting(PageHandlerExecutingContext) PageModel.OnPageHandlerExecuted(PageHandlerExecutedContext) PageModel.OnPageHandlerSelectionAsync(PageHandlerSelectedContext) PageModel.OnPageHandlerExecutionAsync(PageHandlerExecutingContext, PageHandlerExecutionDelegate) PageModel.PageContext PageModel.HttpContext PageModel.Request PageModel.Response PageModel.RouteData PageModel.ModelState PageModel.User PageModel.TempData PageModel.Url PageModel.MetadataProvider PageModel.ViewData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnGet() public void OnGet()"
  },
  "api/Convenience.Views.Shiire.html": {
    "href": "api/Convenience.Views.Shiire.html",
    "title": "Namespace Convenience.Views.Shiire | Convenience",
    "keywords": "Namespace Convenience.Views.Shiire Classes ShiireKeyInputModel"
  }
}