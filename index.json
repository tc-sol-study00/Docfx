{
  "api/AspNetCoreGeneratedDocument.Views_Chumon_ChumonMeisai.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Chumon_ChumonMeisai.html",
    "title": "Class Views_Chumon_ChumonMeisai | Convenience",
    "keywords": "Class Views_Chumon_ChumonMeisai Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Chumon/ChumonMeisai.cshtml\")] internal sealed class Views_Chumon_ChumonMeisai : RazorPage<ChumonViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ChumonViewModel> Views_Chumon_ChumonMeisai Implements IRazorPage Inherited Members RazorPage<ChumonViewModel>.Model RazorPage<ChumonViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper private ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper Field Value ValidationMessageTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_10 private static readonly TagHelperAttribute __tagHelperAttribute_10 Field Value TagHelperAttribute __tagHelperAttribute_11 private static readonly TagHelperAttribute __tagHelperAttribute_11 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperAttribute_9 private static readonly TagHelperAttribute __tagHelperAttribute_9 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ChumonViewModel> Html { get; private set; } Property Value IHtmlHelper<ChumonViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Chumon_KeyInput.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Chumon_KeyInput.html",
    "title": "Class Views_Chumon_KeyInput | Convenience",
    "keywords": "Class Views_Chumon_KeyInput Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Chumon/KeyInput.cshtml\")] internal sealed class Views_Chumon_KeyInput : RazorPage<ChumonKeysViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ChumonKeysViewModel> Views_Chumon_KeyInput Implements IRazorPage Inherited Members RazorPage<ChumonKeysViewModel>.Model RazorPage<ChumonKeysViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper private OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper Field Value OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper private SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper Field Value SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper private ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper Field Value ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper private ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper Field Value ValidationSummaryTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ChumonKeysViewModel> Html { get; private set; } Property Value IHtmlHelper<ChumonKeysViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Home_Index.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Home_Index.html",
    "title": "Class Views_Home_Index | Convenience",
    "keywords": "Class Views_Home_Index Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Home/Index.cshtml\")] internal sealed class Views_Home_Index : RazorPage<Menu>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<Menu> Views_Home_Index Implements IRazorPage Inherited Members RazorPage<Menu>.Model RazorPage<Menu>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<Menu> Html { get; private set; } Property Value IHtmlHelper<Menu> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Home_Privacy.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Home_Privacy.html",
    "title": "Class Views_Home_Privacy | Convenience",
    "keywords": "Class Views_Home_Privacy Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Home/Privacy.cshtml\")] internal sealed class Views_Home_Privacy : RazorPage<dynamic>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<dynamic> Views_Home_Privacy Implements IRazorPage Inherited Members RazorPage<dynamic>.Model RazorPage<dynamic>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<dynamic> Html { get; private set; } Property Value IHtmlHelper<dynamic> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Shared_Error.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Shared_Error.html",
    "title": "Class Views_Shared_Error | Convenience",
    "keywords": "Class Views_Shared_Error Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Shared/Error.cshtml\")] internal sealed class Views_Shared_Error : RazorPage<ErrorViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ErrorViewModel> Views_Shared_Error Implements IRazorPage Inherited Members RazorPage<ErrorViewModel>.Model RazorPage<ErrorViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper private HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper Field Value HeadTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ErrorViewModel> Html { get; private set; } Property Value IHtmlHelper<ErrorViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Shared__Layout.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Shared__Layout.html",
    "title": "Class Views_Shared__Layout | Convenience",
    "keywords": "Class Views_Shared__Layout Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Shared/_Layout.cshtml\")] internal sealed class Views_Shared__Layout : RazorPage<dynamic>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<dynamic> Views_Shared__Layout Implements IRazorPage Inherited Members RazorPage<dynamic>.Model RazorPage<dynamic>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper private BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper Field Value BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper private HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper Field Value HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper private AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper Field Value AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper private LinkTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper Field Value LinkTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_10 private static readonly TagHelperAttribute __tagHelperAttribute_10 Field Value TagHelperAttribute __tagHelperAttribute_11 private static readonly TagHelperAttribute __tagHelperAttribute_11 Field Value TagHelperAttribute __tagHelperAttribute_12 private static readonly TagHelperAttribute __tagHelperAttribute_12 Field Value TagHelperAttribute __tagHelperAttribute_13 private static readonly TagHelperAttribute __tagHelperAttribute_13 Field Value TagHelperAttribute __tagHelperAttribute_14 private static readonly TagHelperAttribute __tagHelperAttribute_14 Field Value TagHelperAttribute __tagHelperAttribute_15 private static readonly TagHelperAttribute __tagHelperAttribute_15 Field Value TagHelperAttribute __tagHelperAttribute_16 private static readonly TagHelperAttribute __tagHelperAttribute_16 Field Value TagHelperAttribute __tagHelperAttribute_17 private static readonly TagHelperAttribute __tagHelperAttribute_17 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperAttribute_9 private static readonly TagHelperAttribute __tagHelperAttribute_9 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<dynamic> Html { get; private set; } Property Value IHtmlHelper<dynamic> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Shared__ValidationScriptsPartial.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Shared__ValidationScriptsPartial.html",
    "title": "Class Views_Shared__ValidationScriptsPartial | Convenience",
    "keywords": "Class Views_Shared__ValidationScriptsPartial Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Shared/_ValidationScriptsPartial.cshtml\")] internal sealed class Views_Shared__ValidationScriptsPartial : RazorPage<dynamic>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<dynamic> Views_Shared__ValidationScriptsPartial Implements IRazorPage Inherited Members RazorPage<dynamic>.Model RazorPage<dynamic>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<dynamic> Html { get; private set; } Property Value IHtmlHelper<dynamic> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Shiire_Shiire.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Shiire_Shiire.html",
    "title": "Class Views_Shiire_Shiire | Convenience",
    "keywords": "Class Views_Shiire_Shiire Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Shiire/Shiire.cshtml\")] internal sealed class Views_Shiire_Shiire : RazorPage<ShiireViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ShiireViewModel> Views_Shiire_Shiire Implements IRazorPage Inherited Members RazorPage<ShiireViewModel>.Model RazorPage<ShiireViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper private UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper Field Value UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper private ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper Field Value ValidationMessageTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperAttribute_9 private static readonly TagHelperAttribute __tagHelperAttribute_9 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ShiireViewModel> Html { get; private set; } Property Value IHtmlHelper<ShiireViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Shiire_ShiireKeyInput.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Shiire_ShiireKeyInput.html",
    "title": "Class Views_Shiire_ShiireKeyInput | Convenience",
    "keywords": "Class Views_Shiire_ShiireKeyInput Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Shiire/ShiireKeyInput.cshtml\")] internal sealed class Views_Shiire_ShiireKeyInput : RazorPage<ShiireKeysViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ShiireKeysViewModel> Views_Shiire_ShiireKeyInput Implements IRazorPage Inherited Members RazorPage<ShiireKeysViewModel>.Model RazorPage<ShiireKeysViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper private AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper Field Value AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper private OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper Field Value OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper private SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper Field Value SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper private ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper Field Value ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper private ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper Field Value ValidationSummaryTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ShiireKeysViewModel> Html { get; private set; } Property Value IHtmlHelper<ShiireKeysViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views_Zaiko_Index.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views_Zaiko_Index.html",
    "title": "Class Views_Zaiko_Index | Convenience",
    "keywords": "Class Views_Zaiko_Index Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/Zaiko/Index.cshtml\")] internal sealed class Views_Zaiko_Index : RazorPage<ZaikoViewModel>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<ZaikoViewModel> Views_Zaiko_Index Implements IRazorPage Inherited Members RazorPage<ZaikoViewModel>.Model RazorPage<ZaikoViewModel>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper private FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper Field Value FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper private InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper Field Value InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper private LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper Field Value LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper private OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper Field Value OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper private RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper Field Value RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper private SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper Field Value SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper private ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper Field Value ValidationSummaryTagHelper __backed__tagHelperScopeManager private TagHelperScopeManager __backed__tagHelperScopeManager Field Value TagHelperScopeManager __tagHelperAttribute_0 private static readonly TagHelperAttribute __tagHelperAttribute_0 Field Value TagHelperAttribute __tagHelperAttribute_1 private static readonly TagHelperAttribute __tagHelperAttribute_1 Field Value TagHelperAttribute __tagHelperAttribute_2 private static readonly TagHelperAttribute __tagHelperAttribute_2 Field Value TagHelperAttribute __tagHelperAttribute_3 private static readonly TagHelperAttribute __tagHelperAttribute_3 Field Value TagHelperAttribute __tagHelperAttribute_4 private static readonly TagHelperAttribute __tagHelperAttribute_4 Field Value TagHelperAttribute __tagHelperAttribute_5 private static readonly TagHelperAttribute __tagHelperAttribute_5 Field Value TagHelperAttribute __tagHelperAttribute_6 private static readonly TagHelperAttribute __tagHelperAttribute_6 Field Value TagHelperAttribute __tagHelperAttribute_7 private static readonly TagHelperAttribute __tagHelperAttribute_7 Field Value TagHelperAttribute __tagHelperAttribute_8 private static readonly TagHelperAttribute __tagHelperAttribute_8 Field Value TagHelperAttribute __tagHelperExecutionContext private TagHelperExecutionContext __tagHelperExecutionContext Field Value TagHelperExecutionContext __tagHelperRunner private TagHelperRunner __tagHelperRunner Field Value TagHelperRunner __tagHelperStringValueBuffer private string __tagHelperStringValueBuffer Field Value string Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<ZaikoViewModel> Html { get; private set; } Property Value IHtmlHelper<ZaikoViewModel> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper __tagHelperScopeManager private TagHelperScopeManager __tagHelperScopeManager { get; } Property Value TagHelperScopeManager Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views__ViewImports.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views__ViewImports.html",
    "title": "Class Views__ViewImports | Convenience",
    "keywords": "Class Views__ViewImports Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/_ViewImports.cshtml\")] internal sealed class Views__ViewImports : RazorPage<dynamic>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<dynamic> Views__ViewImports Implements IRazorPage Inherited Members RazorPage<dynamic>.Model RazorPage<dynamic>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<dynamic> Html { get; private set; } Property Value IHtmlHelper<dynamic> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.Views__ViewStart.html": {
    "href": "api/AspNetCoreGeneratedDocument.Views__ViewStart.html",
    "title": "Class Views__ViewStart | Convenience",
    "keywords": "Class Views__ViewStart Namespace AspNetCoreGeneratedDocument Assembly Convenience.dll [RazorCompiledItemMetadata(\"Identifier\", \"/Views/_ViewStart.cshtml\")] internal sealed class Views__ViewStart : RazorPage<dynamic>, IRazorPage Inheritance object RazorPageBase RazorPage RazorPage<dynamic> Views__ViewStart Implements IRazorPage Inherited Members RazorPage<dynamic>.Model RazorPage<dynamic>.ViewData RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties Component [RazorInject] public IViewComponentHelper Component { get; private set; } Property Value IViewComponentHelper Html [RazorInject] public IHtmlHelper<dynamic> Html { get; private set; } Property Value IHtmlHelper<dynamic> Json [RazorInject] public IJsonHelper Json { get; private set; } Property Value IJsonHelper ModelExpressionProvider [RazorInject] public IModelExpressionProvider ModelExpressionProvider { get; private set; } Property Value IModelExpressionProvider Url [RazorInject] public IUrlHelper Url { get; private set; } Property Value IUrlHelper Methods ExecuteAsync() Renders the page and writes the output to the Writer. public override Task ExecuteAsync() Returns Task A task representing the result of executing the page."
  },
  "api/AspNetCoreGeneratedDocument.html": {
    "href": "api/AspNetCoreGeneratedDocument.html",
    "title": "Namespace AspNetCoreGeneratedDocument | Convenience",
    "keywords": "Namespace AspNetCoreGeneratedDocument Classes Views_Chumon_ChumonMeisai Views_Chumon_KeyInput Views_Home_Index Views_Home_Privacy Views_Shared_Error Views_Shared__Layout Views_Shared__ValidationScriptsPartial Views_Shiire_Shiire Views_Shiire_ShiireKeyInput Views_Zaiko_Index Views__ViewImports Views__ViewStart"
  },
  "api/Convenience.Controllers.Chumon2Controller.html": {
    "href": "api/Convenience.Controllers.Chumon2Controller.html",
    "title": "Class Chumon2Controller | Convenience",
    "keywords": "Class Chumon2Controller Namespace Convenience.Controllers Assembly Convenience.dll サービスを使わない注文コントローラ（演習対象外） public class Chumon2Controller : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller Chumon2Controller Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Chumon2Controller(ConvenienceContext) public Chumon2Controller(ConvenienceContext context) Parameters context ConvenienceContext Fields _context private readonly ConvenienceContext _context Field Value ConvenienceContext chumon private IChumon chumon Field Value IChumon Methods ChumonMeisai(ChumonViewModel) public Task<IActionResult> ChumonMeisai(ChumonViewModel inChumonViewModel) Parameters inChumonViewModel ChumonViewModel Returns Task<IActionResult> ChumonMeisai(int, ChumonViewModel) [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> ChumonMeisai(int id, ChumonViewModel ChumonViewModel) Parameters id int ChumonViewModel ChumonViewModel Returns Task<IActionResult> KeyInput() public Task<IActionResult> KeyInput() Returns Task<IActionResult> KeyInput(ChumonKeysViewModel) [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> KeyInput(ChumonKeysViewModel inChumonKeysViewModel) Parameters inChumonKeysViewModel ChumonKeysViewModel Returns Task<IActionResult> SetChumonKeysViewModel() public Task<ChumonKeysViewModel> SetChumonKeysViewModel() Returns Task<ChumonKeysViewModel>"
  },
  "api/Convenience.Controllers.ChumonController.html": {
    "href": "api/Convenience.Controllers.ChumonController.html",
    "title": "Class ChumonController | Convenience",
    "keywords": "Class ChumonController Namespace Convenience.Controllers Assembly Convenience.dll 注文コントローラ public class ChumonController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable, ISharedTools Inheritance object ControllerBase Controller ChumonController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable ISharedTools Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChumonController(ConvenienceContext, IChumonService) コンストラクター public ChumonController(ConvenienceContext context, IChumonService chumonService) Parameters context ConvenienceContext DBコンテキスト chumonService IChumonService 注文サービスクラスＤＩ注入用 Fields IndexName private static readonly string IndexName Field Value string _context private readonly ConvenienceContext _context Field Value ConvenienceContext chumonService private readonly IChumonService chumonService Field Value IChumonService chumonViewModel private ChumonViewModel chumonViewModel Field Value ChumonViewModel Methods ChumonMeisai(ChumonViewModel) public Task<IActionResult> ChumonMeisai(ChumonViewModel inChumonViewModel) Parameters inChumonViewModel ChumonViewModel Returns Task<IActionResult> ChumonMeisai(int, ChumonViewModel) [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> ChumonMeisai(int id, ChumonViewModel ChumonViewModel) Parameters id int ChumonViewModel ChumonViewModel Returns Task<IActionResult> KeyInput() public Task<IActionResult> KeyInput() Returns Task<IActionResult> KeyInput(ChumonKeysViewModel) [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> KeyInput(ChumonKeysViewModel inChumonKeysViewModel) Parameters inChumonKeysViewModel ChumonKeysViewModel Returns Task<IActionResult> Result() [HttpGet] public Task<IActionResult> Result() Returns Task<IActionResult> SetChumonKeysViewModel() public ChumonKeysViewModel SetChumonKeysViewModel() Returns ChumonKeysViewModel"
  },
  "api/Convenience.Controllers.HomeController.html": {
    "href": "api/Convenience.Controllers.HomeController.html",
    "title": "Class HomeController | Convenience",
    "keywords": "Class HomeController Namespace Convenience.Controllers Assembly Convenience.dll Homeコントローラ（メニュー表示用） public class HomeController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller HomeController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HomeController(ILogger<HomeController>) public HomeController(ILogger<HomeController> logger) Parameters logger ILogger<HomeController> Fields _logger private readonly ILogger<HomeController> _logger Field Value ILogger<HomeController> Methods Error(int) [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)] [IgnoreAntiforgeryToken] public IActionResult Error(int id) Parameters id int Returns IActionResult Index() public IActionResult Index() Returns IActionResult Privacy() public IActionResult Privacy() Returns IActionResult"
  },
  "api/Convenience.Controllers.ShiireController.html": {
    "href": "api/Convenience.Controllers.ShiireController.html",
    "title": "Class ShiireController | Convenience",
    "keywords": "Class ShiireController Namespace Convenience.Controllers Assembly Convenience.dll 仕入サービスクラス public class ShiireController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable, ISharedTools Inheritance object ControllerBase Controller ShiireController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable ISharedTools Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShiireController(ConvenienceContext, IShiireService) コンストラクター public ShiireController(ConvenienceContext context, IShiireService shiireService) Parameters context ConvenienceContext DBコンテキスト shiireService IShiireService 仕入サービスクラスＤＩ注入用 Fields IndexName private static readonly string IndexName Field Value string _context private readonly ConvenienceContext _context Field Value ConvenienceContext shiireService private readonly IShiireService shiireService Field Value IShiireService shiireViewModel private ShiireViewModel shiireViewModel Field Value ShiireViewModel Methods Result() [HttpGet] public Task<IActionResult> Result() Returns Task<IActionResult> SetShiireModel(int, IList<ShiireJisseki>) public ShiireViewModel SetShiireModel(int entities, IList<ShiireJisseki> inshiireJissekis) Parameters entities int inshiireJissekis IList<ShiireJisseki> Returns ShiireViewModel Shiire(ShiireViewModel) [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> Shiire(ShiireViewModel inShiireViewModel) Parameters inShiireViewModel ShiireViewModel Returns Task<IActionResult> ShiireKeyInput() public Task<IActionResult> ShiireKeyInput() Returns Task<IActionResult> ShiireKeyInput(ShiireKeysViewModel) [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> ShiireKeyInput(ShiireKeysViewModel inKeysModel) Parameters inKeysModel ShiireKeysViewModel Returns Task<IActionResult>"
  },
  "api/Convenience.Controllers.ZaikoController.html": {
    "href": "api/Convenience.Controllers.ZaikoController.html",
    "title": "Class ZaikoController | Convenience",
    "keywords": "Class ZaikoController Namespace Convenience.Controllers Assembly Convenience.dll 倉庫在庫検索コントローラ public class ZaikoController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller ZaikoController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ZaikoController(ConvenienceContext, IZaikoService) コンストラクター public ZaikoController(ConvenienceContext context, IZaikoService zaikoService) Parameters context ConvenienceContext DBコンテキスト zaikoService IZaikoService 在庫サービスクラスＤＩ注入用 Fields _context private readonly ConvenienceContext _context Field Value ConvenienceContext zaikoService private readonly IZaikoService zaikoService Field Value IZaikoService Methods Index() public Task<IActionResult> Index() Returns Task<IActionResult> Index(ZaikoViewModel) [HttpPost] [ValidateAntiForgeryToken] public Task<IActionResult> Index(ZaikoViewModel inZaikoModel) Parameters inZaikoModel ZaikoViewModel Returns Task<IActionResult>"
  },
  "api/Convenience.Controllers.html": {
    "href": "api/Convenience.Controllers.html",
    "title": "Namespace Convenience.Controllers | Convenience",
    "keywords": "Namespace Convenience.Controllers Classes Chumon2Controller サービスを使わない注文コントローラ（演習対象外） ChumonController 注文コントローラ HomeController Homeコントローラ（メニュー表示用） ShiireController 仕入サービスクラス ZaikoController 倉庫在庫検索コントローラ"
  },
  "api/Convenience.Data.ConvenienceContext.html": {
    "href": "api/Convenience.Data.ConvenienceContext.html",
    "title": "Class ConvenienceContext | Convenience",
    "keywords": "Class ConvenienceContext Namespace Convenience.Data Assembly Convenience.dll DBコンテキスト public class ConvenienceContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext ConvenienceContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.IDbSetCache.GetOrAddSet(IDbSetSource, Type) DbContext.IDbSetCache.GetOrAddSet(IDbSetSource, string, Type) DbContext.IDbSetCache.GetSets() DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.IDbContextPoolable.ClearLease() DbContext.IDbContextPoolable.SetLease(DbContextLease) DbContext.IDbContextPoolable.SetLeaseAsync(DbContextLease, CancellationToken) DbContext.IDbContextPoolable.SnapshotConfiguration() DbContext.IResettableService.ResetState() DbContext.IResettableService.ResetStateAsync(CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.IDbContextDependencies.SetSource DbContext.IDbContextDependencies.EntityFinderFactory DbContext.IDbContextDependencies.QueryProvider DbContext.IDbContextDependencies.StateManager DbContext.IDbContextDependencies.ChangeDetector DbContext.IDbContextDependencies.EntityGraphAttacher DbContext.IDbContextDependencies.ExceptionDetector DbContext.IDbContextDependencies.UpdateLogger DbContext.IDbContextDependencies.InfrastructureLogger DbContext.IInfrastructure<IServiceProvider>.Instance DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConvenienceContext(DbContextOptions<ConvenienceContext>) コンストラクタ public ConvenienceContext(DbContextOptions<ConvenienceContext> options) Parameters options DbContextOptions<ConvenienceContext> Properties ChumonJisseki 注文実績 public DbSet<ChumonJisseki> ChumonJisseki { get; set; } Property Value DbSet<ChumonJisseki> ChumonJissekiMeisai 注文実績明細 public DbSet<ChumonJissekiMeisai> ChumonJissekiMeisai { get; set; } Property Value DbSet<ChumonJissekiMeisai> KaikeiJisseki public DbSet<KaikeiJisseki> KaikeiJisseki { get; set; } Property Value DbSet<KaikeiJisseki> ShiireJisseki 仕入実績 public DbSet<ShiireJisseki> ShiireJisseki { get; set; } Property Value DbSet<ShiireJisseki> ShiireSakiMaster public DbSet<ShiireSakiMaster> ShiireSakiMaster { get; set; } Property Value DbSet<ShiireSakiMaster> ShireMaster public DbSet<ShiireMaster> ShireMaster { get; set; } Property Value DbSet<ShiireMaster> ShohinMaster public DbSet<ShohinMaster> ShohinMaster { get; set; } Property Value DbSet<ShohinMaster> SokoZaiko public DbSet<SokoZaiko> SokoZaiko { get; set; } Property Value DbSet<SokoZaiko> TentoHaraidashiJisseki public DbSet<TentoHaraidashiJisseki> TentoHaraidashiJisseki { get; set; } Property Value DbSet<TentoHaraidashiJisseki> TentoZaiko public DbSet<TentoZaiko> TentoZaiko { get; set; } Property Value DbSet<TentoZaiko>"
  },
  "api/Convenience.Data.html": {
    "href": "api/Convenience.Data.html",
    "title": "Namespace Convenience.Data | Convenience",
    "keywords": "Namespace Convenience.Data Classes ConvenienceContext DBコンテキスト"
  },
  "api/Convenience.Migrations.ConvenienceContextModelSnapshot.html": {
    "href": "api/Convenience.Migrations.ConvenienceContextModelSnapshot.html",
    "title": "Class ConvenienceContextModelSnapshot | Convenience",
    "keywords": "Class ConvenienceContextModelSnapshot Namespace Convenience.Migrations Assembly Convenience.dll [DbContext(typeof(ConvenienceContext))] internal class ConvenienceContextModelSnapshot : ModelSnapshot Inheritance object ModelSnapshot ConvenienceContextModelSnapshot Inherited Members ModelSnapshot.Model object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildModel(ModelBuilder) Called lazily by Model to build the model snapshot the first time it is requested. protected override void BuildModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model."
  },
  "api/Convenience.Migrations.Init.html": {
    "href": "api/Convenience.Migrations.Init.html",
    "title": "Class Init | Convenience",
    "keywords": "Class Init Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20240527055358_Init\")] public class Init : Migration Inheritance object Migration Init Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Migrations.html": {
    "href": "api/Convenience.Migrations.html",
    "title": "Namespace Convenience.Migrations | Convenience",
    "keywords": "Namespace Convenience.Migrations Classes ConvenienceContextModelSnapshot Init A base class inherited by each EF Core migration. shiireTimeStamp A base class inherited by each EF Core migration."
  },
  "api/Convenience.Migrations.shiireTimeStamp.html": {
    "href": "api/Convenience.Migrations.shiireTimeStamp.html",
    "title": "Class shiireTimeStamp | Convenience",
    "keywords": "Class shiireTimeStamp Namespace Convenience.Migrations Assembly Convenience.dll A base class inherited by each EF Core migration. [DbContext(typeof(ConvenienceContext))] [Migration(\"20240530005521_shiireTimeStamp\")] public class shiireTimeStamp : Migration Inheritance object Migration shiireTimeStamp Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Convenience.Models.DataModels.ChumonJisseki.html": {
    "href": "api/Convenience.Models.DataModels.ChumonJisseki.html",
    "title": "Class ChumonJisseki | Convenience",
    "keywords": "Class ChumonJisseki Namespace Convenience.Models.DataModels Assembly Convenience.dll [Table(\"chumon_jisseki\")] [PrimaryKey(\"ChumonId\", new string[] { })] public class ChumonJisseki Inheritance object ChumonJisseki Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonDate [Column(\"chumon_date\")] [Required] public DateOnly ChumonDate { get; set; } Property Value DateOnly ChumonId [Column(\"chumon_code\")] [MaxLength(20)] [Required] public string ChumonId { get; set; } Property Value string ChumonJissekiMeisais public virtual IList<ChumonJissekiMeisai>? ChumonJissekiMeisais { get; set; } Property Value IList<ChumonJissekiMeisai> ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] public string ShiireSakiId { get; set; } Property Value string ShiireSakiMaster [ForeignKey(\"ShiireSakiId\")] public virtual ShiireSakiMaster? ShiireSakiMaster { get; set; } Property Value ShiireSakiMaster Version [Timestamp] public uint Version { get; set; } Property Value uint"
  },
  "api/Convenience.Models.DataModels.ChumonJissekiMeisai.html": {
    "href": "api/Convenience.Models.DataModels.ChumonJissekiMeisai.html",
    "title": "Class ChumonJissekiMeisai | Convenience",
    "keywords": "Class ChumonJissekiMeisai Namespace Convenience.Models.DataModels Assembly Convenience.dll [Table(\"chumon_jisseki_meisai\")] [PrimaryKey(\"ChumonId\", new string[] { \"ShiireSakiId\", \"ShiirePrdId\", \"ShohinId\" })] public class ChumonJissekiMeisai Inheritance object ChumonJissekiMeisai Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonId [Column(\"chumon_code\")] [MaxLength(20)] [Required] public string ChumonId { get; set; } Property Value string ChumonJisseki [ForeignKey(\"ChumonId\")] public virtual ChumonJisseki? ChumonJisseki { get; set; } Property Value ChumonJisseki ChumonSu [Column(\"chumon_su\")] [Precision(10, 2)] [RegularExpression(\"^-?\\\\d+(\\\\.\\\\d+)?$\", ErrorMessage = \"{0}は数値で入力してください\")] [Range(0, 999, ErrorMessage = \"{0}は、{1}～{2}の範囲で入力してください\")] [Required(ErrorMessage = \"{0}は、必須入力項目です\")] public decimal ChumonSu { get; set; } Property Value decimal ChumonZan [Column(\"chumon_zan\")] [Precision(10, 2)] public decimal ChumonZan { get; set; } Property Value decimal LastChumonSu [NotMapped] [Precision(10, 2)] public decimal? LastChumonSu { get; set; } Property Value decimal? ShiireJisseki public virtual ICollection<ShiireJisseki>? ShiireJisseki { get; set; } Property Value ICollection<ShiireJisseki> ShiireMaster [ForeignKey(\"ShiireSakiId,ShiirePrdId,ShohinId\")] public virtual ShiireMaster? ShiireMaster { get; set; } Property Value ShiireMaster ShiirePrdId [Column(\"shiire_prd_code\")] [MaxLength(10)] [Required] public string ShiirePrdId { get; set; } Property Value string ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] public string ShiireSakiId { get; set; } Property Value string ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] public string ShohinId { get; set; } Property Value string Version [Timestamp] public uint Version { get; set; } Property Value uint"
  },
  "api/Convenience.Models.DataModels.KaikeiJisseki.html": {
    "href": "api/Convenience.Models.DataModels.KaikeiJisseki.html",
    "title": "Class KaikeiJisseki | Convenience",
    "keywords": "Class KaikeiJisseki Namespace Convenience.Models.DataModels Assembly Convenience.dll [Table(\"kaikei_jisseki\")] [PrimaryKey(\"ShohinId\", new string[] { \"UriageDatetime\" })] public class KaikeiJisseki Inheritance object KaikeiJisseki Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ShohiZeiritsu [Column(\"shohi_zeiritsu\")] [Required] [Precision(15, 2)] public decimal ShohiZeiritsu { get; set; } Property Value decimal ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] public string ShohinId { get; set; } Property Value string ShohinMaster [ForeignKey(\"ShohinId\")] public virtual ShohinMaster ShohinMaster { get; set; } Property Value ShohinMaster UriageDatetime [Column(\"uriage_datetime\")] [DataType(DataType.DateTime)] [Required] public DateTime UriageDatetime { get; set; } Property Value DateTime UriageKingakuSu [Column(\"uriage_kingaku\")] [Required] [Precision(15, 2)] public decimal UriageKingakuSu { get; set; } Property Value decimal UriageSu [Column(\"uriage_su\")] [Required] [Precision(10, 2)] public decimal UriageSu { get; set; } Property Value decimal ZeikomiKingaku [Column(\"zeikomi_kingaku\")] [Required] [Precision(15, 2)] public decimal ZeikomiKingaku { get; set; } Property Value decimal"
  },
  "api/Convenience.Models.DataModels.ShiireJisseki.html": {
    "href": "api/Convenience.Models.DataModels.ShiireJisseki.html",
    "title": "Class ShiireJisseki | Convenience",
    "keywords": "Class ShiireJisseki Namespace Convenience.Models.DataModels Assembly Convenience.dll [Table(\"shiire_jisseki\")] [PrimaryKey(\"ChumonId\", new string[] { \"ShiireDate\", \"SeqByShiireDate\", \"ShiireSakiId\", \"ShiirePrdId\" })] public class ShiireJisseki Inheritance object ShiireJisseki Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonId [Column(\"chumon_code\")] [MaxLength(20)] [Required] public string ChumonId { get; set; } Property Value string ChumonJissekiMeisaii [ForeignKey(\"ChumonId,ShiireSakiId,ShiirePrdId,ShohinId\")] public ChumonJissekiMeisai ChumonJissekiMeisaii { get; set; } Property Value ChumonJissekiMeisai NonyuSu [Column(\"nonyu_su\")] [Precision(10, 2)] public decimal NonyuSu { get; set; } Property Value decimal NonyuSubalance [NotMapped] [Precision(10, 2)] public decimal? NonyuSubalance { get; set; } Property Value decimal? SeqByShiireDate [Column(\"seq_by_shiiredate\")] [Required] public uint SeqByShiireDate { get; set; } Property Value uint ShiireDate [Column(\"shiire_date\")] [Required] public DateOnly ShiireDate { get; set; } Property Value DateOnly ShiireDateTime [Column(\"shiire_datetime\")] [Required] public DateTime ShiireDateTime { get; set; } Property Value DateTime ShiirePrdId [Column(\"shiire_prd_code\")] [MaxLength(10)] [Required] public string ShiirePrdId { get; set; } Property Value string ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] public string ShiireSakiId { get; set; } Property Value string ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] public string ShohinId { get; set; } Property Value string SokoZaiko [NotMapped] [ForeignKey(\"ShiireSakiId,ShiirePrdId,ShohinId\")] public virtual SokoZaiko? SokoZaiko { get; set; } Property Value SokoZaiko Version [Timestamp] public uint Version { get; set; } Property Value uint"
  },
  "api/Convenience.Models.DataModels.ShiireMaster.html": {
    "href": "api/Convenience.Models.DataModels.ShiireMaster.html",
    "title": "Class ShiireMaster | Convenience",
    "keywords": "Class ShiireMaster Namespace Convenience.Models.DataModels Assembly Convenience.dll [Table(\"shiire_master\")] [PrimaryKey(\"ShiireSakiId\", new string[] { \"ShiirePrdId\", \"ShohinId\" })] public class ShiireMaster Inheritance object ShiireMaster Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonJissekiMeisaiis public virtual ICollection<ChumonJissekiMeisai>? ChumonJissekiMeisaiis { get; set; } Property Value ICollection<ChumonJissekiMeisai> ShiirePcsPerUnit [Column(\"shiire_pcs_unit\")] [Required] [Precision(7, 2)] public decimal ShiirePcsPerUnit { get; set; } Property Value decimal ShiirePrdId [Column(\"shiire_prd_code\")] [MaxLength(10)] [Required] public string ShiirePrdId { get; set; } Property Value string ShiirePrdName [Column(\"shiire_prd_name\")] [MaxLength(30)] [Required] public string ShiirePrdName { get; set; } Property Value string ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] public string ShiireSakiId { get; set; } Property Value string ShiireSakiMaster [ForeignKey(\"ShiireSakiId\")] public virtual ShiireSakiMaster? ShiireSakiMaster { get; set; } Property Value ShiireSakiMaster ShiireUnit [Column(\"shiire_unit\")] [MaxLength(10)] [Required] public string ShiireUnit { get; set; } Property Value string ShireTanka [Column(\"shiire_tanka\")] [Required] [Precision(7, 2)] public decimal ShireTanka { get; set; } Property Value decimal ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] public string ShohinId { get; set; } Property Value string ShohinMaster [ForeignKey(\"ShohinId\")] public virtual ShohinMaster? ShohinMaster { get; set; } Property Value ShohinMaster SokoZaikos public virtual SokoZaiko? SokoZaikos { get; set; } Property Value SokoZaiko TentoHaraidashiJissekis public virtual ICollection<TentoHaraidashiJisseki>? TentoHaraidashiJissekis { get; set; } Property Value ICollection<TentoHaraidashiJisseki>"
  },
  "api/Convenience.Models.DataModels.ShiireSakiMaster.html": {
    "href": "api/Convenience.Models.DataModels.ShiireSakiMaster.html",
    "title": "Class ShiireSakiMaster | Convenience",
    "keywords": "Class ShiireSakiMaster Namespace Convenience.Models.DataModels Assembly Convenience.dll [Table(\"shiire_saki_master\")] public class ShiireSakiMaster Inheritance object ShiireSakiMaster Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Banchi [Column(\"banchi\")] [MaxLength(10)] [Required] public string Banchi { get; set; } Property Value string ChumonJissekis public virtual ICollection<ChumonJisseki>? ChumonJissekis { get; set; } Property Value ICollection<ChumonJisseki> ShiireSakiBusho [Column(\"shiire_saki_busho\")] [MaxLength(30)] [Required] public string ShiireSakiBusho { get; set; } Property Value string ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] [Key] public string ShiireSakiId { get; set; } Property Value string ShiireSakiKaisya [Column(\"shiire_saki_kaisya\")] [MaxLength(30)] [Required] public string ShiireSakiKaisya { get; set; } Property Value string Shikuchoson [Column(\"shikuchoson\")] [MaxLength(10)] [Required] public string Shikuchoson { get; set; } Property Value string ShireMasters public virtual ICollection<ShiireMaster>? ShireMasters { get; set; } Property Value ICollection<ShiireMaster> Tatemonomei [Column(\"tatemonomei\")] [MaxLength(10)] [Required] public string Tatemonomei { get; set; } Property Value string Todoufuken [Column(\"todoufuken\")] [MaxLength(10)] [Required] public string Todoufuken { get; set; } Property Value string YubinBango [Column(\"yubin_bango\")] [MaxLength(30)] [Required] [DataType(DataType.PostalCode)] public string YubinBango { get; set; } Property Value string"
  },
  "api/Convenience.Models.DataModels.ShohinMaster.html": {
    "href": "api/Convenience.Models.DataModels.ShohinMaster.html",
    "title": "Class ShohinMaster | Convenience",
    "keywords": "Class ShohinMaster Namespace Convenience.Models.DataModels Assembly Convenience.dll [Table(\"shohin_master\")] public class ShohinMaster Inheritance object ShohinMaster Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ShiireMasters public virtual ICollection<ShiireMaster>? ShiireMasters { get; set; } Property Value ICollection<ShiireMaster> ShohiZeiritsu [Column(\"shohi_zeiritsu\")] [Required] [Precision(15, 2)] public decimal ShohiZeiritsu { get; set; } Property Value decimal ShohiZeiritsuGaishoku [Column(\"shohi_zeiritsu_gaisyoku\")] [Required] [Precision(15, 2)] public decimal ShohiZeiritsuGaishoku { get; set; } Property Value decimal ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] [Key] public string ShohinId { get; set; } Property Value string ShohinName [Column(\"shohin_name\")] [MaxLength(50)] [Required] public string ShohinName { get; set; } Property Value string TentoZaikos public virtual TentoZaiko? TentoZaikos { get; set; } Property Value TentoZaiko"
  },
  "api/Convenience.Models.DataModels.SokoZaiko.html": {
    "href": "api/Convenience.Models.DataModels.SokoZaiko.html",
    "title": "Class SokoZaiko | Convenience",
    "keywords": "Class SokoZaiko Namespace Convenience.Models.DataModels Assembly Convenience.dll [Table(\"soko_zaiko\")] [PrimaryKey(\"ShiireSakiId\", new string[] { \"ShiirePrdId\", \"ShohinId\" })] public class SokoZaiko Inheritance object SokoZaiko Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LastDeliveryDate [Column(\"last_delivery_date\")] public DateOnly? LastDeliveryDate { get; set; } Property Value DateOnly? LastShiireDate [Column(\"last_shiire_date\")] [Required] public DateOnly LastShiireDate { get; set; } Property Value DateOnly ShiireJissekis [NotMapped] public virtual IList<ShiireJisseki>? ShiireJissekis { get; set; } Property Value IList<ShiireJisseki> ShiireMaster [ForeignKey(\"ShiireSakiId,ShiirePrdId,ShohinId\")] public virtual ShiireMaster? ShiireMaster { get; set; } Property Value ShiireMaster ShiirePrdId [Column(\"shiire_prd_code\")] [MaxLength(10)] [Required] public string ShiirePrdId { get; set; } Property Value string ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] public string ShiireSakiId { get; set; } Property Value string ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] public string ShohinId { get; set; } Property Value string SokoZaikoCaseSu [Column(\"soko_zaiko_case_su\")] [Precision(10, 2)] public decimal SokoZaikoCaseSu { get; set; } Property Value decimal SokoZaikoSu [Column(\"soko_zaiko_su\")] [Precision(10, 2)] public decimal SokoZaikoSu { get; set; } Property Value decimal Version [Timestamp] public uint Version { get; set; } Property Value uint"
  },
  "api/Convenience.Models.DataModels.TentoHaraidashiJisseki.html": {
    "href": "api/Convenience.Models.DataModels.TentoHaraidashiJisseki.html",
    "title": "Class TentoHaraidashiJisseki | Convenience",
    "keywords": "Class TentoHaraidashiJisseki Namespace Convenience.Models.DataModels Assembly Convenience.dll [Table(\"tento_haraidashi_jisseki\")] [PrimaryKey(\"ShiireSakiId\", new string[] { \"ShiirePrdId\", \"ShohinId\", \"HaraidashiDate\" })] public class TentoHaraidashiJisseki Inheritance object TentoHaraidashiJisseki Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HaraidashiCaseSu [Column(\"haraidashi_case_su\")] public int HaraidashiCaseSu { get; set; } Property Value int HaraidashiDate [Column(\"haraidashi_date\")] [Required] [DataType(DataType.DateTime)] public DateTime HaraidashiDate { get; set; } Property Value DateTime HaraidashiSu [Column(\"haraidashi_su\")] [Precision(7, 2)] public decimal HaraidashiSu { get; set; } Property Value decimal ShiireMaster [ForeignKey(\"ShiireSakiId,ShiirePrdId,ShohinId\")] public virtual ShiireMaster? ShiireMaster { get; set; } Property Value ShiireMaster ShiirePrdId [Column(\"shiire_prd_code\")] [MaxLength(10)] [Required] public string ShiirePrdId { get; set; } Property Value string ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] public string ShiireSakiId { get; set; } Property Value string ShireDateTime [Column(\"shiire_datetime\")] [Required] [DataType(DataType.DateTime)] public DateOnly ShireDateTime { get; set; } Property Value DateOnly ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] [Key] public string ShohinId { get; set; } Property Value string"
  },
  "api/Convenience.Models.DataModels.TentoZaiko.html": {
    "href": "api/Convenience.Models.DataModels.TentoZaiko.html",
    "title": "Class TentoZaiko | Convenience",
    "keywords": "Class TentoZaiko Namespace Convenience.Models.DataModels Assembly Convenience.dll [Table(\"tento_zaiko\")] [PrimaryKey(\"ShohinId\", new string[] { })] public class TentoZaiko Inheritance object TentoZaiko Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LastHaraidashiDate [Column(\"last_haraidashi_datetime\")] [Required] [DataType(DataType.DateTime)] public DateTime LastHaraidashiDate { get; set; } Property Value DateTime LastShireDateTime [Column(\"last_shiire_datetime\")] [Required] [DataType(DataType.DateTime)] public DateOnly LastShireDateTime { get; set; } Property Value DateOnly LastUriageDatetime [Column(\"last_uriage_datetime\")] [DataType(DataType.DateTime)] [Required] public DateTime LastUriageDatetime { get; set; } Property Value DateTime ShohinId [Column(\"shohin_code\")] [MaxLength(10)] [Required] [Key] public string ShohinId { get; set; } Property Value string ShohinMaster [ForeignKey(\"ShohinId\")] public virtual ShohinMaster? ShohinMaster { get; set; } Property Value ShohinMaster ZaikoSu [Column(\"zaiko_su\")] [Precision(7, 2)] public decimal ZaikoSu { get; set; } Property Value decimal"
  },
  "api/Convenience.Models.DataModels.html": {
    "href": "api/Convenience.Models.DataModels.html",
    "title": "Namespace Convenience.Models.DataModels | Convenience",
    "keywords": "Namespace Convenience.Models.DataModels Classes ChumonJisseki ChumonJissekiMeisai KaikeiJisseki ShiireJisseki ShiireMaster ShiireSakiMaster ShohinMaster SokoZaiko TentoHaraidashiJisseki TentoZaiko"
  },
  "api/Convenience.Models.ErrorViewModel.html": {
    "href": "api/Convenience.Models.ErrorViewModel.html",
    "title": "Class ErrorViewModel | Convenience",
    "keywords": "Class ErrorViewModel Namespace Convenience.Models Assembly Convenience.dll public class ErrorViewModel Inheritance object ErrorViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ExceptionHandlerPathFeature public IExceptionHandlerPathFeature? ExceptionHandlerPathFeature Field Value IExceptionHandlerPathFeature StatusCodeReExecuteFeature public IStatusCodeReExecuteFeature? StatusCodeReExecuteFeature Field Value IStatusCodeReExecuteFeature Properties EventAt public DateTime? EventAt { get; set; } Property Value DateTime? RequestId public string? RequestId { get; set; } Property Value string ShowRequestId public bool ShowRequestId { get; } Property Value bool StatusCode public int? StatusCode { get; set; } Property Value int?"
  },
  "api/Convenience.Models.Interfaces.IChumon.html": {
    "href": "api/Convenience.Models.Interfaces.IChumon.html",
    "title": "Interface IChumon | Convenience",
    "keywords": "Interface IChumon Namespace Convenience.Models.Interfaces Assembly Convenience.dll 注文クラスインターフェース public interface IChumon Properties ChumonJisseki 注文実績プロパティ ChumonJisseki ChumonJisseki { get; set; } Property Value ChumonJisseki Methods ChumonSakusei(string, DateOnly) 注文作成 Task<ChumonJisseki> ChumonSakusei(string inShireSakiId, DateOnly inChumonDate) Parameters inShireSakiId string 仕入先コード inChumonDate DateOnly 注文日 Returns Task<ChumonJisseki> 新規作成された注文実績 Remarks 仕入先より注文実績データ（親）を生成する 注文実績明細データ（子）を仕入マスタを元に作成する 注文実績データ（親）と注文実績明細データ（子）を連結する 注文実績（プラス注文実績明細）を戻り値とする Exceptions Exception ChumonToiawase(string, DateOnly) 注文更新用問い合わせ Task<ChumonJisseki> ChumonToiawase(string inShireSakiId, DateOnly inChumonDate) Parameters inShireSakiId string 仕入先コード inChumonDate DateOnly 注文日 Returns Task<ChumonJisseki> 既存の注文実績 Remarks ①注文実績＋注文実績＋仕入マスタ＋商品マスタ検索 ②戻り値を注文実績＋注文実績明細とする ChumonUpdate(ChumonJisseki) 注文実績＋注文明細更新 Task<ChumonJisseki> ChumonUpdate(ChumonJisseki postedChumonJisseki) Parameters postedChumonJisseki ChumonJisseki postされた注文実績 Returns Task<ChumonJisseki> postされた注文実績を上書きされた注文実績"
  },
  "api/Convenience.Models.Interfaces.IChumonService.html": {
    "href": "api/Convenience.Models.Interfaces.IChumonService.html",
    "title": "Interface IChumonService | Convenience",
    "keywords": "Interface IChumonService Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface IChumonService Properties chumon 注文クラス用オブジェクト変数 IChumon chumon { get; set; } Property Value IChumon Methods ChumonCommit(ChumonJisseki) 注文データをDBに書き込む Task<(ChumonJisseki, int, bool, Message.ErrDef)> ChumonCommit(ChumonJisseki inChumonJisseki) Parameters inChumonJisseki ChumonJisseki Postされた注文実績 Returns Task<(ChumonJisseki, int, bool, Message.ErrDef)> Exceptions Exception 排他制御の例外が起きたらスローする ChumonSetting(string, DateOnly) 注文セッティング Task<ChumonViewModel> ChumonSetting(string inShiireSakiId, DateOnly inChumonDate) Parameters inShiireSakiId string 仕入先コード（画面より） inChumonDate DateOnly 注文日付（画面より） Returns Task<ChumonViewModel> 注文viewモデル"
  },
  "api/Convenience.Models.Interfaces.IDbContext.html": {
    "href": "api/Convenience.Models.Interfaces.IDbContext.html",
    "title": "Interface IDbContext | Convenience",
    "keywords": "Interface IDbContext Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface IDbContext Fields ConfigrationFileName private const string ConfigrationFileName = \"appsettings.json\" Field Value string KeyWordInAppConfig private const string KeyWordInAppConfig = \"ConnectionStrings:ConvenienceContext\" Field Value string Methods DbOpen() protected static ConvenienceContext DbOpen() Returns ConvenienceContext"
  },
  "api/Convenience.Models.Interfaces.ISharedTools.html": {
    "href": "api/Convenience.Models.Interfaces.ISharedTools.html",
    "title": "Interface ISharedTools | Convenience",
    "keywords": "Interface ISharedTools Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface ISharedTools Methods ConvertFromSerial<T>(string) protected static T ConvertFromSerial<T>(string serial) Parameters serial string Returns T Type Parameters T ConvertToSerial<T>(T) protected static string ConvertToSerial<T>(T obj) Parameters obj T Returns string Type Parameters T"
  },
  "api/Convenience.Models.Interfaces.IShiire.html": {
    "href": "api/Convenience.Models.Interfaces.IShiire.html",
    "title": "Interface IShiire | Convenience",
    "keywords": "Interface IShiire Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface IShiire Properties Shiirejissekis IList<ShiireJisseki> Shiirejissekis { get; set; } Property Value IList<ShiireJisseki> SokoZaikos IList<SokoZaiko> SokoZaikos { get; set; } Property Value IList<SokoZaiko> Methods ChumonToShiireJisseki(string, DateOnly, uint) Task<IList<ShiireJisseki>> ChumonToShiireJisseki(string inChumonId, DateOnly inShiireDate, uint inSeqByShiireDate) Parameters inChumonId string inShiireDate DateOnly inSeqByShiireDate uint Returns Task<IList<ShiireJisseki>> ChuumonIdOnShiireJissekiExistingCheck(string, DateOnly, uint) Task<bool> ChuumonIdOnShiireJissekiExistingCheck(string inChumonId, DateOnly inShiireDate, uint inSeqByShiireDate) Parameters inChumonId string inShiireDate DateOnly inSeqByShiireDate uint Returns Task<bool> ChuumonZanZaikoSuChousei(string, IList<ShiireJisseki>) Task<Shiire.ShiireUkeireReturnSet> ChuumonZanZaikoSuChousei(string inChumonId, IList<ShiireJisseki> inShiireJissekis) Parameters inChumonId string inShiireJissekis IList<ShiireJisseki> Returns Task<Shiire.ShiireUkeireReturnSet> NextSeq(string, DateOnly) Task<uint> NextSeq(string inChumonId, DateOnly inShiireDate) Parameters inChumonId string inShiireDate DateOnly Returns Task<uint> ShiireSokoConnection(IList<ShiireJisseki>, IEnumerable<SokoZaiko>) IList<ShiireJisseki> ShiireSokoConnection(IList<ShiireJisseki> inShiireJissekis, IEnumerable<SokoZaiko> indata) Parameters inShiireJissekis IList<ShiireJisseki> indata IEnumerable<SokoZaiko> Returns IList<ShiireJisseki> ShiireToShiireJisseki(string, DateOnly, uint) Task<IList<ShiireJisseki>> ShiireToShiireJisseki(string inChumonId, DateOnly inShiireDate, uint inSeqByShiireDate) Parameters inChumonId string inShiireDate DateOnly inSeqByShiireDate uint Returns Task<IList<ShiireJisseki>> ShiireUpdate(IList<ShiireJisseki>) IList<ShiireJisseki> ShiireUpdate(IList<ShiireJisseki> inShiireJissekis) Parameters inShiireJissekis IList<ShiireJisseki> Returns IList<ShiireJisseki> ZanAriChumonList() Task<IList<Shiire.ChumonList>> ZanAriChumonList() Returns Task<IList<Shiire.ChumonList>>"
  },
  "api/Convenience.Models.Interfaces.IShiireService.html": {
    "href": "api/Convenience.Models.Interfaces.IShiireService.html",
    "title": "Interface IShiireService | Convenience",
    "keywords": "Interface IShiireService Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface IShiireService Methods SetShiireKeysModel() Task<ShiireKeysViewModel> SetShiireKeysModel() Returns Task<ShiireKeysViewModel> ShiireHandling(string) Task<(int, IList<ShiireJisseki>)> ShiireHandling(string inChumonId) Parameters inChumonId string Returns Task<(int, IList<ShiireJisseki>)> ShiireHandling(string, DateOnly, uint, IList<ShiireJisseki>) Task<(int, IList<ShiireJisseki>)> ShiireHandling(string inChumonId, DateOnly inShiireDate, uint inSeqByShiireDate, IList<ShiireJisseki> inShiireJissekis) Parameters inChumonId string inShiireDate DateOnly inSeqByShiireDate uint inShiireJissekis IList<ShiireJisseki> Returns Task<(int, IList<ShiireJisseki>)> ShiireUpdate() Task<int> ShiireUpdate() Returns Task<int>"
  },
  "api/Convenience.Models.Interfaces.IZaiko.html": {
    "href": "api/Convenience.Models.Interfaces.IZaiko.html",
    "title": "Interface IZaiko | Convenience",
    "keywords": "Interface IZaiko Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface IZaiko Properties SoKoZaikoQueryable IQueryable<ZaikoViewModel.ZaikoListLine>? SoKoZaikoQueryable { get; set; } Property Value IQueryable<ZaikoViewModel.ZaikoListLine> Methods AddOrderby(string, bool) IQueryable<ZaikoViewModel.ZaikoListLine> AddOrderby(string sortKey, bool descending) Parameters sortKey string descending bool Returns IQueryable<ZaikoViewModel.ZaikoListLine> CreateSokoZaikoList(string) IQueryable<ZaikoViewModel.ZaikoListLine> CreateSokoZaikoList(string searchKey) Parameters searchKey string Returns IQueryable<ZaikoViewModel.ZaikoListLine>"
  },
  "api/Convenience.Models.Interfaces.IZaikoService.html": {
    "href": "api/Convenience.Models.Interfaces.IZaikoService.html",
    "title": "Interface IZaikoService | Convenience",
    "keywords": "Interface IZaikoService Namespace Convenience.Models.Interfaces Assembly Convenience.dll public interface IZaikoService Methods KeyInput(KeyEventRec[], SelecteWhereItem[]) Task<IList<ZaikoViewModel.ZaikoListLine>> KeyInput(ZaikoViewModel.KeyEventRec[] keydata, ZaikoViewModel.SelecteWhereItem[] selecteWhereItemArray) Parameters keydata KeyEventRec[] selecteWhereItemArray SelecteWhereItem[] Returns Task<IList<ZaikoViewModel.ZaikoListLine>>"
  },
  "api/Convenience.Models.Interfaces.html": {
    "href": "api/Convenience.Models.Interfaces.html",
    "title": "Namespace Convenience.Models.Interfaces | Convenience",
    "keywords": "Namespace Convenience.Models.Interfaces Interfaces IChumon 注文クラスインターフェース IChumonService IDbContext ISharedTools IShiire IShiireService IZaiko IZaikoService"
  },
  "api/Convenience.Models.Menu.html": {
    "href": "api/Convenience.Models.Menu.html",
    "title": "Class Menu | Convenience",
    "keywords": "Class Menu Namespace Convenience.Models Assembly Convenience.dll public class Menu Inheritance object Menu Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MenuList public List<MenuItem> MenuList { get; set; } Property Value List<MenuItem>"
  },
  "api/Convenience.Models.MenuItem.html": {
    "href": "api/Convenience.Models.MenuItem.html",
    "title": "Class MenuItem | Convenience",
    "keywords": "Class MenuItem Namespace Convenience.Models Assembly Convenience.dll public class MenuItem Inheritance object MenuItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description public string Description { get; set; } Property Value string Name public string Name { get; set; } Property Value string Url public string Url { get; set; } Property Value string"
  },
  "api/Convenience.Models.Properties.Chumon.html": {
    "href": "api/Convenience.Models.Properties.Chumon.html",
    "title": "Class Chumon | Convenience",
    "keywords": "Class Chumon Namespace Convenience.Models.Properties Assembly Convenience.dll 注文クラス public class Chumon : IChumon, IDbContext Inheritance object Chumon Implements IChumon IDbContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Chumon() 注文クラスデバッグ用 public Chumon() Chumon(ConvenienceContext) コンストラクタ public Chumon(ConvenienceContext context) Parameters context ConvenienceContext DBコンテキスト Fields _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext Properties ChumonJisseki 注文実績プロパティ public ChumonJisseki ChumonJisseki { get; set; } Property Value ChumonJisseki Methods ChumonIdHatsuban(DateOnly) 注文コード発番 private Task<string> ChumonIdHatsuban(DateOnly InTheDate) Parameters InTheDate DateOnly 注文日付 Returns Task<string> 発番された注文コード Remarks 注文コード書式例）：20240129-001(yyyyMMdd-001～999） ChumonSakusei(string, DateOnly) 注文作成 public Task<ChumonJisseki> ChumonSakusei(string inShireSakiId, DateOnly inChumonDate) Parameters inShireSakiId string 仕入先コード inChumonDate DateOnly 注文日 Returns Task<ChumonJisseki> 新規作成された注文実績 Remarks ①仕入先より注文実績データ（親）を生成する ②注文実績明細データ（子）を仕入マスタを元に作成する ③注文実績データ（親）と注文実績明細データ（子）を連結する ④注文実績（プラス注文実績明細）を戻り値とする Exceptions Exception ChumonToiawase(string, DateOnly) 注文更新用問い合わせ public Task<ChumonJisseki?> ChumonToiawase(string inShireSakiId, DateOnly inChumonDate) Parameters inShireSakiId string 仕入先コード inChumonDate DateOnly 注文日 Returns Task<ChumonJisseki> 既存の注文実績 Remarks ①注文実績＋注文実績＋仕入マスタ＋商品マスタ検索 ②戻り値を注文実績＋注文実績明細とする ChumonUpdate(ChumonJisseki) 注文実績＋注文明細更新 public Task<ChumonJisseki> ChumonUpdate(ChumonJisseki postedChumonJisseki) Parameters postedChumonJisseki ChumonJisseki postされた注文実績 Returns Task<ChumonJisseki> postされた注文実績を上書きされた注文実績"
  },
  "api/Convenience.Models.Properties.Message.ErrDef.html": {
    "href": "api/Convenience.Models.Properties.Message.ErrDef.html",
    "title": "Enum Message.ErrDef | Convenience",
    "keywords": "Enum Message.ErrDef Namespace Convenience.Models.Properties Assembly Convenience.dll エラーコードenum設定（0から付与） public enum Message.ErrDef Fields CanNotlUpdate = 2 ChumonDateError = 4 ChumonIdError = 3 ChumonIdRelationError = 5 ChumonSuBadRange = 7 ChumonSuIsNull = 6 ChumonZanIsNull = 8 DataValid = 0 NormalUpdate = 1 OtherError = 10 SuErrorBetChumonSuAndZan = 9"
  },
  "api/Convenience.Models.Properties.Message.MessageData.html": {
    "href": "api/Convenience.Models.Properties.Message.MessageData.html",
    "title": "Class Message.MessageData | Convenience",
    "keywords": "Class Message.MessageData Namespace Convenience.Models.Properties Assembly Convenience.dll メッセ―ジ表示用データクラス public class Message.MessageData Inheritance object Message.MessageData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MessageNo メッセージ番号 public Message.ErrDef MessageNo { get; set; } Property Value Message.ErrDef MessageText 表示メッセージ public string? MessageText { get; set; } Property Value string"
  },
  "api/Convenience.Models.Properties.Message.html": {
    "href": "api/Convenience.Models.Properties.Message.html",
    "title": "Class Message | Convenience",
    "keywords": "Class Message Namespace Convenience.Models.Properties Assembly Convenience.dll 正常・エラーメッセージ用クラス public class Message Inheritance object Message Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MessageList エラー番号とメッセージ表示のリンク private static readonly ICollection<Message.MessageData> MessageList Field Value ICollection<Message.MessageData> Properties messageData メッセ―ジ表示用データクラスのオブジェクト変数 public static Message.MessageData? messageData { get; set; } Property Value Message.MessageData Remarks NULL許容 Methods SetMessage(ErrDef) エラーメッセージのセット public Message.MessageData? SetMessage(Message.ErrDef inErrCd) Parameters inErrCd Message.ErrDef 表示したいメッセージ内容に対応したエラーコード Returns Message.MessageData メッセ―ジ表示用データクラスがセットされたオブジェクト変数 Remarks NULL返却あり"
  },
  "api/Convenience.Models.Properties.Shiire.ChumonList.html": {
    "href": "api/Convenience.Models.Properties.Shiire.ChumonList.html",
    "title": "Class Shiire.ChumonList | Convenience",
    "keywords": "Class Shiire.ChumonList Namespace Convenience.Models.Properties Assembly Convenience.dll 仕入画面のキー入力の注文コード一覧用 public class Shiire.ChumonList Inheritance object Shiire.ChumonList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonId public string ChumonId { get; set; } Property Value string ChumonZan public decimal ChumonZan { get; set; } Property Value decimal"
  },
  "api/Convenience.Models.Properties.Shiire.ShiireUkeireReturnSet.html": {
    "href": "api/Convenience.Models.Properties.Shiire.ShiireUkeireReturnSet.html",
    "title": "Class Shiire.ShiireUkeireReturnSet | Convenience",
    "keywords": "Class Shiire.ShiireUkeireReturnSet Namespace Convenience.Models.Properties Assembly Convenience.dll 注文残・倉庫在庫調整用モデル public class Shiire.ShiireUkeireReturnSet Inheritance object Shiire.ShiireUkeireReturnSet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ShiireJissekis 仕入実績 Include注文実績 public IList<ShiireJisseki> ShiireJissekis { get; set; } Property Value IList<ShiireJisseki> SokoZaikos 倉庫在庫 public IList<SokoZaiko> SokoZaikos { get; set; } Property Value IList<SokoZaiko>"
  },
  "api/Convenience.Models.Properties.Shiire.html": {
    "href": "api/Convenience.Models.Properties.Shiire.html",
    "title": "Class Shiire | Convenience",
    "keywords": "Class Shiire Namespace Convenience.Models.Properties Assembly Convenience.dll 仕入クラス public class Shiire : IShiire, IDbContext Inheritance object Shiire Implements IShiire IDbContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Shiire() 仕入クラスデバッグ用 public Shiire() Shiire(ConvenienceContext) コンストラクタ 通常の場合はＤＢコンテキストを引き継ぐ public Shiire(ConvenienceContext context) Parameters context ConvenienceContext ASPから引き継ぐDBコンテキスト Fields _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext Properties Shiirejissekis 仕入実績プロパティ Include ChuumonJissekiMeisai public IList<ShiireJisseki> Shiirejissekis { get; set; } Property Value IList<ShiireJisseki> SokoZaikos 倉庫在庫プロパティ public IList<SokoZaiko> SokoZaikos { get; set; } Property Value IList<SokoZaiko> Methods ChumonToShiireJisseki(string, DateOnly, uint) 仕入実績作成 public Task<IList<ShiireJisseki>> ChumonToShiireJisseki(string inChumonId, DateOnly inShiireDate, uint inSeqByShiireDate) Parameters inChumonId string 注文コード（注文実績問い合わせキー） inShiireDate DateOnly 仕入日付（仕入実績にセットされる） inSeqByShiireDate uint 仕入日付内のシーケンス（仕入実績にセットされる） Returns Task<IList<ShiireJisseki>> 注文実績から新規作成された仕入実績 ChuumonIdOnShiireJissekiExistingCheck(string, DateOnly, uint) public Task<bool> ChuumonIdOnShiireJissekiExistingCheck(string inChumonId, DateOnly inShiireDate, uint inSeqByShiireDate) Parameters inChumonId string inShiireDate DateOnly inSeqByShiireDate uint Returns Task<bool> ChuumonZanZaikoSuChousei(string, IList<ShiireJisseki>) 注文残・在庫数量調整 public Task<Shiire.ShiireUkeireReturnSet> ChuumonZanZaikoSuChousei(string inChumonId, IList<ShiireJisseki> inShiireJissekis) Parameters inChumonId string 注文コード inShiireJissekis IList<ShiireJisseki> 仕入実績（注文実績がインクルードされていること） Returns Task<Shiire.ShiireUkeireReturnSet> 注文残・倉庫在庫が調整された注文残・倉庫在庫調整用モデル NextSeq(string, DateOnly) 注文コード、仕入日を元に、次の仕入SEQを求める 仕入実績の主キーは注文コード、仕入日、仕入SEQなので、仕入日に数回仕入れる場合は、 仕入SEQをインクリメントして利用する public Task<uint> NextSeq(string inChumonId, DateOnly inShiireDate) Parameters inChumonId string 仕入実績検索キー：注文コード inShiireDate DateOnly 仕入実績検索キー：仕入日 Returns Task<uint> 次の仕入SEQ（次に仕入実績を登録する仕入SEQ） ShiireSokoConnection(IList<ShiireJisseki>, IEnumerable<SokoZaiko>) 倉庫在庫を仕入データに接続する（表示前に利用する） NotMappedは外部キーが使えないから、includeできないため public IList<ShiireJisseki> ShiireSokoConnection(IList<ShiireJisseki> inShiireJissekis, IEnumerable<SokoZaiko> inSokoZaiko) Parameters inShiireJissekis IList<ShiireJisseki> 仕入実績 inSokoZaiko IEnumerable<SokoZaiko> Returns IList<ShiireJisseki> ShiireToShiireJisseki(string, DateOnly, uint) 仕入実績から仕入実績プロパティに反映 public Task<IList<ShiireJisseki>> ShiireToShiireJisseki(string inChumonId, DateOnly inShiireDate, uint inSeqByShiireDate) Parameters inChumonId string 注文コード inShiireDate DateOnly 仕入日付 inSeqByShiireDate uint 仕入SEQ Returns Task<IList<ShiireJisseki>> ShiireUpdate(IList<ShiireJisseki>) 仕入データPost内容の反映 public IList<ShiireJisseki> ShiireUpdate(IList<ShiireJisseki> inShiireJissekis) Parameters inShiireJissekis IList<ShiireJisseki> Postされた仕入実績 Returns IList<ShiireJisseki> Postされた注仕入実績がオーバライドされた仕入実績プロパティ ZaikoSet(IEnumerable<ShiireJisseki>) 倉庫在庫登録 private Task<IList<SokoZaiko>> ZaikoSet(IEnumerable<ShiireJisseki> shiireJissekis) Parameters shiireJissekis IEnumerable<ShiireJisseki> Postされたデータでオーバーライドされた仕入実績 Returns Task<IList<SokoZaiko>> 仕入実績から仕入差を使って在庫数を調整された倉庫在庫 ZanAriChumonList() 注文残がある注文のリスト化 public Task<IList<Shiire.ChumonList>> ZanAriChumonList() Returns Task<IList<Shiire.ChumonList>> 注文残のある注文コード一覧"
  },
  "api/Convenience.Models.Properties.Zaiko.html": {
    "href": "api/Convenience.Models.Properties.Zaiko.html",
    "title": "Class Zaiko | Convenience",
    "keywords": "Class Zaiko Namespace Convenience.Models.Properties Assembly Convenience.dll 注文実績明細検索＆倉庫在庫（遅延実行） public class Zaiko : IZaiko Inheritance object Zaiko Implements IZaiko Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Zaiko() コンストラクター（コンソール実行＝デバッグ用） public Zaiko() Zaiko(ConvenienceContext) ＤＢコンテキスト設定（ＡＳＰ実行用） public Zaiko(ConvenienceContext context) Parameters context ConvenienceContext Fields _context DBコンテキスト private readonly ConvenienceContext _context Field Value ConvenienceContext isFirstCalled OrderByかThenByか切り替えるフラグ private bool isFirstCalled Field Value bool Properties SoKoZaikoQueryable 生成される問い合わせ（遅延実行用） public IQueryable<ZaikoViewModel.ZaikoListLine>? SoKoZaikoQueryable { get; set; } Property Value IQueryable<ZaikoViewModel.ZaikoListLine> Methods AddOrderby(string, bool) 機能：注文実績明細検索＆倉庫在庫（遅延実行）＋Where内容の状態から、ソート順の追加セットを行う public IQueryable<ZaikoViewModel.ZaikoListLine> AddOrderby(string sortKey, bool descending) Parameters sortKey string ソートキー descending bool 降順・昇順区分 Returns IQueryable<ZaikoViewModel.ZaikoListLine> 倉庫在庫 ＆ 注文実績明細(変数:SoKoZaikoQueryable) ソート指示付き ISoKoZaikoQueryable型にして遅延実行化 CreateSokoZaikoList(string) 注文実績明細検索＆倉庫在庫（遅延実行） public IQueryable<ZaikoViewModel.ZaikoListLine> CreateSokoZaikoList(string inSearchKey) Parameters inSearchKey string 検索キー Returns IQueryable<ZaikoViewModel.ZaikoListLine> 倉庫在庫 ＆ 注文実績明細(変数:SoKoZaikoQueryable) Where指示付き ISoKoZaikoQueryable型にして遅延実行化"
  },
  "api/Convenience.Models.Properties.html": {
    "href": "api/Convenience.Models.Properties.html",
    "title": "Namespace Convenience.Models.Properties | Convenience",
    "keywords": "Namespace Convenience.Models.Properties Classes Chumon 注文クラス Message 正常・エラーメッセージ用クラス Message.MessageData メッセ―ジ表示用データクラス Shiire 仕入クラス Shiire.ChumonList 仕入画面のキー入力の注文コード一覧用 Shiire.ShiireUkeireReturnSet 注文残・倉庫在庫調整用モデル Zaiko 注文実績明細検索＆倉庫在庫（遅延実行） Enums Message.ErrDef エラーコードenum設定（0から付与）"
  },
  "api/Convenience.Models.Services.ChumonService.html": {
    "href": "api/Convenience.Models.Services.ChumonService.html",
    "title": "Class ChumonService | Convenience",
    "keywords": "Class ChumonService Namespace Convenience.Models.Services Assembly Convenience.dll 注文サービスクラス public class ChumonService : IChumonService, IDbContext Inheritance object ChumonService Implements IChumonService IDbContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChumonService() デバッグ用 public ChumonService() ChumonService(ConvenienceContext, IChumon) コンストラクター 通常用 public ChumonService(ConvenienceContext context, IChumon chumon) Parameters context ConvenienceContext DBコンテキスト chumon IChumon 注文クラスＤＩ注入用 Fields CreateChumonInstance コンストラクタ 注文オブジェクト用記述 private Func<ConvenienceContext, IChumon> CreateChumonInstance Field Value Func<ConvenienceContext, IChumon> _context DBコンテクスト private readonly ConvenienceContext _context Field Value ConvenienceContext Properties chumon 注文オブジェクト用 public IChumon chumon { get; set; } Property Value IChumon Methods ChumonCommit(ChumonJisseki) 注文データをDBに書き込む public Task<(ChumonJisseki, int, bool, Message.ErrDef)> ChumonCommit(ChumonJisseki inChumonJisseki) Parameters inChumonJisseki ChumonJisseki Postされた注文実績 Returns Task<(ChumonJisseki, int, bool, Message.ErrDef)> Exceptions Exception 排他制御の例外が起きたらスローする ChumonJissekiIsValid(ChumonJisseki) Postされた注文実績のデータチェック private (bool, Message.ErrDef) ChumonJissekiIsValid(ChumonJisseki inChumonJisseki) Parameters inChumonJisseki ChumonJisseki postされた注文実績 Returns (bool, Message.ErrDef) 正常=true、異常=false、エラーコード ChumonSetting(string, DateOnly) 注文セッティング public Task<ChumonViewModel> ChumonSetting(string inShiireSakiId, DateOnly inChumonDate) Parameters inShiireSakiId string 仕入先コード（画面より） inChumonDate DateOnly 注文日付（画面より） Returns Task<ChumonViewModel> 注文viewモデル"
  },
  "api/Convenience.Models.Services.ShiireService.html": {
    "href": "api/Convenience.Models.Services.ShiireService.html",
    "title": "Class ShiireService | Convenience",
    "keywords": "Class ShiireService Namespace Convenience.Models.Services Assembly Convenience.dll 仕入サービスクラス public class ShiireService : IShiireService Inheritance object ShiireService Implements IShiireService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShiireService(ConvenienceContext, IShiire) コンストラクター 通常用 public ShiireService(ConvenienceContext context, IShiire shiire) Parameters context ConvenienceContext DBコンテキスト shiire IShiire 仕入クラスＤＩ注入用 Fields _context private readonly ConvenienceContext _context Field Value ConvenienceContext shiire private readonly IShiire shiire Field Value IShiire Methods SetShiireKeysModel() public Task<ShiireKeysViewModel> SetShiireKeysModel() Returns Task<ShiireKeysViewModel> ShiireHandling(string) public Task<(int, IList<ShiireJisseki>)> ShiireHandling(string inChumonId) Parameters inChumonId string Returns Task<(int, IList<ShiireJisseki>)> ShiireHandling(string, DateOnly, uint, IList<ShiireJisseki>) public Task<(int, IList<ShiireJisseki>)> ShiireHandling(string inChumonId, DateOnly inShiireDate, uint inSeqByShiireDate, IList<ShiireJisseki> inShiireJissekis) Parameters inChumonId string inShiireDate DateOnly inSeqByShiireDate uint inShiireJissekis IList<ShiireJisseki> Returns Task<(int, IList<ShiireJisseki>)> ShiireUpdate() public Task<int> ShiireUpdate() Returns Task<int>"
  },
  "api/Convenience.Models.Services.ZaikoService.html": {
    "href": "api/Convenience.Models.Services.ZaikoService.html",
    "title": "Class ZaikoService | Convenience",
    "keywords": "Class ZaikoService Namespace Convenience.Models.Services Assembly Convenience.dll 倉庫在庫検索（サービス） public class ZaikoService : IZaikoService Inheritance object ZaikoService Implements IZaikoService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ZaikoService() public ZaikoService() ZaikoService(ConvenienceContext, IZaiko) コンストラクター（ＡＳＰ用） public ZaikoService(ConvenienceContext context, IZaiko zaiko) Parameters context ConvenienceContext DBコンテキスト zaiko IZaiko 在庫クラスＤＩ注入用 Fields Zaiko private readonly IZaiko Zaiko Field Value IZaiko _context private readonly ConvenienceContext _context Field Value ConvenienceContext Methods KeyInput(KeyEventRec[], SelecteWhereItem[]) 検索キー画面の情報取得 public Task<IList<ZaikoViewModel.ZaikoListLine>> KeyInput(ZaikoViewModel.KeyEventRec[] inKeySetOrderArray, ZaikoViewModel.SelecteWhereItem[] inSelectWhereItemArray) Parameters inKeySetOrderArray KeyEventRec[] inSelectWhereItemArray SelecteWhereItem[] Returns Task<IList<ZaikoViewModel.ZaikoListLine>>"
  },
  "api/Convenience.Models.Services.html": {
    "href": "api/Convenience.Models.Services.html",
    "title": "Namespace Convenience.Models.Services | Convenience",
    "keywords": "Namespace Convenience.Models.Services Classes ChumonService 注文サービスクラス ShiireService 仕入サービスクラス ZaikoService 倉庫在庫検索（サービス）"
  },
  "api/Convenience.Models.ViewModels.Chumon.ChumonKeysViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.Chumon.ChumonKeysViewModel.html",
    "title": "Class ChumonKeysViewModel | Convenience",
    "keywords": "Class ChumonKeysViewModel Namespace Convenience.Models.ViewModels.Chumon Assembly Convenience.dll public class ChumonKeysViewModel Inheritance object ChumonKeysViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonDate [Column(\"chumon_date\")] public DateOnly ChumonDate { get; set; } Property Value DateOnly ShiireSakiId [Column(\"shiire_saki_code\")] [MaxLength(10)] [Required] public string ShiireSakiId { get; set; } Property Value string ShiireSakiList public List<SelectListItem>? ShiireSakiList { get; set; } Property Value List<SelectListItem>"
  },
  "api/Convenience.Models.ViewModels.Chumon.ChumonViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.Chumon.ChumonViewModel.html",
    "title": "Class ChumonViewModel | Convenience",
    "keywords": "Class ChumonViewModel Namespace Convenience.Models.ViewModels.Chumon Assembly Convenience.dll public class ChumonViewModel Inheritance object ChumonViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonJisseki public ChumonJisseki ChumonJisseki { get; set; } Property Value ChumonJisseki IsNormal public bool? IsNormal { get; set; } Property Value bool? Remark public string? Remark { get; set; } Property Value string"
  },
  "api/Convenience.Models.ViewModels.Chumon.html": {
    "href": "api/Convenience.Models.ViewModels.Chumon.html",
    "title": "Namespace Convenience.Models.ViewModels.Chumon | Convenience",
    "keywords": "Namespace Convenience.Models.ViewModels.Chumon Classes ChumonKeysViewModel ChumonViewModel"
  },
  "api/Convenience.Models.ViewModels.Shiire.ShiireKeysViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.Shiire.ShiireKeysViewModel.html",
    "title": "Class ShiireKeysViewModel | Convenience",
    "keywords": "Class ShiireKeysViewModel Namespace Convenience.Models.ViewModels.Shiire Assembly Convenience.dll public class ShiireKeysViewModel Inheritance object ShiireKeysViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonId [MaxLength(20)] [Required] public string ChumonId { get; set; } Property Value string ChumonIdList public IList<SelectListItem> ChumonIdList { get; set; } Property Value IList<SelectListItem>"
  },
  "api/Convenience.Models.ViewModels.Shiire.ShiireViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.Shiire.ShiireViewModel.html",
    "title": "Class ShiireViewModel | Convenience",
    "keywords": "Class ShiireViewModel Namespace Convenience.Models.ViewModels.Shiire Assembly Convenience.dll public class ShiireViewModel Inheritance object ShiireViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonDate public DateOnly ChumonDate { get; set; } Property Value DateOnly ChumonId [MaxLength(20)] public string ChumonId { get; set; } Property Value string IsNormal public bool? IsNormal { get; set; } Property Value bool? Remark public string Remark { get; set; } Property Value string SeqByShiireDate public uint SeqByShiireDate { get; set; } Property Value uint ShiireDate public DateOnly ShiireDate { get; set; } Property Value DateOnly ShiireJissekis public IList<ShiireJisseki> ShiireJissekis { get; set; } Property Value IList<ShiireJisseki> ShiireSakiId [MaxLength(10)] public string ShiireSakiId { get; set; } Property Value string ShiireSakiKaisya [MaxLength(30)] public string ShiireSakiKaisya { get; set; } Property Value string"
  },
  "api/Convenience.Models.ViewModels.Shiire.html": {
    "href": "api/Convenience.Models.ViewModels.Shiire.html",
    "title": "Namespace Convenience.Models.ViewModels.Shiire | Convenience",
    "keywords": "Namespace Convenience.Models.ViewModels.Shiire Classes ShiireKeysViewModel ShiireViewModel"
  },
  "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.KeyEventRec.html": {
    "href": "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.KeyEventRec.html",
    "title": "Class ZaikoViewModel.KeyEventRec | Convenience",
    "keywords": "Class ZaikoViewModel.KeyEventRec Namespace Convenience.Models.ViewModels.Zaiko Assembly Convenience.dll public class ZaikoViewModel.KeyEventRec Inheritance object ZaikoViewModel.KeyEventRec Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Descending public bool Descending { get; set; } Property Value bool KeyEventData public string? KeyEventData { get; set; } Property Value string"
  },
  "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.SelecteWhereItem.html": {
    "href": "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.SelecteWhereItem.html",
    "title": "Class ZaikoViewModel.SelecteWhereItem | Convenience",
    "keywords": "Class ZaikoViewModel.SelecteWhereItem Namespace Convenience.Models.ViewModels.Zaiko Assembly Convenience.dll public class ZaikoViewModel.SelecteWhereItem Inheritance object ZaikoViewModel.SelecteWhereItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ComparisonOperator [MaxLength(2)] public string? ComparisonOperator { get; set; } Property Value string LeftSide public string? LeftSide { get; set; } Property Value string RightSide public string? RightSide { get; set; } Property Value string"
  },
  "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.ZaikoListLine.html": {
    "href": "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.ZaikoListLine.html",
    "title": "Class ZaikoViewModel.ZaikoListLine | Convenience",
    "keywords": "Class ZaikoViewModel.ZaikoListLine Namespace Convenience.Models.ViewModels.Zaiko Assembly Convenience.dll public class ZaikoViewModel.ZaikoListLine Inheritance object ZaikoViewModel.ZaikoListLine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChumonZan public decimal ChumonZan { get; set; } Property Value decimal LastDeliveryDate public DateOnly? LastDeliveryDate { get; set; } Property Value DateOnly? LastShiireDate public DateOnly LastShiireDate { get; set; } Property Value DateOnly ShiirePrdId public string ShiirePrdId { get; set; } Property Value string ShiireSakiId public string ShiireSakiId { get; set; } Property Value string ShohinId public string ShohinId { get; set; } Property Value string ShohinName public string ShohinName { get; set; } Property Value string SokoZaikoCaseSu public decimal SokoZaikoCaseSu { get; set; } Property Value decimal SokoZaikoSu public decimal SokoZaikoSu { get; set; } Property Value decimal"
  },
  "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.html": {
    "href": "api/Convenience.Models.ViewModels.Zaiko.ZaikoViewModel.html",
    "title": "Class ZaikoViewModel | Convenience",
    "keywords": "Class ZaikoViewModel Namespace Convenience.Models.ViewModels.Zaiko Assembly Convenience.dll public class ZaikoViewModel Inheritance object ZaikoViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ZaikoViewModel() public ZaikoViewModel() Fields ComparisonOperatorList public SelectList ComparisonOperatorList Field Value SelectList KeyList public SelectList KeyList Field Value SelectList LineCountForSelectorOfOderBy private const int LineCountForSelectorOfOderBy = 3 Field Value int LineCountForSelectorOfWhere private const int LineCountForSelectorOfWhere = 6 Field Value int SelectWhereLeftSideList public SelectList SelectWhereLeftSideList Field Value SelectList Properties KeyEventList public ZaikoViewModel.KeyEventRec[] KeyEventList { get; set; } Property Value KeyEventRec[] SelecteWhereItemArray public ZaikoViewModel.SelecteWhereItem[] SelecteWhereItemArray { get; set; } Property Value SelecteWhereItem[] zaikoListLine public IList<ZaikoViewModel.ZaikoListLine> zaikoListLine { get; set; } Property Value IList<ZaikoViewModel.ZaikoListLine>"
  },
  "api/Convenience.Models.ViewModels.Zaiko.html": {
    "href": "api/Convenience.Models.ViewModels.Zaiko.html",
    "title": "Namespace Convenience.Models.ViewModels.Zaiko | Convenience",
    "keywords": "Namespace Convenience.Models.ViewModels.Zaiko Classes ZaikoViewModel ZaikoViewModel.KeyEventRec ZaikoViewModel.SelecteWhereItem ZaikoViewModel.ZaikoListLine"
  },
  "api/Convenience.Models.html": {
    "href": "api/Convenience.Models.html",
    "title": "Namespace Convenience.Models | Convenience",
    "keywords": "Namespace Convenience.Models Classes ErrorViewModel Menu MenuItem"
  },
  "api/Convenience.Properties.Resources.html": {
    "href": "api/Convenience.Properties.Resources.html",
    "title": "Class Resources | Convenience",
    "keywords": "Class Resources Namespace Convenience.Properties Assembly Convenience.dll ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。 internal class Resources Inheritance object Resources Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Resources() internal Resources() Fields resourceCulture private static CultureInfo resourceCulture Field Value CultureInfo resourceMan private static ResourceManager resourceMan Field Value ResourceManager Properties Culture すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします 現在のスレッドの CurrentUICulture プロパティをオーバーライドします。 internal static CultureInfo Culture { get; set; } Property Value CultureInfo ResourceManager このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。 internal static ResourceManager ResourceManager { get; } Property Value ResourceManager"
  },
  "api/Convenience.Properties.html": {
    "href": "api/Convenience.Properties.html",
    "title": "Namespace Convenience.Properties | Convenience",
    "keywords": "Namespace Convenience.Properties Classes Resources ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。"
  },
  "api/Convenience.Views.Shiire.ShiireKeyInputModel.html": {
    "href": "api/Convenience.Views.Shiire.ShiireKeyInputModel.html",
    "title": "Class ShiireKeyInputModel | Convenience",
    "keywords": "Class ShiireKeyInputModel Namespace Convenience.Views.Shiire Assembly Convenience.dll public class ShiireKeyInputModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Inheritance object PageModel ShiireKeyInputModel Implements IAsyncPageFilter IPageFilter IFilterMetadata Inherited Members PageModel.TryUpdateModelAsync<TModel>(TModel) PageModel.TryUpdateModelAsync<TModel>(TModel, string) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) PageModel.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) PageModel.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) PageModel.TryUpdateModelAsync(object, Type, string) PageModel.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) PageModel.BadRequest() PageModel.BadRequest(object) PageModel.BadRequest(ModelStateDictionary) PageModel.Challenge() PageModel.Challenge(params string[]) PageModel.Challenge(AuthenticationProperties) PageModel.Challenge(AuthenticationProperties, params string[]) PageModel.Content(string) PageModel.Content(string, string) PageModel.Content(string, string, Encoding) PageModel.Content(string, MediaTypeHeaderValue) PageModel.Forbid() PageModel.Forbid(params string[]) PageModel.Forbid(AuthenticationProperties) PageModel.Forbid(AuthenticationProperties, params string[]) PageModel.File(byte[], string) PageModel.File(byte[], string, string) PageModel.File(Stream, string) PageModel.File(Stream, string, string) PageModel.File(string, string) PageModel.File(string, string, string) PageModel.LocalRedirect(string) PageModel.LocalRedirectPermanent(string) PageModel.LocalRedirectPreserveMethod(string) PageModel.LocalRedirectPermanentPreserveMethod(string) PageModel.NotFound() PageModel.NotFound(object) PageModel.Page() PageModel.PhysicalFile(string, string) PageModel.PhysicalFile(string, string, string) PageModel.Redirect(string) PageModel.RedirectPermanent(string) PageModel.RedirectPreserveMethod(string) PageModel.RedirectPermanentPreserveMethod(string) PageModel.RedirectToAction(string) PageModel.RedirectToAction(string, object) PageModel.RedirectToAction(string, string) PageModel.RedirectToAction(string, string, object) PageModel.RedirectToAction(string, string, string) PageModel.RedirectToAction(string, string, object, string) PageModel.RedirectToActionPreserveMethod(string, string, object, string) PageModel.RedirectToActionPermanent(string) PageModel.RedirectToActionPermanent(string, object) PageModel.RedirectToActionPermanent(string, string) PageModel.RedirectToActionPermanent(string, string, string) PageModel.RedirectToActionPermanent(string, string, object) PageModel.RedirectToActionPermanent(string, string, object, string) PageModel.RedirectToActionPermanentPreserveMethod(string, string, object, string) PageModel.RedirectToRoute(string) PageModel.RedirectToRoute(object) PageModel.RedirectToRoute(string, object) PageModel.RedirectToRoute(string, string) PageModel.RedirectToRoute(string, object, string) PageModel.RedirectToRoutePreserveMethod(string, object, string) PageModel.RedirectToRoutePermanent(string) PageModel.RedirectToRoutePermanent(object) PageModel.RedirectToRoutePermanent(string, object) PageModel.RedirectToRoutePermanent(string, string) PageModel.RedirectToRoutePermanent(string, object, string) PageModel.RedirectToRoutePermanentPreserveMethod(string, object, string) PageModel.RedirectToPage() PageModel.RedirectToPage(object) PageModel.RedirectToPage(string) PageModel.RedirectToPage(string, string) PageModel.RedirectToPage(string, string, object) PageModel.RedirectToPage(string, object) PageModel.RedirectToPage(string, string, string) PageModel.RedirectToPage(string, string, object, string) PageModel.RedirectToPagePermanent(string) PageModel.RedirectToPagePermanent(string, object) PageModel.RedirectToPagePermanent(string, string) PageModel.RedirectToPagePermanent(string, string, object) PageModel.RedirectToPagePermanent(string, string, string) PageModel.RedirectToPagePermanent(string, object, string) PageModel.RedirectToPagePermanent(string, string, object, string) PageModel.RedirectToPagePreserveMethod(string, string, object, string) PageModel.RedirectToPagePermanentPreserveMethod(string, string, object, string) PageModel.SignIn(ClaimsPrincipal, string) PageModel.SignIn(ClaimsPrincipal, AuthenticationProperties, string) PageModel.SignOut(params string[]) PageModel.SignOut(AuthenticationProperties, params string[]) PageModel.StatusCode(int) PageModel.StatusCode(int, object) PageModel.Unauthorized() PageModel.Partial(string) PageModel.Partial(string, object) PageModel.ViewComponent(string) PageModel.ViewComponent(Type) PageModel.ViewComponent(string, object) PageModel.ViewComponent(Type, object) PageModel.TryValidateModel(object) PageModel.TryValidateModel(object, string) PageModel.OnPageHandlerSelected(PageHandlerSelectedContext) PageModel.OnPageHandlerExecuting(PageHandlerExecutingContext) PageModel.OnPageHandlerExecuted(PageHandlerExecutedContext) PageModel.OnPageHandlerSelectionAsync(PageHandlerSelectedContext) PageModel.OnPageHandlerExecutionAsync(PageHandlerExecutingContext, PageHandlerExecutionDelegate) PageModel.PageContext PageModel.HttpContext PageModel.Request PageModel.Response PageModel.RouteData PageModel.ModelState PageModel.User PageModel.TempData PageModel.Url PageModel.MetadataProvider PageModel.ViewData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnGet() public void OnGet()"
  },
  "api/Convenience.Views.Shiire.html": {
    "href": "api/Convenience.Views.Shiire.html",
    "title": "Namespace Convenience.Views.Shiire | Convenience",
    "keywords": "Namespace Convenience.Views.Shiire Classes ShiireKeyInputModel"
  }
}